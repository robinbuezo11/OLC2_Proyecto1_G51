
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTK_orleftTK_andrightTK_notleftTK_equalequalTK_equalTK_notequalleftTK_lessTK_lessequalTK_greatTK_greatequalleftTK_plusTK_minusleftTK_multTK_divTK_modrightTK_uminusRW_add RW_alter RW_as RW_base RW_begin RW_bit RW_break RW_case RW_cast RW_column RW_concatenar RW_contar RW_continue RW_create RW_data RW_date RW_datetime RW_decimal RW_declare RW_delete RW_drop RW_else RW_end RW_for RW_foreing RW_from RW_function RW_hoy RW_if RW_in RW_insert RW_int RW_into RW_key RW_loop RW_nchar RW_not RW_null RW_nvarchar RW_primary RW_print RW_procedure RW_ref RW_rename RW_return RW_returns RW_select RW_set RW_substraer RW_table RW_then RW_to RW_truncate RW_update RW_use RW_values RW_when RW_where RW_while TK_and TK_comma TK_date TK_datetime TK_decimal TK_div TK_dot TK_equal TK_equalequal TK_field TK_great TK_greatequal TK_id TK_int TK_less TK_lessequal TK_lpar TK_minus TK_mod TK_mult TK_not TK_notequal TK_nvarchar TK_or TK_plus TK_point TK_rpar TK_semicolonINIT : INSTRUCTIONS\n            |INSTRUCTIONS : INSTRUCTIONS INSTRUCTION\n                    | INSTRUCTIONINSTRUCTION  : CREATEDB TK_semicolon\n                    | USEDB TK_semicolon\n                    | CREATETABLE TK_semicolon\n                    | ALTERTAB TK_semicolon\n                    | DROPTAB TK_semicolon\n                    | INSERTREG TK_semicolon\n                    | UPDATETAB TK_semicolon\n                    | TRUNCATETAB TK_semicolon\n                    | DELETETAB TK_semicolon\n                    | SELECT TK_semicolon\n                    | DECLAREID TK_semicolon\n                    | ASIGNID TK_semicolon\n                    | IFSTRUCT TK_semicolon\n                    | CASESTRUCT_S TK_semicolon\n                    | WHILESTRUCT TK_semicolon\n                    | FORSTRUCT TK_semicolon\n                    | FUNCDEC TK_semicolon\n                    | CALLFUNC TK_semicolon\n                    | ENCAP TK_semicolon\n                    | PRINT TK_semicolon\n                    | RW_break TK_semicolon\n                    | RW_continue TK_semicolon\n                    | RW_return EXP TK_semicolon\n                    | RW_return TK_semicolonCREATEDB     : RW_create RW_data RW_base TK_fieldUSEDB    : RW_use TK_fieldDECLAREID    : RW_declare DECLIDS\n                    | RW_declare TK_id TYPE TK_equal EXPDECLIDS  : DECLIDS TK_comma DECLID\n                | DECLIDDECLID : TK_id TYPEASIGNID : RW_set TK_id TK_equal EXPSELECT   : RW_select FIELDS RW_from TK_field RW_where EXP\n                | RW_select FIELDS RW_from TK_field\n                | RW_select LIST_IDSFIELDS   : LIST_IDS\n                | TK_multLIST_IDS : LIST_IDS TK_comma IDS\n                | IDSIDS  : EXP RW_as TK_nvarchar\n            | EXP RW_as TK_field\n            | EXPCREATETABLE : RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rparATTRIBUTES   : ATTRIBUTES TK_comma ATTRIBUTE\n                    | ATTRIBUTEATTRIBUTE    : TK_field TYPE TK_lpar TK_int TK_rpar PROPS\n                    | TK_field TYPE PROPS\n                    | TK_field TYPE TK_lpar TK_int TK_rpar\n                    | TK_field TYPEPROPS    : RW_not RW_null RW_primary RW_key FKEY\n                | RW_not RW_null RW_primary RW_key\n                | RW_primary RW_key RW_not RW_null FKEY\n                | RW_primary RW_key RW_not RW_null\n                | RW_not RW_null FKEY\n                | RW_not RW_null\n                | RW_primary RW_key FKEY\n                | RW_primary RW_key\n                | FKEYFKEY : RW_ref TK_field TK_lpar TK_field TK_rparALTERTAB : RW_alter RW_table TK_field ACTIONACTION   : RW_add RW_column TK_field TYPE\n                | RW_drop TK_field\n                | RW_rename RW_to TK_field\n                | RW_rename RW_column TK_field RW_to TK_fieldDROPTAB : RW_drop RW_table TK_fieldINSERTREG : RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rparLIST_ATTRIBS : LIST_ATTRIBS TK_comma TK_field\n                    | TK_fieldLIST_EXPS    : LIST_EXPS TK_comma EXP\n                    | EXPUPDATETAB : RW_update TK_field RW_set VALUESTAB RW_where EXPVALUESTAB    : VALUESTAB TK_comma VALUETAB\n                    | VALUETAB VALUETAB : TK_field TK_equal EXPTRUNCATETAB : RW_truncate RW_table TK_fieldDELETETAB : RW_delete RW_from TK_field RW_where EXPIFSTRUCT : RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_then INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_begin INSTRUCTIONS RW_endCASESTRUCT_S : RW_case EXP WHENELSE RW_end RW_as TK_field\n                    | RW_case EXP WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case EXP WHENELSE RW_end\n                    | RW_case WHENELSE RW_end RW_as TK_field\n                    | RW_case WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case WHENELSE RW_endWHENELSE : WHENS ELSE\n                | WHENS\n                | ELSEWHENS    : WHENS WHEN\n                | WHENWHEN : RW_when EXP RW_then EXPELSE : RW_else RW_then EXPPRINT : RW_print EXPWHILESTRUCT : RW_while EXP ENCAPFORSTRUCT : RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loopFUNCDEC  : RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_procedure TK_field PARAMS RW_as ENCAP\n                | RW_create RW_procedure TK_field RW_as ENCAP\n                | RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP\n                | RW_create RW_procedure TK_field ENCAPPARAMS   : PARAMS TK_comma PARAM\n                | PARAMPARAM    : TK_id RW_as TYPEENCAP    : RW_begin INSTRUCTIONS RW_end\n                | RW_begin RW_endCALLFUNC : TK_field TK_lpar ARGS TK_rpar\n                | TK_field TK_lpar TK_rparARGS : ARGS TK_comma EXP\n            | EXPEXP  : ARITHMETICS\n            | RELATIONALS\n            | LOGICS\n            | CAST\n            | NATIVEFUNC\n            | CALLFUNC\n            | TERNARY\n            | TK_id\n            | TK_id TK_point TK_id\n            | TK_field\n            | TK_field TK_point TK_field\n            | TK_nvarchar\n            | TK_int\n            | TK_decimal\n            | TK_date\n            | TK_datetime\n            | RW_null\n            | TK_lpar EXP TK_rparARITHMETICS  : EXP TK_plus EXP\n                    | EXP TK_minus EXP\n                    | EXP TK_mult EXP\n                    | EXP TK_div EXP\n                    | EXP TK_mod EXP\n                    | TK_minus EXP %prec TK_uminusRELATIONALS  : EXP TK_equalequal EXP\n                    | EXP TK_equal EXP\n                    | EXP TK_notequal EXP\n                    | EXP TK_lessequal EXP\n                    | EXP TK_greatequal EXP\n                    | EXP TK_less EXP\n                    | EXP TK_great EXPLOGICS   : EXP TK_and EXP\n                | EXP TK_or EXP\n                | TK_not EXPCAST : RW_cast TK_lpar EXP RW_as TYPE TK_rparNATIVEFUNC   : RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar\n                    | RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar\n                    | RW_hoy TK_lpar TK_rparTERNARY : RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rparTYPE : RW_int\n            | RW_bit\n            | RW_decimal\n            | RW_date\n            | RW_datetime\n            | RW_nchar\n            | RW_nvarchar'
    
_lr_action_items = {'$end':([0,1,2,3,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,127,],[-2,0,-1,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-27,]),'RW_break':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[24,24,-4,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,24,-27,24,24,24,24,24,24,]),'RW_continue':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[25,25,-4,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,25,-27,25,25,25,25,25,25,]),'RW_return':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[26,26,-4,26,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,26,-27,26,26,26,26,26,26,]),'RW_create':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[27,27,-4,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,27,-27,27,27,27,27,27,27,]),'RW_use':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[29,29,-4,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,29,-27,29,29,29,29,29,29,]),'RW_alter':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[30,30,-4,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,30,-27,30,30,30,30,30,30,]),'RW_drop':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,159,178,179,239,240,274,304,],[31,31,-4,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,31,-27,224,31,31,31,31,31,31,]),'RW_insert':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[32,32,-4,32,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,32,-27,32,32,32,32,32,32,]),'RW_update':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[33,33,-4,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,33,-27,33,33,33,33,33,33,]),'RW_truncate':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[35,35,-4,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,35,-27,35,35,35,35,35,35,]),'RW_delete':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[36,36,-4,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,36,-27,36,36,36,36,36,36,]),'RW_select':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[37,37,-4,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,37,-27,37,37,37,37,37,37,]),'RW_declare':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[38,38,-4,38,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,38,-27,38,38,38,38,38,38,]),'RW_set':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,102,115,127,178,179,239,240,274,304,],[34,34,-4,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,162,34,-27,34,34,34,34,34,34,]),'RW_if':([0,2,3,26,37,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,85,86,87,97,115,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,178,179,185,188,221,231,238,239,240,244,247,248,249,267,268,271,274,275,281,304,311,312,327,338,357,],[39,39,-4,92,92,92,39,92,92,92,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,92,92,92,92,39,92,-27,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,39,39,92,92,92,92,92,39,39,92,92,92,92,92,92,92,39,305,92,39,92,92,339,92,92,]),'RW_case':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[41,41,-4,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,41,-27,41,41,41,41,41,41,]),'RW_while':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[42,42,-4,42,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,42,-27,42,42,42,42,42,42,]),'RW_for':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[43,43,-4,43,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,43,-27,43,43,43,43,43,43,]),'TK_field':([0,2,3,26,29,33,37,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,85,86,87,94,95,96,97,99,100,101,104,105,115,123,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,147,148,149,151,152,162,163,166,167,168,178,179,185,188,212,221,224,226,231,238,239,240,242,244,247,248,249,261,263,264,267,268,269,271,274,277,281,288,299,304,311,312,318,324,338,348,357,],[28,28,-4,78,98,102,78,78,28,78,78,78,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,78,78,78,153,154,155,78,159,160,161,164,165,28,78,-27,78,78,78,78,78,78,78,78,78,78,78,78,78,78,204,78,78,78,78,211,227,78,232,234,78,28,28,78,78,250,78,262,265,78,78,28,28,278,78,78,78,78,295,296,297,78,78,227,78,28,306,78,250,326,28,78,78,334,337,78,355,78,]),'RW_begin':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,115,124,127,145,146,155,157,171,172,173,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,215,220,239,240,255,274,293,304,308,309,310,321,335,341,342,],[40,40,-4,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,179,40,40,-27,-138,-148,40,-112,-154,-155,-156,-157,-158,-159,-160,40,40,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,40,-111,40,40,40,40,40,40,40,-149,-150,40,40,-151,-153,]),'RW_print':([0,2,3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,115,127,178,179,239,240,274,304,],[44,44,-4,44,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,44,-27,44,44,44,44,44,44,]),'RW_end':([3,40,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,115,118,119,120,121,127,145,146,157,181,183,184,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,220,239,240,243,280,304,309,310,341,342,],[-4,116,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,180,182,-91,-92,-94,-27,-138,-148,-112,241,-90,-93,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,-111,275,276,-96,-95,327,-149,-150,-151,-153,]),'RW_else':([3,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,117,119,121,127,145,146,157,184,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,220,239,280,309,310,341,342,],[-4,122,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,122,122,-94,-27,-138,-148,-112,-93,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,-111,274,-95,-149,-150,-151,-153,]),'TK_semicolon':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,98,107,108,110,111,113,116,126,145,146,157,160,164,170,171,172,173,174,175,176,177,180,182,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,211,216,220,222,230,232,233,234,235,236,241,257,262,270,272,273,276,278,279,287,291,296,301,303,305,306,307,309,310,322,323,336,337,339,340,341,342,349,356,],[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,127,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,-30,-46,-39,-43,-31,-34,-110,-97,-138,-148,-112,-69,-79,-35,-154,-155,-156,-157,-158,-159,-160,-109,-89,-98,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,-29,-105,-111,-64,-36,-38,-44,-45,-42,-33,-86,-103,-66,-80,-35,-32,-83,-87,-88,-47,-102,-67,-75,-37,-82,-84,-85,-149,-150,-104,-65,-101,-68,-81,-99,-151,-153,-100,-70,]),'TK_id':([26,34,37,38,39,41,42,43,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,147,148,149,151,155,163,168,169,185,188,213,217,221,231,238,244,247,248,249,256,267,268,271,281,311,312,338,357,],[77,103,77,112,77,77,77,125,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,203,77,77,77,77,219,77,77,237,77,77,219,219,77,77,77,77,77,77,77,219,77,77,77,77,77,77,77,77,]),'TK_nvarchar':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,167,168,185,188,221,231,238,242,244,247,248,249,267,268,271,277,281,311,312,338,357,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,233,79,79,79,79,79,79,279,79,79,79,79,79,79,79,307,79,79,79,79,79,]),'TK_int':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,313,338,357,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,331,80,80,]),'TK_decimal':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'TK_date':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'TK_datetime':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'RW_null':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,315,338,346,357,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,332,84,354,84,]),'TK_lpar':([26,28,37,39,41,42,44,78,85,86,87,88,89,90,91,92,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,153,154,155,161,163,168,171,172,173,174,175,176,177,185,188,221,231,238,244,247,248,249,267,268,271,281,286,311,312,325,334,338,357,],[85,97,85,85,85,85,85,97,85,85,85,147,148,149,150,151,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,212,213,217,226,85,85,-154,-155,-156,-157,-158,-159,-160,85,85,85,85,85,85,85,85,85,85,85,85,85,313,85,85,338,348,85,85,]),'TK_minus':([26,37,39,41,42,44,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,97,107,114,117,123,124,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,148,149,151,157,158,163,168,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,221,230,231,238,243,244,245,247,248,249,260,267,268,270,271,273,280,281,283,284,285,300,301,303,308,309,310,311,312,329,330,338,341,342,351,357,361,],[86,86,86,86,86,86,129,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,86,86,86,86,129,129,129,86,129,129,86,86,86,86,86,86,86,86,86,86,86,86,86,86,129,-138,129,86,86,86,86,-112,129,86,86,86,129,86,-133,-134,-135,-136,-137,129,129,129,129,129,129,129,129,129,-123,-125,-132,129,129,129,-152,129,-111,86,129,86,86,129,86,129,86,86,86,129,86,86,129,86,129,129,86,129,129,129,129,129,129,129,-149,-150,86,86,129,129,86,-151,-153,129,86,129,]),'TK_not':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'RW_cast':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'RW_concatenar':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'RW_substraer':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'RW_hoy':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'RW_data':([27,],[93,]),'RW_table':([27,30,31,35,],[94,99,100,104,]),'RW_function':([27,],[95,]),'RW_procedure':([27,],[96,]),'RW_into':([32,],[101,]),'RW_from':([36,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,106,107,108,109,110,145,146,157,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,220,233,234,235,309,310,341,342,],[105,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,166,-46,-40,-41,-43,-138,-148,-112,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,-111,-44,-45,-42,-149,-150,-151,-153,]),'TK_mult':([37,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[109,130,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,130,130,130,130,130,130,-138,130,-112,130,130,130,130,-135,-136,-137,130,130,130,130,130,130,130,130,130,-123,-125,-132,130,130,130,-152,130,-111,130,130,130,130,130,130,130,130,130,130,130,130,130,130,-149,-150,130,130,-151,-153,130,130,]),'RW_when':([41,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,117,119,121,145,146,157,184,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,220,280,309,310,341,342,],[123,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,123,123,-94,-138,-148,-112,-93,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,-111,-95,-149,-150,-151,-153,]),'TK_plus':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[128,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,128,128,128,128,128,128,-138,128,-112,128,128,-133,-134,-135,-136,-137,128,128,128,128,128,128,128,128,128,-123,-125,-132,128,128,128,-152,128,-111,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-149,-150,128,128,-151,-153,128,128,]),'TK_div':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[131,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,131,131,131,131,131,131,-138,131,-112,131,131,131,131,-135,-136,-137,131,131,131,131,131,131,131,131,131,-123,-125,-132,131,131,131,-152,131,-111,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-149,-150,131,131,-151,-153,131,131,]),'TK_mod':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[132,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,132,132,132,132,132,132,-138,132,-112,132,132,132,132,-135,-136,-137,132,132,132,132,132,132,132,132,132,-123,-125,-132,132,132,132,-152,132,-111,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-149,-150,132,132,-151,-153,132,132,]),'TK_equalequal':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[133,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,133,133,133,133,133,133,-138,133,-112,133,133,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,133,133,-123,-125,-132,133,133,133,-152,133,-111,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-149,-150,133,133,-151,-153,133,133,]),'TK_equal':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,103,107,114,117,124,126,144,145,146,157,158,170,171,172,173,174,175,176,177,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,227,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[134,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,163,134,134,134,134,134,134,-138,134,-112,134,238,-154,-155,-156,-157,-158,-159,-160,134,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,134,134,-123,-125,-132,134,134,134,-152,134,-111,267,134,134,134,134,134,134,134,134,134,134,134,134,134,134,-149,-150,134,134,-151,-153,134,134,]),'TK_notequal':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[135,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,135,135,135,135,135,135,-138,135,-112,135,135,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,135,135,-123,-125,-132,135,135,135,-152,135,-111,135,135,135,135,135,135,135,135,135,135,135,135,135,135,-149,-150,135,135,-151,-153,135,135,]),'TK_lessequal':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[136,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,136,136,136,136,136,136,-138,136,-112,136,136,-133,-134,-135,-136,-137,136,136,136,-142,-143,-144,-145,136,136,-123,-125,-132,136,136,136,-152,136,-111,136,136,136,136,136,136,136,136,136,136,136,136,136,136,-149,-150,136,136,-151,-153,136,136,]),'TK_greatequal':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[137,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,137,137,137,137,137,137,-138,137,-112,137,137,-133,-134,-135,-136,-137,137,137,137,-142,-143,-144,-145,137,137,-123,-125,-132,137,137,137,-152,137,-111,137,137,137,137,137,137,137,137,137,137,137,137,137,137,-149,-150,137,137,-151,-153,137,137,]),'TK_less':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[138,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,138,138,138,138,138,138,-138,138,-112,138,138,-133,-134,-135,-136,-137,138,138,138,-142,-143,-144,-145,138,138,-123,-125,-132,138,138,138,-152,138,-111,138,138,138,138,138,138,138,138,138,138,138,138,138,138,-149,-150,138,138,-151,-153,138,138,]),'TK_great':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[139,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,139,139,139,139,139,139,-138,139,-112,139,139,-133,-134,-135,-136,-137,139,139,139,-142,-143,-144,-145,139,139,-123,-125,-132,139,139,139,-152,139,-111,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-149,-150,139,139,-151,-153,139,139,]),'TK_and':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[140,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,140,140,140,140,140,140,-138,-148,-112,140,140,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,140,-123,-125,-132,140,140,140,-152,140,-111,140,140,140,140,140,140,140,140,140,140,140,140,140,140,-149,-150,140,140,-151,-153,140,140,]),'TK_or':([68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,114,117,124,126,144,145,146,157,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,220,230,243,245,260,270,273,280,283,284,285,300,301,303,308,309,310,329,330,341,342,351,361,],[141,-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,141,141,141,141,141,141,-138,-148,-112,141,141,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,141,141,141,-152,141,-111,141,141,141,141,141,141,141,141,141,141,141,141,141,141,-149,-150,141,141,-151,-153,141,141,]),'RW_as':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,145,146,155,157,171,172,173,174,175,176,177,182,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,209,214,218,219,220,241,292,294,309,310,341,342,],[-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,167,-138,-148,215,-112,-154,-155,-156,-157,-158,-159,-160,242,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,246,-152,255,-107,259,-111,277,-106,-108,-149,-150,-151,-153,]),'TK_comma':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,107,108,110,111,113,145,146,156,157,158,170,171,172,173,174,175,176,177,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,214,218,220,228,229,233,234,235,236,251,252,253,258,260,265,266,272,284,285,286,292,294,300,302,309,310,314,317,319,326,332,333,341,342,343,345,347,350,351,352,353,354,358,359,360,361,],[-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,-46,168,-43,169,-34,-138,-148,221,-112,-114,-35,-154,-155,-156,-157,-158,-159,-160,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,247,248,-152,249,256,-107,-111,269,-77,-44,-45,-42,-33,288,-49,256,256,-113,-72,299,-35,311,312,-53,-106,-108,-78,-76,-149,-150,-51,-62,-48,-71,-59,-61,-151,-153,-52,-58,-60,357,-74,-50,-55,-57,-54,-56,-63,-73,]),'RW_then':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,122,145,146,157,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,220,309,310,341,342,],[-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,178,185,-138,-148,-112,244,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,-111,-149,-150,-151,-153,]),'TK_rpar':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,97,144,145,146,150,156,157,158,171,172,173,174,175,176,177,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,213,218,220,251,252,253,258,260,265,266,282,283,286,292,294,309,310,314,317,319,326,329,330,331,332,333,341,342,343,345,347,350,351,352,353,354,355,358,359,360,361,],[-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,157,205,-138,-148,209,220,-112,-114,-154,-155,-156,-157,-158,-159,-160,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,254,-107,-111,287,-49,289,293,-113,-72,298,309,310,-53,-106,-108,-149,-150,-51,-62,-48,-71,341,342,343,-59,-61,-151,-153,-52,-58,-60,356,-74,-50,-55,-57,360,-54,-56,-63,-73,]),'TK_dot':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,145,146,157,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,220,245,309,310,341,342,],[-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,-138,-148,-112,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,-111,281,-149,-150,-151,-153,]),'RW_where':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,145,146,157,165,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,220,228,229,232,300,302,309,310,341,342,],[-115,-116,-117,-118,-119,-120,-121,-122,-124,-126,-127,-128,-129,-130,-131,-138,-148,-112,231,-133,-134,-135,-136,-137,-139,-140,-141,-142,-143,-144,-145,-146,-147,-123,-125,-132,-152,-111,268,-77,271,-78,-76,-149,-150,-151,-153,]),'TK_point':([77,78,],[142,143,]),'RW_base':([93,],[152,]),'RW_int':([112,237,246,250,259,290,295,320,],[171,171,171,171,171,171,171,171,]),'RW_bit':([112,237,246,250,259,290,295,320,],[172,172,172,172,172,172,172,172,]),'RW_decimal':([112,237,246,250,259,290,295,320,],[173,173,173,173,173,173,173,173,]),'RW_date':([112,237,246,250,259,290,295,320,],[174,174,174,174,174,174,174,174,]),'RW_datetime':([112,237,246,250,259,290,295,320,],[175,175,175,175,175,175,175,175,]),'RW_nchar':([112,237,246,250,259,290,295,320,],[176,176,176,176,176,176,176,176,]),'RW_nvarchar':([112,237,246,250,259,290,295,320,],[177,177,177,177,177,177,177,177,]),'RW_loop':([116,180,328,],[-110,-109,340,]),'RW_in':([125,],[188,]),'RW_add':([159,],[223,]),'RW_rename':([159,],[225,]),'RW_not':([171,172,173,174,175,176,177,286,333,343,],[-154,-155,-156,-157,-158,-159,-160,315,346,315,]),'RW_primary':([171,172,173,174,175,176,177,286,332,343,],[-154,-155,-156,-157,-158,-159,-160,316,344,316,]),'RW_ref':([171,172,173,174,175,176,177,286,332,333,343,353,354,],[-154,-155,-156,-157,-158,-159,-160,318,318,318,318,318,318,]),'RW_column':([223,225,],[261,264,]),'RW_to':([225,297,],[263,324,]),'RW_returns':([254,289,],[290,320,]),'RW_values':([298,],[325,]),'RW_key':([316,344,],[333,353,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'INSTRUCTIONS':([0,40,178,179,274,],[2,115,239,240,304,]),'INSTRUCTION':([0,2,40,115,178,179,239,240,274,304,],[3,45,3,45,3,3,45,45,3,45,]),'CREATEDB':([0,2,40,115,178,179,239,240,274,304,],[4,4,4,4,4,4,4,4,4,4,]),'USEDB':([0,2,40,115,178,179,239,240,274,304,],[5,5,5,5,5,5,5,5,5,5,]),'CREATETABLE':([0,2,40,115,178,179,239,240,274,304,],[6,6,6,6,6,6,6,6,6,6,]),'ALTERTAB':([0,2,40,115,178,179,239,240,274,304,],[7,7,7,7,7,7,7,7,7,7,]),'DROPTAB':([0,2,40,115,178,179,239,240,274,304,],[8,8,8,8,8,8,8,8,8,8,]),'INSERTREG':([0,2,40,115,178,179,239,240,274,304,],[9,9,9,9,9,9,9,9,9,9,]),'UPDATETAB':([0,2,40,115,178,179,239,240,274,304,],[10,10,10,10,10,10,10,10,10,10,]),'TRUNCATETAB':([0,2,40,115,178,179,239,240,274,304,],[11,11,11,11,11,11,11,11,11,11,]),'DELETETAB':([0,2,40,115,178,179,239,240,274,304,],[12,12,12,12,12,12,12,12,12,12,]),'SELECT':([0,2,40,115,178,179,239,240,274,304,],[13,13,13,13,13,13,13,13,13,13,]),'DECLAREID':([0,2,40,115,178,179,239,240,274,304,],[14,14,14,14,14,14,14,14,14,14,]),'ASIGNID':([0,2,40,115,178,179,239,240,274,304,],[15,15,15,15,15,15,15,15,15,15,]),'IFSTRUCT':([0,2,40,115,178,179,239,240,274,304,],[16,16,16,16,16,16,16,16,16,16,]),'CASESTRUCT_S':([0,2,40,115,178,179,239,240,274,304,],[17,17,17,17,17,17,17,17,17,17,]),'WHILESTRUCT':([0,2,40,115,178,179,239,240,274,304,],[18,18,18,18,18,18,18,18,18,18,]),'FORSTRUCT':([0,2,40,115,178,179,239,240,274,304,],[19,19,19,19,19,19,19,19,19,19,]),'FUNCDEC':([0,2,40,115,178,179,239,240,274,304,],[20,20,20,20,20,20,20,20,20,20,]),'CALLFUNC':([0,2,26,37,39,40,41,42,44,85,86,87,97,115,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,178,179,185,188,221,231,238,239,240,244,247,248,249,267,268,271,274,281,304,311,312,338,357,],[21,21,75,75,75,21,75,75,75,75,75,75,75,21,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,21,21,75,75,75,75,75,21,21,75,75,75,75,75,75,75,21,75,21,75,75,75,75,]),'ENCAP':([0,2,40,115,124,155,178,179,215,239,240,255,274,293,304,308,321,335,],[22,22,22,22,187,216,22,22,257,22,22,291,22,322,22,328,336,349,]),'PRINT':([0,2,40,115,178,179,239,240,274,304,],[23,23,23,23,23,23,23,23,23,23,]),'EXP':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[68,107,114,117,124,126,144,145,146,158,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,206,207,208,210,230,107,243,245,260,270,273,280,283,284,285,300,301,303,308,329,330,351,361,]),'ARITHMETICS':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'RELATIONALS':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'LOGICS':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'CAST':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'NATIVEFUNC':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'TERNARY':([26,37,39,41,42,44,85,86,87,97,123,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,149,151,163,168,185,188,221,231,238,244,247,248,249,267,268,271,281,311,312,338,357,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'FIELDS':([37,],[106,]),'LIST_IDS':([37,],[108,]),'IDS':([37,168,],[110,235,]),'DECLIDS':([38,],[111,]),'DECLID':([38,169,],[113,236,]),'WHENELSE':([41,117,],[118,181,]),'WHENS':([41,117,],[119,119,]),'ELSE':([41,117,119,],[120,120,183,]),'WHEN':([41,117,119,],[121,121,184,]),'ARGS':([97,],[156,]),'TYPE':([112,237,246,250,259,290,295,320,],[170,272,282,286,294,321,323,335,]),'PARAMS':([155,213,217,],[214,253,258,]),'PARAM':([155,213,217,256,],[218,218,218,292,]),'ACTION':([159,],[222,]),'VALUESTAB':([162,],[228,]),'VALUETAB':([162,269,],[229,302,]),'ATTRIBUTES':([212,],[251,]),'ATTRIBUTE':([212,288,],[252,319,]),'LIST_ATTRIBS':([226,],[266,]),'PROPS':([286,343,],[314,352,]),'FKEY':([286,332,333,343,353,354,],[317,345,347,317,358,359,]),'LIST_EXPS':([338,],[350,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> INSTRUCTIONS','INIT',1,'p_INIT','Parser.py',53),
  ('INIT -> <empty>','INIT',0,'p_INIT','Parser.py',54),
  ('INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION','INSTRUCTIONS',2,'p_INSTRUCTIONS','Parser.py',59),
  ('INSTRUCTIONS -> INSTRUCTION','INSTRUCTIONS',1,'p_INSTRUCTIONS','Parser.py',60),
  ('INSTRUCTION -> CREATEDB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',65),
  ('INSTRUCTION -> USEDB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',66),
  ('INSTRUCTION -> CREATETABLE TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',67),
  ('INSTRUCTION -> ALTERTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',68),
  ('INSTRUCTION -> DROPTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',69),
  ('INSTRUCTION -> INSERTREG TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',70),
  ('INSTRUCTION -> UPDATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',71),
  ('INSTRUCTION -> TRUNCATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',72),
  ('INSTRUCTION -> DELETETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',73),
  ('INSTRUCTION -> SELECT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',74),
  ('INSTRUCTION -> DECLAREID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',75),
  ('INSTRUCTION -> ASIGNID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',76),
  ('INSTRUCTION -> IFSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',77),
  ('INSTRUCTION -> CASESTRUCT_S TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',78),
  ('INSTRUCTION -> WHILESTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',79),
  ('INSTRUCTION -> FORSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',80),
  ('INSTRUCTION -> FUNCDEC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',81),
  ('INSTRUCTION -> CALLFUNC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',82),
  ('INSTRUCTION -> ENCAP TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',83),
  ('INSTRUCTION -> PRINT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',84),
  ('INSTRUCTION -> RW_break TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',85),
  ('INSTRUCTION -> RW_continue TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',86),
  ('INSTRUCTION -> RW_return EXP TK_semicolon','INSTRUCTION',3,'p_INSTRUCTION','Parser.py',87),
  ('INSTRUCTION -> RW_return TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',88),
  ('CREATEDB -> RW_create RW_data RW_base TK_field','CREATEDB',4,'p_CREATEDB','Parser.py',98),
  ('USEDB -> RW_use TK_field','USEDB',2,'p_USEDB','Parser.py',103),
  ('DECLAREID -> RW_declare DECLIDS','DECLAREID',2,'p_DECLAREID','Parser.py',108),
  ('DECLAREID -> RW_declare TK_id TYPE TK_equal EXP','DECLAREID',5,'p_DECLAREID','Parser.py',109),
  ('DECLIDS -> DECLIDS TK_comma DECLID','DECLIDS',3,'p_DECLIDS','Parser.py',114),
  ('DECLIDS -> DECLID','DECLIDS',1,'p_DECLIDS','Parser.py',115),
  ('DECLID -> TK_id TYPE','DECLID',2,'p_DECLID','Parser.py',120),
  ('ASIGNID -> RW_set TK_id TK_equal EXP','ASIGNID',4,'p_ASIGNID','Parser.py',125),
  ('SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP','SELECT',6,'p_SELECT','Parser.py',130),
  ('SELECT -> RW_select FIELDS RW_from TK_field','SELECT',4,'p_SELECT','Parser.py',131),
  ('SELECT -> RW_select LIST_IDS','SELECT',2,'p_SELECT','Parser.py',132),
  ('FIELDS -> LIST_IDS','FIELDS',1,'p_FIELDS','Parser.py',138),
  ('FIELDS -> TK_mult','FIELDS',1,'p_FIELDS','Parser.py',139),
  ('LIST_IDS -> LIST_IDS TK_comma IDS','LIST_IDS',3,'p_LIST_IDS','Parser.py',143),
  ('LIST_IDS -> IDS','LIST_IDS',1,'p_LIST_IDS','Parser.py',144),
  ('IDS -> EXP RW_as TK_nvarchar','IDS',3,'p_IDS','Parser.py',149),
  ('IDS -> EXP RW_as TK_field','IDS',3,'p_IDS','Parser.py',150),
  ('IDS -> EXP','IDS',1,'p_IDS','Parser.py',151),
  ('CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar','CREATETABLE',6,'p_CREATETABLE','Parser.py',157),
  ('ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE','ATTRIBUTES',3,'p_ATTRIBUTES','Parser.py',161),
  ('ATTRIBUTES -> ATTRIBUTE','ATTRIBUTES',1,'p_ATTRIBUTES','Parser.py',162),
  ('ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS','ATTRIBUTE',6,'p_ATTRIBUTE','Parser.py',167),
  ('ATTRIBUTE -> TK_field TYPE PROPS','ATTRIBUTE',3,'p_ATTRIBUTE','Parser.py',168),
  ('ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar','ATTRIBUTE',5,'p_ATTRIBUTE','Parser.py',169),
  ('ATTRIBUTE -> TK_field TYPE','ATTRIBUTE',2,'p_ATTRIBUTE','Parser.py',170),
  ('PROPS -> RW_not RW_null RW_primary RW_key FKEY','PROPS',5,'p_PROPS','Parser.py',178),
  ('PROPS -> RW_not RW_null RW_primary RW_key','PROPS',4,'p_PROPS','Parser.py',179),
  ('PROPS -> RW_primary RW_key RW_not RW_null FKEY','PROPS',5,'p_PROPS','Parser.py',180),
  ('PROPS -> RW_primary RW_key RW_not RW_null','PROPS',4,'p_PROPS','Parser.py',181),
  ('PROPS -> RW_not RW_null FKEY','PROPS',3,'p_PROPS','Parser.py',182),
  ('PROPS -> RW_not RW_null','PROPS',2,'p_PROPS','Parser.py',183),
  ('PROPS -> RW_primary RW_key FKEY','PROPS',3,'p_PROPS','Parser.py',184),
  ('PROPS -> RW_primary RW_key','PROPS',2,'p_PROPS','Parser.py',185),
  ('PROPS -> FKEY','PROPS',1,'p_PROPS','Parser.py',186),
  ('FKEY -> RW_ref TK_field TK_lpar TK_field TK_rpar','FKEY',5,'p_FKEY','Parser.py',196),
  ('ALTERTAB -> RW_alter RW_table TK_field ACTION','ALTERTAB',4,'p_ALTERTAB','Parser.py',201),
  ('ACTION -> RW_add RW_column TK_field TYPE','ACTION',4,'p_ACTION','Parser.py',205),
  ('ACTION -> RW_drop TK_field','ACTION',2,'p_ACTION','Parser.py',206),
  ('ACTION -> RW_rename RW_to TK_field','ACTION',3,'p_ACTION','Parser.py',207),
  ('ACTION -> RW_rename RW_column TK_field RW_to TK_field','ACTION',5,'p_ACTION','Parser.py',208),
  ('DROPTAB -> RW_drop RW_table TK_field','DROPTAB',3,'p_DROPTAB','Parser.py',216),
  ('INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar','INSERTREG',10,'p_INSERTREG','Parser.py',221),
  ('LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field','LIST_ATTRIBS',3,'p_LIST_ATTRIBS','Parser.py',226),
  ('LIST_ATTRIBS -> TK_field','LIST_ATTRIBS',1,'p_LIST_ATTRIBS','Parser.py',227),
  ('LIST_EXPS -> LIST_EXPS TK_comma EXP','LIST_EXPS',3,'p_LIST_EXPS','Parser.py',232),
  ('LIST_EXPS -> EXP','LIST_EXPS',1,'p_LIST_EXPS','Parser.py',233),
  ('UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP','UPDATETAB',6,'p_UPDATETAB','Parser.py',239),
  ('VALUESTAB -> VALUESTAB TK_comma VALUETAB','VALUESTAB',3,'p_VALUESTAB','Parser.py',243),
  ('VALUESTAB -> VALUETAB','VALUESTAB',1,'p_VALUESTAB','Parser.py',244),
  ('VALUETAB -> TK_field TK_equal EXP','VALUETAB',3,'p_VALUETAB','Parser.py',249),
  ('TRUNCATETAB -> RW_truncate RW_table TK_field','TRUNCATETAB',3,'p_TRUNCATETAB','Parser.py',254),
  ('DELETETAB -> RW_delete RW_from TK_field RW_where EXP','DELETETAB',5,'p_DELETETAB','Parser.py',259),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if','IFSTRUCT',8,'p_IFSTRUCT','Parser.py',264),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if','IFSTRUCT',6,'p_IFSTRUCT','Parser.py',265),
  ('IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end','IFSTRUCT',5,'p_IFSTRUCT','Parser.py',266),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',273),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',274),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end','CASESTRUCT_S',4,'p_CASESTRUCT_S','Parser.py',275),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',276),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',277),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end','CASESTRUCT_S',3,'p_CASESTRUCT_S','Parser.py',278),
  ('WHENELSE -> WHENS ELSE','WHENELSE',2,'p_WHENELSE','Parser.py',285),
  ('WHENELSE -> WHENS','WHENELSE',1,'p_WHENELSE','Parser.py',286),
  ('WHENELSE -> ELSE','WHENELSE',1,'p_WHENELSE','Parser.py',287),
  ('WHENS -> WHENS WHEN','WHENS',2,'p_WHENS','Parser.py',293),
  ('WHENS -> WHEN','WHENS',1,'p_WHENS','Parser.py',294),
  ('WHEN -> RW_when EXP RW_then EXP','WHEN',4,'p_WHEN','Parser.py',299),
  ('ELSE -> RW_else RW_then EXP','ELSE',3,'p_ELSE','Parser.py',303),
  ('PRINT -> RW_print EXP','PRINT',2,'p_PRINT','Parser.py',308),
  ('WHILESTRUCT -> RW_while EXP ENCAP','WHILESTRUCT',3,'p_WHILESTRUCT','Parser.py',312),
  ('FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop','FORSTRUCT',8,'p_FORSTRUCT','Parser.py',317),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP','FUNCDEC',9,'p_FUNCDEC','Parser.py',321),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP','FUNCDEC',8,'p_FUNCDEC','Parser.py',322),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP','FUNCDEC',6,'p_FUNCDEC','Parser.py',323),
  ('FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',324),
  ('FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP','FUNCDEC',7,'p_FUNCDEC','Parser.py',325),
  ('FUNCDEC -> RW_create RW_procedure TK_field ENCAP','FUNCDEC',4,'p_FUNCDEC','Parser.py',326),
  ('PARAMS -> PARAMS TK_comma PARAM','PARAMS',3,'p_PARAMS','Parser.py',335),
  ('PARAMS -> PARAM','PARAMS',1,'p_PARAMS','Parser.py',336),
  ('PARAM -> TK_id RW_as TYPE','PARAM',3,'p_PARAM','Parser.py',341),
  ('ENCAP -> RW_begin INSTRUCTIONS RW_end','ENCAP',3,'p_ENCAP','Parser.py',346),
  ('ENCAP -> RW_begin RW_end','ENCAP',2,'p_ENCAP','Parser.py',347),
  ('CALLFUNC -> TK_field TK_lpar ARGS TK_rpar','CALLFUNC',4,'p_CALLFUNC','Parser.py',353),
  ('CALLFUNC -> TK_field TK_lpar TK_rpar','CALLFUNC',3,'p_CALLFUNC','Parser.py',354),
  ('ARGS -> ARGS TK_comma EXP','ARGS',3,'p_ARGS','Parser.py',359),
  ('ARGS -> EXP','ARGS',1,'p_ARGS','Parser.py',360),
  ('EXP -> ARITHMETICS','EXP',1,'p_EXP','Parser.py',365),
  ('EXP -> RELATIONALS','EXP',1,'p_EXP','Parser.py',366),
  ('EXP -> LOGICS','EXP',1,'p_EXP','Parser.py',367),
  ('EXP -> CAST','EXP',1,'p_EXP','Parser.py',368),
  ('EXP -> NATIVEFUNC','EXP',1,'p_EXP','Parser.py',369),
  ('EXP -> CALLFUNC','EXP',1,'p_EXP','Parser.py',370),
  ('EXP -> TERNARY','EXP',1,'p_EXP','Parser.py',371),
  ('EXP -> TK_id','EXP',1,'p_EXP','Parser.py',372),
  ('EXP -> TK_id TK_point TK_id','EXP',3,'p_EXP','Parser.py',373),
  ('EXP -> TK_field','EXP',1,'p_EXP','Parser.py',374),
  ('EXP -> TK_field TK_point TK_field','EXP',3,'p_EXP','Parser.py',375),
  ('EXP -> TK_nvarchar','EXP',1,'p_EXP','Parser.py',376),
  ('EXP -> TK_int','EXP',1,'p_EXP','Parser.py',377),
  ('EXP -> TK_decimal','EXP',1,'p_EXP','Parser.py',378),
  ('EXP -> TK_date','EXP',1,'p_EXP','Parser.py',379),
  ('EXP -> TK_datetime','EXP',1,'p_EXP','Parser.py',380),
  ('EXP -> RW_null','EXP',1,'p_EXP','Parser.py',381),
  ('EXP -> TK_lpar EXP TK_rpar','EXP',3,'p_EXP','Parser.py',382),
  ('ARITHMETICS -> EXP TK_plus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',397),
  ('ARITHMETICS -> EXP TK_minus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',398),
  ('ARITHMETICS -> EXP TK_mult EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',399),
  ('ARITHMETICS -> EXP TK_div EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',400),
  ('ARITHMETICS -> EXP TK_mod EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',401),
  ('ARITHMETICS -> TK_minus EXP','ARITHMETICS',2,'p_ARITHMETICS','Parser.py',402),
  ('RELATIONALS -> EXP TK_equalequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',407),
  ('RELATIONALS -> EXP TK_equal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',408),
  ('RELATIONALS -> EXP TK_notequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',409),
  ('RELATIONALS -> EXP TK_lessequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',410),
  ('RELATIONALS -> EXP TK_greatequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',411),
  ('RELATIONALS -> EXP TK_less EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',412),
  ('RELATIONALS -> EXP TK_great EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',413),
  ('LOGICS -> EXP TK_and EXP','LOGICS',3,'p_LOGICS','Parser.py',417),
  ('LOGICS -> EXP TK_or EXP','LOGICS',3,'p_LOGICS','Parser.py',418),
  ('LOGICS -> TK_not EXP','LOGICS',2,'p_LOGICS','Parser.py',419),
  ('CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar','CAST',6,'p_CAST','Parser.py',424),
  ('NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar','NATIVEFUNC',6,'p_NATIVEFUNC','Parser.py',429),
  ('NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar','NATIVEFUNC',8,'p_NATIVEFUNC','Parser.py',430),
  ('NATIVEFUNC -> RW_hoy TK_lpar TK_rpar','NATIVEFUNC',3,'p_NATIVEFUNC','Parser.py',431),
  ('TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar','TERNARY',8,'p_TERNARY','Parser.py',437),
  ('TYPE -> RW_int','TYPE',1,'p_TYPE','Parser.py',440),
  ('TYPE -> RW_bit','TYPE',1,'p_TYPE','Parser.py',441),
  ('TYPE -> RW_decimal','TYPE',1,'p_TYPE','Parser.py',442),
  ('TYPE -> RW_date','TYPE',1,'p_TYPE','Parser.py',443),
  ('TYPE -> RW_datetime','TYPE',1,'p_TYPE','Parser.py',444),
  ('TYPE -> RW_nchar','TYPE',1,'p_TYPE','Parser.py',445),
  ('TYPE -> RW_nvarchar','TYPE',1,'p_TYPE','Parser.py',446),
]
