
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTK_orleftTK_andrightTK_notleftTK_equalTK_notequalleftTK_lessTK_lessequalTK_greatTK_greatequalleftTK_plusTK_minusleftTK_multTK_divTK_modrightTK_uminusRW_add RW_alter RW_as RW_begin RW_bit RW_break RW_cas RW_case RW_column RW_concatena RW_contar RW_continue RW_create RW_date RW_datetime RW_decimal RW_declare RW_delete RW_drop RW_else RW_end RW_for RW_from RW_function RW_hoy RW_if RW_in RW_insert RW_int RW_into RW_loop RW_nchar RW_null RW_nvarchar RW_print RW_procedure RW_rename RW_return RW_returns RW_select RW_set RW_substraer RW_table RW_then RW_to RW_truncate RW_update RW_values RW_when RW_where RW_while TK_and TK_comma TK_date TK_datetime TK_decimal TK_div TK_dot TK_equal TK_equalequal TK_field TK_great TK_greatequal TK_id TK_int TK_less TK_lessequal TK_lpar TK_minus TK_mod TK_mult TK_not TK_notequal TK_nvarchar TK_or TK_plus TK_rpar TK_semicolonINIT : INSTRUCTIONS\n            |INSTRUCTIONS : INSTRUCTIONS INSTRUCTION\n                    | INSTRUCTIONINSTRUCTION  : CREATETABLE TK_semicolon\n                    | ALTERTAB TK_semicolon\n                    | DROPTAB TK_semicolon\n                    | INSERTREG TK_semicolon\n                    | UPDATETAB TK_semicolon\n                    | TRUNCATETAB TK_semicolon\n                    | DELETETAB TK_semicolon\n                    | SELECT TK_semicolon\n                    | DECLAREID TK_semicolon\n                    | ASIGNID TK_semicolon\n                    | IFSTRUCT TK_semicolon\n                    | CASESTRUCT_S TK_semicolon\n                    | WHILESTRUCT TK_semicolon\n                    | FORSTRUCT TK_semicolon\n                    | FUNCDEC TK_semicolon\n                    | CALLFUNC TK_semicolon\n                    | ENCAP TK_semicolon\n                    | PRINT TK_semicolon\n                    | RW_break TK_semicolon\n                    | RW_continue TK_semicolon\n                    | RW_return EXP TK_semicolon\n                    | RW_return TK_semicolonDECLAREID    : RW_declare DECLIDS\n                    | RW_declare TK_id TYPE TK_equal EXPDECLIDS  : DECLIDS TK_comma DECLID\n                | DECLIDDECLID : TK_id TYPEASIGNID : RW_set TK_id TK_equal EXPSELECT   : RW_select FIELDS RW_from TK_field RW_where EXP\n                | RW_select FIELDS RW_from TK_field\n                | RW_select LIST_IDSFIELDS   : LIST_IDS\n                | TK_multLIST_IDS : LIST_IDS TK_comma IDS\n                | IDSIDS  : EXP RW_as TK_nvarchar\n            | EXP RW_as TK_field\n            | EXPCREATETABLE : RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rparATTRIBUTES   : ATTRIBUTES TK_comma ATTRIBUTE\n                    | ATTRIBUTEATTRIBUTE : TK_field TYPEALTERTAB : RW_alter RW_table TK_field ACTIONACTION   : RW_add TK_field TYPE\n                | RW_drop RW_column TK_field\n                | RW_rename RW_to TK_field\n                | RW_rename RW_column TK_field RW_to TK_fieldDROPTAB : RW_drop RW_table TK_fieldINSERTREG : RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rparLIST_ATTRIBS : LIST_ATTRIBS TK_comma TK_field\n                    | TK_fieldLIST_EXPS    : LIST_EXPS TK_comma EXP\n                    | EXPUPDATETAB : RW_update TK_field RW_set VALUESTAB RW_where EXPVALUESTAB    : VALUESTAB TK_comma VALUETAB\n                    | VALUETAB VALUETAB : TK_field TK_equal EXPTRUNCATETAB : RW_truncate RW_table TK_fieldDELETETAB : RW_delete RW_from TK_field RW_where EXPIFSTRUCT : RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_then INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_begin INSTRUCTIONS RW_endCASESTRUCT_S : RW_case EXP WHENELSE RW_end RW_as TK_field\n                    | RW_case EXP WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case EXP WHENELSE RW_end\n                    | RW_case WHENELSE RW_end RW_as TK_field\n                    | RW_case WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case WHENELSE RW_endWHENELSE : WHENS ELSE\n                | WHENS\n                | ELSEWHENS    : WHENS WHEN\n                | WHENWHEN : RW_when EXP RW_then EXPELSE : RW_else EXPPRINT : RW_print EXPWHILESTRUCT : RW_while EXP ENCAPFORSTRUCT : RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loopFUNCDEC  : RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_procedure TK_field PARAMS RW_as ENCAP\n                | RW_create RW_procedure TK_field RW_as ENCAP\n                | RW_create RW_procedure TK_field PARAMS ENCAP\n                | RW_create RW_procedure TK_field ENCAPPARAMS   : PARAMS TK_comma PARAM\n                | PARAMPARAM    : TK_id TYPEENCAP    : RW_begin INSTRUCTIONS RW_end\n                | RW_begin RW_endCALLFUNC : TK_field TK_lpar ARGS TK_rpar\n                | TK_field TK_lpar TK_rparARGS : ARGS TK_comma EXP\n            | EXPEXP  : ARITHMETICS\n            | RELATIONALS\n            | LOGICS\n            | CAST\n            | NATIVEFUNC\n            | CALLFUNC\n            | TK_id\n            | TK_field\n            | TK_nvarchar\n            | TK_int\n            | TK_decimal\n            | TK_date\n            | RW_null\n            | TK_lpar EXP TK_rparARITHMETICS  : EXP TK_plus EXP\n                    | EXP TK_minus EXP\n                    | EXP TK_mult EXP\n                    | EXP TK_div EXP\n                    | EXP TK_mod EXP\n                    | TK_minus EXP %prec TK_uminusRELATIONALS  : EXP TK_equal EXP\n                    | EXP TK_notequal EXP\n                    | EXP TK_lessequal EXP\n                    | EXP TK_greatequal EXP\n                    | EXP TK_less EXP\n                    | EXP TK_great EXPLOGICS   : EXP TK_and EXP\n                | EXP TK_or EXP\n                | TK_not EXPCAST : RW_cas TK_lpar EXP RW_as TYPE TK_rparNATIVEFUNC : RW_truncate TK_lpar EXP TK_comma EXP TK_rparTYPE : RW_int\n            | RW_bit\n            | RW_decimal\n            | RW_date\n            | RW_nchar\n            | RW_nvarchar'
    
_lr_action_items = {'$end':([0,1,2,3,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,115,],[-2,0,-1,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-25,]),'RW_break':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[22,22,-4,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,22,-25,22,22,22,22,22,22,]),'RW_continue':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[23,23,-4,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,23,-25,23,23,23,23,23,23,]),'RW_return':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[24,24,-4,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,24,-25,24,24,24,24,24,24,]),'RW_create':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[25,25,-4,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,25,-25,25,25,25,25,25,25,]),'RW_alter':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[27,27,-4,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,27,-25,27,27,27,27,27,27,]),'RW_drop':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,140,158,159,211,212,243,270,],[28,28,-4,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,28,-25,196,28,28,28,28,28,28,]),'RW_insert':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[29,29,-4,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,29,-25,29,29,29,29,29,29,]),'RW_update':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[30,30,-4,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,30,-25,30,30,30,30,30,30,]),'RW_truncate':([0,2,3,24,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,78,79,80,86,103,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,158,159,168,193,203,210,211,212,215,218,236,237,240,243,250,270,288,295,],[32,32,-4,82,82,82,32,82,82,82,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,82,82,82,82,32,82,82,-25,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,32,32,82,82,82,82,32,32,82,82,82,82,82,32,82,32,82,82,]),'RW_delete':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[33,33,-4,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,33,-25,33,33,33,33,33,33,]),'RW_select':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[34,34,-4,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,34,-25,34,34,34,34,34,34,]),'RW_declare':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[35,35,-4,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,35,-25,35,35,35,35,35,35,]),'RW_set':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,90,103,115,158,159,211,212,243,270,],[31,31,-4,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,143,31,-25,31,31,31,31,31,31,]),'RW_if':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,244,270,283,],[36,36,-4,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,36,-25,36,36,36,36,36,271,36,289,]),'RW_case':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[38,38,-4,38,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,38,-25,38,38,38,38,38,38,]),'RW_while':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[39,39,-4,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,39,-25,39,39,39,39,39,39,]),'RW_for':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[40,40,-4,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,40,-25,40,40,40,40,40,40,]),'TK_field':([0,2,3,24,30,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,78,79,80,83,84,85,86,87,88,89,92,93,103,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,143,144,147,148,149,158,159,168,185,193,195,198,203,210,211,212,214,215,218,231,232,233,236,237,238,240,243,246,250,255,265,270,280,288,295,],[26,26,-4,72,90,72,72,26,72,72,72,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,72,72,72,134,135,136,72,140,141,142,145,146,26,72,72,-25,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,199,72,204,206,72,26,26,72,219,72,230,234,72,72,26,26,247,72,72,261,262,263,72,72,199,72,26,272,72,219,282,26,287,72,72,]),'RW_begin':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,102,103,112,115,130,131,136,138,152,153,154,155,156,157,158,159,169,170,171,172,173,174,175,176,177,178,179,180,181,182,187,188,190,192,211,212,224,228,243,259,270,274,275,276,279,285,],[37,37,-4,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,159,37,37,-25,-117,-126,37,-95,-129,-130,-131,-132,-133,-134,37,37,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,37,37,-90,-94,37,37,37,-91,37,-89,37,37,-127,-128,37,37,]),'RW_print':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,103,115,158,159,211,212,243,270,],[41,41,-4,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,41,-25,41,41,41,41,41,41,]),'RW_end':([3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,103,106,107,108,109,115,130,131,138,161,163,164,165,169,170,171,172,173,174,175,176,177,178,179,180,181,182,192,211,212,249,270,275,276,],[-4,104,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,160,162,-74,-75,-77,-25,-117,-126,-95,213,-73,-76,-79,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,-94,244,245,-78,283,-127,-128,]),'RW_else':([3,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,105,107,109,115,130,131,138,164,169,170,171,172,173,174,175,176,177,178,179,180,181,182,192,211,249,275,276,],[-4,110,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,110,110,-77,-25,-117,-126,-95,-76,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,-94,243,-78,-127,-128,]),'TK_semicolon':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,96,98,99,101,104,114,130,131,138,141,145,151,152,153,154,155,156,157,160,162,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,192,194,202,204,205,206,207,208,213,225,227,239,241,242,245,247,248,254,258,260,261,262,267,269,271,272,273,275,276,286,287,289,290,291,294,],[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,115,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-42,-35,-39,-27,-30,-93,-80,-117,-126,-95,-52,-62,-31,-129,-130,-131,-132,-133,-134,-92,-72,-81,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,-88,-94,-47,-32,-34,-40,-41,-38,-29,-69,-87,-86,-63,-31,-28,-66,-70,-71,-43,-85,-48,-49,-50,-58,-33,-65,-67,-68,-127,-128,-84,-51,-64,-82,-83,-53,]),'TK_id':([24,31,34,35,36,38,39,40,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,136,144,149,150,168,186,193,203,210,215,218,226,236,237,240,250,288,295,],[71,91,71,100,71,71,71,113,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,191,71,71,209,71,191,71,71,71,71,71,191,71,71,71,71,71,71,]),'TK_nvarchar':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,148,149,168,193,203,210,214,215,218,236,237,240,246,250,288,295,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,205,73,73,73,73,73,248,73,73,73,73,73,273,73,73,73,]),'TK_int':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'TK_decimal':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'TK_date':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'RW_null':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'TK_lpar':([24,26,34,36,38,39,41,72,78,79,80,81,82,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,134,135,142,144,149,168,193,203,210,215,218,236,237,240,250,281,288,295,],[78,86,78,78,78,78,78,86,78,78,78,132,133,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,185,186,198,78,78,78,78,78,78,78,78,78,78,78,78,288,78,78,]),'TK_minus':([24,34,36,38,39,41,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,95,102,105,110,111,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,139,144,149,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,193,202,203,210,215,216,218,229,236,237,239,240,242,249,250,252,266,267,269,274,275,276,288,293,295,296,],[79,79,79,79,79,79,117,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,79,79,79,79,117,117,117,79,79,117,117,79,79,79,79,79,79,79,79,79,79,79,79,79,117,-117,117,79,79,-95,117,79,79,117,117,79,-112,-113,-114,-115,-116,117,117,117,117,117,117,117,117,-111,117,117,-94,79,117,79,79,79,117,79,117,79,79,117,79,117,117,79,117,117,117,117,117,-127,-128,79,117,79,117,]),'TK_not':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'RW_cas':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'RW_table':([25,27,28,32,],[83,87,88,92,]),'RW_function':([25,],[84,]),'RW_procedure':([25,],[85,]),'RW_into':([29,],[89,]),'RW_from':([33,65,66,67,68,69,70,71,72,73,74,75,76,77,94,95,96,97,98,130,131,138,169,170,171,172,173,174,175,176,177,178,179,180,181,182,192,205,206,207,275,276,],[93,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,147,-42,-36,-37,-39,-117,-126,-95,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,-94,-40,-41,-38,-127,-128,]),'TK_mult':([34,63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[97,118,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,118,118,118,118,118,118,-117,118,-95,118,118,118,118,118,-114,-115,-116,118,118,118,118,118,118,118,118,-111,118,118,-94,118,118,118,118,118,118,118,118,118,118,118,-127,-128,118,118,]),'RW_when':([38,65,66,67,68,69,70,71,72,73,74,75,76,77,105,107,109,130,131,138,164,169,170,171,172,173,174,175,176,177,178,179,180,181,182,192,249,275,276,],[111,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,111,111,-77,-117,-126,-95,-76,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,-94,-78,-127,-128,]),'TK_plus':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[116,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,116,116,116,116,116,116,-117,116,-95,116,116,116,-112,-113,-114,-115,-116,116,116,116,116,116,116,116,116,-111,116,116,-94,116,116,116,116,116,116,116,116,116,116,116,-127,-128,116,116,]),'TK_div':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[119,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,119,119,119,119,119,119,-117,119,-95,119,119,119,119,119,-114,-115,-116,119,119,119,119,119,119,119,119,-111,119,119,-94,119,119,119,119,119,119,119,119,119,119,119,-127,-128,119,119,]),'TK_mod':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[120,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,120,120,120,120,120,120,-117,120,-95,120,120,120,120,120,-114,-115,-116,120,120,120,120,120,120,120,120,-111,120,120,-94,120,120,120,120,120,120,120,120,120,120,120,-127,-128,120,120,]),'TK_equal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,91,95,102,105,112,114,129,130,131,138,139,151,152,153,154,155,156,157,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,199,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[121,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,144,121,121,121,121,121,121,-117,121,-95,121,210,-129,-130,-131,-132,-133,-134,121,121,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,121,121,-111,121,121,-94,236,121,121,121,121,121,121,121,121,121,121,121,-127,-128,121,121,]),'TK_notequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[122,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,122,122,122,122,122,122,-117,122,-95,122,122,122,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,122,122,-111,122,122,-94,122,122,122,122,122,122,122,122,122,122,122,-127,-128,122,122,]),'TK_lessequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[123,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,123,123,123,123,123,123,-117,123,-95,123,123,123,-112,-113,-114,-115,-116,123,123,-120,-121,-122,-123,123,123,-111,123,123,-94,123,123,123,123,123,123,123,123,123,123,123,-127,-128,123,123,]),'TK_greatequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[124,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,124,124,124,124,124,124,-117,124,-95,124,124,124,-112,-113,-114,-115,-116,124,124,-120,-121,-122,-123,124,124,-111,124,124,-94,124,124,124,124,124,124,124,124,124,124,124,-127,-128,124,124,]),'TK_less':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[125,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,125,125,125,125,125,125,-117,125,-95,125,125,125,-112,-113,-114,-115,-116,125,125,-120,-121,-122,-123,125,125,-111,125,125,-94,125,125,125,125,125,125,125,125,125,125,125,-127,-128,125,125,]),'TK_great':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[126,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,126,126,126,126,126,126,-117,126,-95,126,126,126,-112,-113,-114,-115,-116,126,126,-120,-121,-122,-123,126,126,-111,126,126,-94,126,126,126,126,126,126,126,126,126,126,126,-127,-128,126,126,]),'TK_and':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[127,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,127,127,127,127,127,127,-117,-126,-95,127,127,127,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,127,-111,127,127,-94,127,127,127,127,127,127,127,127,127,127,127,-127,-128,127,127,]),'TK_or':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,95,102,105,112,114,129,130,131,138,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,192,202,216,229,239,242,249,252,266,267,269,274,275,276,293,296,],[128,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,128,128,128,128,128,128,-117,-126,-95,128,128,128,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,128,128,-94,128,128,128,128,128,128,128,128,128,128,128,-127,-128,128,128,]),'RW_as':([65,66,67,68,69,70,71,72,73,74,75,76,77,95,130,131,136,138,152,153,154,155,156,157,162,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,187,190,192,213,228,259,275,276,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,148,-117,-126,188,-95,-129,-130,-131,-132,-133,-134,214,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,217,224,-90,-94,246,-91,-89,-127,-128,]),'TK_comma':([65,66,67,68,69,70,71,72,73,74,75,76,77,95,96,98,99,101,130,131,137,138,139,151,152,153,154,155,156,157,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,187,190,192,200,201,205,206,207,208,220,221,222,228,229,234,235,241,253,259,266,268,275,276,277,282,292,293,296,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-42,149,-39,150,-30,-117,-126,193,-95,-97,-31,-129,-130,-131,-132,-133,-134,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,218,226,-90,-94,238,-60,-40,-41,-38,-29,255,-45,226,-91,-96,-55,265,-31,-46,-89,-61,-59,-127,-128,-44,-54,295,-57,-56,]),'RW_then':([65,66,67,68,69,70,71,72,73,74,75,76,77,102,130,131,138,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,192,275,276,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,158,-117,-126,-95,215,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,-94,-127,-128,]),'TK_rpar':([65,66,67,68,69,70,71,72,73,74,75,76,77,86,129,130,131,137,138,139,152,153,154,155,156,157,169,170,171,172,173,174,175,176,177,178,179,180,181,182,186,190,192,220,221,222,228,229,234,235,251,252,253,259,275,276,277,282,292,293,296,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,138,182,-117,-126,192,-95,-97,-129,-130,-131,-132,-133,-134,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,223,-90,-94,254,-45,256,-91,-96,-55,264,275,276,-46,-89,-127,-128,-44,-54,294,-57,-56,]),'TK_dot':([65,66,67,68,69,70,71,72,73,74,75,76,77,130,131,138,169,170,171,172,173,174,175,176,177,178,179,180,181,182,192,216,275,276,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-117,-126,-95,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,-94,250,-127,-128,]),'RW_where':([65,66,67,68,69,70,71,72,73,74,75,76,77,130,131,138,146,169,170,171,172,173,174,175,176,177,178,179,180,181,182,192,200,201,204,266,268,275,276,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-117,-126,-95,203,-112,-113,-114,-115,-116,-118,-119,-120,-121,-122,-123,-124,-125,-111,-94,237,-60,240,-61,-59,-127,-128,]),'RW_int':([100,191,209,217,219,230,257,278,],[152,152,152,152,152,152,152,152,]),'RW_bit':([100,191,209,217,219,230,257,278,],[153,153,153,153,153,153,153,153,]),'RW_decimal':([100,191,209,217,219,230,257,278,],[154,154,154,154,154,154,154,154,]),'RW_date':([100,191,209,217,219,230,257,278,],[155,155,155,155,155,155,155,155,]),'RW_nchar':([100,191,209,217,219,230,257,278,],[156,156,156,156,156,156,156,156,]),'RW_nvarchar':([100,191,209,217,219,230,257,278,],[157,157,157,157,157,157,157,157,]),'RW_loop':([104,160,284,],[-93,-92,290,]),'RW_in':([113,],[168,]),'RW_add':([140,],[195,]),'RW_rename':([140,],[197,]),'RW_column':([196,197,],[231,233,]),'RW_to':([197,263,],[232,280,]),'RW_returns':([223,256,],[257,278,]),'RW_values':([264,],[281,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'INSTRUCTIONS':([0,37,158,159,243,],[2,103,211,212,270,]),'INSTRUCTION':([0,2,37,103,158,159,211,212,243,270,],[3,42,3,42,3,3,42,42,3,42,]),'CREATETABLE':([0,2,37,103,158,159,211,212,243,270,],[4,4,4,4,4,4,4,4,4,4,]),'ALTERTAB':([0,2,37,103,158,159,211,212,243,270,],[5,5,5,5,5,5,5,5,5,5,]),'DROPTAB':([0,2,37,103,158,159,211,212,243,270,],[6,6,6,6,6,6,6,6,6,6,]),'INSERTREG':([0,2,37,103,158,159,211,212,243,270,],[7,7,7,7,7,7,7,7,7,7,]),'UPDATETAB':([0,2,37,103,158,159,211,212,243,270,],[8,8,8,8,8,8,8,8,8,8,]),'TRUNCATETAB':([0,2,37,103,158,159,211,212,243,270,],[9,9,9,9,9,9,9,9,9,9,]),'DELETETAB':([0,2,37,103,158,159,211,212,243,270,],[10,10,10,10,10,10,10,10,10,10,]),'SELECT':([0,2,37,103,158,159,211,212,243,270,],[11,11,11,11,11,11,11,11,11,11,]),'DECLAREID':([0,2,37,103,158,159,211,212,243,270,],[12,12,12,12,12,12,12,12,12,12,]),'ASIGNID':([0,2,37,103,158,159,211,212,243,270,],[13,13,13,13,13,13,13,13,13,13,]),'IFSTRUCT':([0,2,37,103,158,159,211,212,243,270,],[14,14,14,14,14,14,14,14,14,14,]),'CASESTRUCT_S':([0,2,37,103,158,159,211,212,243,270,],[15,15,15,15,15,15,15,15,15,15,]),'WHILESTRUCT':([0,2,37,103,158,159,211,212,243,270,],[16,16,16,16,16,16,16,16,16,16,]),'FORSTRUCT':([0,2,37,103,158,159,211,212,243,270,],[17,17,17,17,17,17,17,17,17,17,]),'FUNCDEC':([0,2,37,103,158,159,211,212,243,270,],[18,18,18,18,18,18,18,18,18,18,]),'CALLFUNC':([0,2,24,34,36,37,38,39,41,78,79,80,86,103,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,158,159,168,193,203,210,211,212,215,218,236,237,240,243,250,270,288,295,],[19,19,70,70,70,19,70,70,70,70,70,70,70,19,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,19,19,70,70,70,70,19,19,70,70,70,70,70,19,70,19,70,70,]),'ENCAP':([0,2,37,103,112,136,158,159,187,188,211,212,224,243,270,274,279,285,],[20,20,20,20,167,189,20,20,225,227,20,20,258,20,20,284,286,291,]),'PRINT':([0,2,37,103,158,159,211,212,243,270,],[21,21,21,21,21,21,21,21,21,21,]),'EXP':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[63,95,102,105,112,114,129,130,131,139,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,202,95,216,229,239,242,249,252,266,267,269,274,293,296,]),'ARITHMETICS':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'RELATIONALS':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LOGICS':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CAST':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'NATIVEFUNC':([24,34,36,38,39,41,78,79,80,86,110,111,116,117,118,119,120,121,122,123,124,125,126,127,128,132,133,144,149,168,193,203,210,215,218,236,237,240,250,288,295,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'FIELDS':([34,],[94,]),'LIST_IDS':([34,],[96,]),'IDS':([34,149,],[98,207,]),'DECLIDS':([35,],[99,]),'DECLID':([35,150,],[101,208,]),'WHENELSE':([38,105,],[106,161,]),'WHENS':([38,105,],[107,107,]),'ELSE':([38,105,107,],[108,108,163,]),'WHEN':([38,105,107,],[109,109,164,]),'ARGS':([86,],[137,]),'TYPE':([100,191,209,217,219,230,257,278,],[151,228,241,251,253,260,279,285,]),'PARAMS':([136,186,],[187,222,]),'PARAM':([136,186,226,],[190,190,259,]),'ACTION':([140,],[194,]),'VALUESTAB':([143,],[200,]),'VALUETAB':([143,238,],[201,268,]),'ATTRIBUTES':([185,],[220,]),'ATTRIBUTE':([185,255,],[221,277,]),'LIST_ATTRIBS':([198,],[235,]),'LIST_EXPS':([288,],[292,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> INSTRUCTIONS','INIT',1,'p_INIT','Parser.py',23),
  ('INIT -> <empty>','INIT',0,'p_INIT','Parser.py',24),
  ('INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION','INSTRUCTIONS',2,'p_INSTRUCTIONS','Parser.py',29),
  ('INSTRUCTIONS -> INSTRUCTION','INSTRUCTIONS',1,'p_INSTRUCTIONS','Parser.py',30),
  ('INSTRUCTION -> CREATETABLE TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',35),
  ('INSTRUCTION -> ALTERTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',36),
  ('INSTRUCTION -> DROPTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',37),
  ('INSTRUCTION -> INSERTREG TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',38),
  ('INSTRUCTION -> UPDATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',39),
  ('INSTRUCTION -> TRUNCATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',40),
  ('INSTRUCTION -> DELETETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',41),
  ('INSTRUCTION -> SELECT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',42),
  ('INSTRUCTION -> DECLAREID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',43),
  ('INSTRUCTION -> ASIGNID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',44),
  ('INSTRUCTION -> IFSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',45),
  ('INSTRUCTION -> CASESTRUCT_S TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',46),
  ('INSTRUCTION -> WHILESTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',47),
  ('INSTRUCTION -> FORSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',48),
  ('INSTRUCTION -> FUNCDEC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',49),
  ('INSTRUCTION -> CALLFUNC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',50),
  ('INSTRUCTION -> ENCAP TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',51),
  ('INSTRUCTION -> PRINT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',52),
  ('INSTRUCTION -> RW_break TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',53),
  ('INSTRUCTION -> RW_continue TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',54),
  ('INSTRUCTION -> RW_return EXP TK_semicolon','INSTRUCTION',3,'p_INSTRUCTION','Parser.py',55),
  ('INSTRUCTION -> RW_return TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',56),
  ('DECLAREID -> RW_declare DECLIDS','DECLAREID',2,'p_DECLAREID','Parser.py',66),
  ('DECLAREID -> RW_declare TK_id TYPE TK_equal EXP','DECLAREID',5,'p_DECLAREID','Parser.py',67),
  ('DECLIDS -> DECLIDS TK_comma DECLID','DECLIDS',3,'p_DECLIDS','Parser.py',72),
  ('DECLIDS -> DECLID','DECLIDS',1,'p_DECLIDS','Parser.py',73),
  ('DECLID -> TK_id TYPE','DECLID',2,'p_DECLID','Parser.py',78),
  ('ASIGNID -> RW_set TK_id TK_equal EXP','ASIGNID',4,'p_ASIGNID','Parser.py',83),
  ('SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP','SELECT',6,'p_SELECT','Parser.py',88),
  ('SELECT -> RW_select FIELDS RW_from TK_field','SELECT',4,'p_SELECT','Parser.py',89),
  ('SELECT -> RW_select LIST_IDS','SELECT',2,'p_SELECT','Parser.py',90),
  ('FIELDS -> LIST_IDS','FIELDS',1,'p_FIELDS','Parser.py',93),
  ('FIELDS -> TK_mult','FIELDS',1,'p_FIELDS','Parser.py',94),
  ('LIST_IDS -> LIST_IDS TK_comma IDS','LIST_IDS',3,'p_LIST_IDS','Parser.py',97),
  ('LIST_IDS -> IDS','LIST_IDS',1,'p_LIST_IDS','Parser.py',98),
  ('IDS -> EXP RW_as TK_nvarchar','IDS',3,'p_IDS','Parser.py',101),
  ('IDS -> EXP RW_as TK_field','IDS',3,'p_IDS','Parser.py',102),
  ('IDS -> EXP','IDS',1,'p_IDS','Parser.py',103),
  ('CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar','CREATETABLE',6,'p_CREATETABLE','Parser.py',107),
  ('ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE','ATTRIBUTES',3,'p_ATTRIBUTES','Parser.py',110),
  ('ATTRIBUTES -> ATTRIBUTE','ATTRIBUTES',1,'p_ATTRIBUTES','Parser.py',111),
  ('ATTRIBUTE -> TK_field TYPE','ATTRIBUTE',2,'p_ATTRIBUTE','Parser.py',114),
  ('ALTERTAB -> RW_alter RW_table TK_field ACTION','ALTERTAB',4,'p_ALTERTAB','Parser.py',118),
  ('ACTION -> RW_add TK_field TYPE','ACTION',3,'p_ACTION','Parser.py',121),
  ('ACTION -> RW_drop RW_column TK_field','ACTION',3,'p_ACTION','Parser.py',122),
  ('ACTION -> RW_rename RW_to TK_field','ACTION',3,'p_ACTION','Parser.py',123),
  ('ACTION -> RW_rename RW_column TK_field RW_to TK_field','ACTION',5,'p_ACTION','Parser.py',124),
  ('DROPTAB -> RW_drop RW_table TK_field','DROPTAB',3,'p_DROPTAB','Parser.py',128),
  ('INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar','INSERTREG',10,'p_INSERTREG','Parser.py',132),
  ('LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field','LIST_ATTRIBS',3,'p_LIST_ATTRIBS','Parser.py',135),
  ('LIST_ATTRIBS -> TK_field','LIST_ATTRIBS',1,'p_LIST_ATTRIBS','Parser.py',136),
  ('LIST_EXPS -> LIST_EXPS TK_comma EXP','LIST_EXPS',3,'p_LIST_EXPS','Parser.py',139),
  ('LIST_EXPS -> EXP','LIST_EXPS',1,'p_LIST_EXPS','Parser.py',140),
  ('UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP','UPDATETAB',6,'p_UPDATETAB','Parser.py',144),
  ('VALUESTAB -> VALUESTAB TK_comma VALUETAB','VALUESTAB',3,'p_VALUESTAB','Parser.py',147),
  ('VALUESTAB -> VALUETAB','VALUESTAB',1,'p_VALUESTAB','Parser.py',148),
  ('VALUETAB -> TK_field TK_equal EXP','VALUETAB',3,'p_VALUETAB','Parser.py',151),
  ('TRUNCATETAB -> RW_truncate RW_table TK_field','TRUNCATETAB',3,'p_TRUNCATETAB','Parser.py',155),
  ('DELETETAB -> RW_delete RW_from TK_field RW_where EXP','DELETETAB',5,'p_DELETETAB','Parser.py',159),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if','IFSTRUCT',8,'p_IFSTRUCT','Parser.py',163),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if','IFSTRUCT',6,'p_IFSTRUCT','Parser.py',164),
  ('IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end','IFSTRUCT',5,'p_IFSTRUCT','Parser.py',165),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',169),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',170),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end','CASESTRUCT_S',4,'p_CASESTRUCT_S','Parser.py',171),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',172),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',173),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end','CASESTRUCT_S',3,'p_CASESTRUCT_S','Parser.py',174),
  ('WHENELSE -> WHENS ELSE','WHENELSE',2,'p_WHENELSE','Parser.py',177),
  ('WHENELSE -> WHENS','WHENELSE',1,'p_WHENELSE','Parser.py',178),
  ('WHENELSE -> ELSE','WHENELSE',1,'p_WHENELSE','Parser.py',179),
  ('WHENS -> WHENS WHEN','WHENS',2,'p_WHENS','Parser.py',182),
  ('WHENS -> WHEN','WHENS',1,'p_WHENS','Parser.py',183),
  ('WHEN -> RW_when EXP RW_then EXP','WHEN',4,'p_WHEN','Parser.py',186),
  ('ELSE -> RW_else EXP','ELSE',2,'p_ELSE','Parser.py',189),
  ('PRINT -> RW_print EXP','PRINT',2,'p_PRINT','Parser.py',193),
  ('WHILESTRUCT -> RW_while EXP ENCAP','WHILESTRUCT',3,'p_WHILESTRUCT','Parser.py',197),
  ('FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop','FORSTRUCT',8,'p_FORSTRUCT','Parser.py',201),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP','FUNCDEC',9,'p_FUNCDEC','Parser.py',205),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP','FUNCDEC',8,'p_FUNCDEC','Parser.py',206),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP','FUNCDEC',6,'p_FUNCDEC','Parser.py',207),
  ('FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',208),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',209),
  ('FUNCDEC -> RW_create RW_procedure TK_field ENCAP','FUNCDEC',4,'p_FUNCDEC','Parser.py',210),
  ('PARAMS -> PARAMS TK_comma PARAM','PARAMS',3,'p_PARAMS','Parser.py',213),
  ('PARAMS -> PARAM','PARAMS',1,'p_PARAMS','Parser.py',214),
  ('PARAM -> TK_id TYPE','PARAM',2,'p_PARAM','Parser.py',217),
  ('ENCAP -> RW_begin INSTRUCTIONS RW_end','ENCAP',3,'p_ENCAP','Parser.py',221),
  ('ENCAP -> RW_begin RW_end','ENCAP',2,'p_ENCAP','Parser.py',222),
  ('CALLFUNC -> TK_field TK_lpar ARGS TK_rpar','CALLFUNC',4,'p_CALLFUNC','Parser.py',226),
  ('CALLFUNC -> TK_field TK_lpar TK_rpar','CALLFUNC',3,'p_CALLFUNC','Parser.py',227),
  ('ARGS -> ARGS TK_comma EXP','ARGS',3,'p_ARGS','Parser.py',230),
  ('ARGS -> EXP','ARGS',1,'p_ARGS','Parser.py',231),
  ('EXP -> ARITHMETICS','EXP',1,'p_EXP','Parser.py',234),
  ('EXP -> RELATIONALS','EXP',1,'p_EXP','Parser.py',235),
  ('EXP -> LOGICS','EXP',1,'p_EXP','Parser.py',236),
  ('EXP -> CAST','EXP',1,'p_EXP','Parser.py',237),
  ('EXP -> NATIVEFUNC','EXP',1,'p_EXP','Parser.py',238),
  ('EXP -> CALLFUNC','EXP',1,'p_EXP','Parser.py',239),
  ('EXP -> TK_id','EXP',1,'p_EXP','Parser.py',240),
  ('EXP -> TK_field','EXP',1,'p_EXP','Parser.py',241),
  ('EXP -> TK_nvarchar','EXP',1,'p_EXP','Parser.py',242),
  ('EXP -> TK_int','EXP',1,'p_EXP','Parser.py',243),
  ('EXP -> TK_decimal','EXP',1,'p_EXP','Parser.py',244),
  ('EXP -> TK_date','EXP',1,'p_EXP','Parser.py',245),
  ('EXP -> RW_null','EXP',1,'p_EXP','Parser.py',246),
  ('EXP -> TK_lpar EXP TK_rpar','EXP',3,'p_EXP','Parser.py',247),
  ('ARITHMETICS -> EXP TK_plus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',261),
  ('ARITHMETICS -> EXP TK_minus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',262),
  ('ARITHMETICS -> EXP TK_mult EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',263),
  ('ARITHMETICS -> EXP TK_div EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',264),
  ('ARITHMETICS -> EXP TK_mod EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',265),
  ('ARITHMETICS -> TK_minus EXP','ARITHMETICS',2,'p_ARITHMETICS','Parser.py',266),
  ('RELATIONALS -> EXP TK_equal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',269),
  ('RELATIONALS -> EXP TK_notequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',270),
  ('RELATIONALS -> EXP TK_lessequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',271),
  ('RELATIONALS -> EXP TK_greatequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',272),
  ('RELATIONALS -> EXP TK_less EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',273),
  ('RELATIONALS -> EXP TK_great EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',274),
  ('LOGICS -> EXP TK_and EXP','LOGICS',3,'p_LOGICS','Parser.py',277),
  ('LOGICS -> EXP TK_or EXP','LOGICS',3,'p_LOGICS','Parser.py',278),
  ('LOGICS -> TK_not EXP','LOGICS',2,'p_LOGICS','Parser.py',279),
  ('CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar','CAST',6,'p_CAST','Parser.py',282),
  ('NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar','NATIVEFUNC',6,'p_NATIVEFUNC','Parser.py',286),
  ('TYPE -> RW_int','TYPE',1,'p_TYPE','Parser.py',289),
  ('TYPE -> RW_bit','TYPE',1,'p_TYPE','Parser.py',290),
  ('TYPE -> RW_decimal','TYPE',1,'p_TYPE','Parser.py',291),
  ('TYPE -> RW_date','TYPE',1,'p_TYPE','Parser.py',292),
  ('TYPE -> RW_nchar','TYPE',1,'p_TYPE','Parser.py',293),
  ('TYPE -> RW_nvarchar','TYPE',1,'p_TYPE','Parser.py',294),
]
