
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTK_orleftTK_andrightTK_notleftTK_equalequalTK_notequalleftTK_lessTK_lessequalTK_greatTK_greatequalleftTK_plusTK_minusleftTK_multTK_divTK_modrightTK_uminusRW_add RW_alter RW_as RW_begin RW_bit RW_break RW_cas RW_case RW_column RW_concatena RW_contar RW_continue RW_create RW_date RW_datetime RW_decimal RW_declare RW_delete RW_drop RW_else RW_end RW_for RW_foreing RW_from RW_function RW_hoy RW_if RW_in RW_insert RW_int RW_into RW_key RW_loop RW_nchar RW_not RW_null RW_nvarchar RW_primary RW_print RW_procedure RW_ref RW_rename RW_return RW_returns RW_select RW_set RW_substraer RW_table RW_then RW_to RW_truncate RW_update RW_values RW_when RW_where RW_while TK_and TK_comma TK_date TK_datetime TK_decimal TK_div TK_dot TK_equal TK_equalequal TK_field TK_great TK_greatequal TK_id TK_int TK_less TK_lessequal TK_lpar TK_minus TK_mod TK_mult TK_not TK_notequal TK_nvarchar TK_or TK_plus TK_rpar TK_semicolonINIT : INSTRUCTIONS\n            |INSTRUCTIONS : INSTRUCTIONS INSTRUCTION\n                    | INSTRUCTIONINSTRUCTION  : CREATETABLE TK_semicolon\n                    | ALTERTAB TK_semicolon\n                    | DROPTAB TK_semicolon\n                    | INSERTREG TK_semicolon\n                    | UPDATETAB TK_semicolon\n                    | TRUNCATETAB TK_semicolon\n                    | DELETETAB TK_semicolon\n                    | SELECT TK_semicolon\n                    | DECLAREID TK_semicolon\n                    | ASIGNID TK_semicolon\n                    | IFSTRUCT TK_semicolon\n                    | CASESTRUCT_S TK_semicolon\n                    | WHILESTRUCT TK_semicolon\n                    | FORSTRUCT TK_semicolon\n                    | FUNCDEC TK_semicolon\n                    | CALLFUNC TK_semicolon\n                    | ENCAP TK_semicolon\n                    | PRINT TK_semicolon\n                    | RW_break TK_semicolon\n                    | RW_continue TK_semicolon\n                    | RW_return EXP TK_semicolon\n                    | RW_return TK_semicolonDECLAREID    : RW_declare DECLIDS\n                    | RW_declare TK_id TYPE TK_equal EXPDECLIDS  : DECLIDS TK_comma DECLID\n                | DECLIDDECLID : TK_id TYPEASIGNID : RW_set TK_id TK_equal EXPSELECT   : RW_select FIELDS RW_from TK_field RW_where EXP\n                | RW_select FIELDS RW_from TK_field\n                | RW_select LIST_IDSFIELDS   : LIST_IDS\n                | TK_multLIST_IDS : LIST_IDS TK_comma IDS\n                | IDSIDS  : EXP RW_as TK_nvarchar\n            | EXP RW_as TK_field\n            | EXPCREATETABLE : RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rparATTRIBUTES   : ATTRIBUTES TK_comma ATTRIBUTE\n                    | ATTRIBUTEATTRIBUTE    : TK_field TYPE TK_lpar TK_int TK_rpar PROPS\n                    | TK_field TYPE PROPS\n                    | TK_field TYPE TK_lpar TK_int TK_rpar\n                    | TK_field TYPE\n                    | RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rparPROPS    : RW_not RW_null RW_primary RW_key\n                | RW_primary RW_key RW_not RW_null\n                | RW_not RW_null\n                | RW_primary RW_keyALTERTAB : RW_alter RW_table TK_field ACTIONACTION   : RW_add TK_field TYPE\n                | RW_drop RW_column TK_field\n                | RW_rename RW_to TK_field\n                | RW_rename RW_column TK_field RW_to TK_fieldDROPTAB : RW_drop RW_table TK_fieldINSERTREG : RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rparLIST_ATTRIBS : LIST_ATTRIBS TK_comma TK_field\n                    | TK_fieldLIST_EXPS    : LIST_EXPS TK_comma EXP\n                    | EXPUPDATETAB : RW_update TK_field RW_set VALUESTAB RW_where EXPVALUESTAB    : VALUESTAB TK_comma VALUETAB\n                    | VALUETAB VALUETAB : TK_field TK_equal EXPTRUNCATETAB : RW_truncate RW_table TK_fieldDELETETAB : RW_delete RW_from TK_field RW_where EXPIFSTRUCT : RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_then INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_begin INSTRUCTIONS RW_endCASESTRUCT_S : RW_case EXP WHENELSE RW_end RW_as TK_field\n                    | RW_case EXP WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case EXP WHENELSE RW_end\n                    | RW_case WHENELSE RW_end RW_as TK_field\n                    | RW_case WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case WHENELSE RW_endWHENELSE : WHENS ELSE\n                | WHENS\n                | ELSEWHENS    : WHENS WHEN\n                | WHENWHEN : RW_when EXP RW_then EXPELSE : RW_else RW_then EXPPRINT : RW_print EXPWHILESTRUCT : RW_while EXP ENCAPFORSTRUCT : RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loopFUNCDEC  : RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_procedure TK_field PARAMS RW_as ENCAP\n                | RW_create RW_procedure TK_field RW_as ENCAP\n                | RW_create RW_procedure TK_field PARAMS ENCAP\n                | RW_create RW_procedure TK_field ENCAPPARAMS   : PARAMS TK_comma PARAM\n                | PARAMPARAM    : TK_id RW_as TYPEENCAP    : RW_begin INSTRUCTIONS RW_end\n                | RW_begin RW_endCALLFUNC : TK_field TK_lpar ARGS TK_rpar\n                | TK_field TK_lpar TK_rparARGS : ARGS TK_comma EXP\n            | EXPEXP  : ARITHMETICS\n            | RELATIONALS\n            | LOGICS\n            | CAST\n            | NATIVEFUNC\n            | CALLFUNC\n            | TERNARY\n            | TK_id\n            | TK_field\n            | TK_nvarchar\n            | TK_int\n            | TK_decimal\n            | TK_date\n            | TK_datetime\n            | RW_null\n            | TK_lpar EXP TK_rparARITHMETICS  : EXP TK_plus EXP\n                    | EXP TK_minus EXP\n                    | EXP TK_mult EXP\n                    | EXP TK_div EXP\n                    | EXP TK_mod EXP\n                    | TK_minus EXP %prec TK_uminusRELATIONALS  : EXP TK_equalequal EXP\n                    | EXP TK_equal EXP\n                    | EXP TK_notequal EXP\n                    | EXP TK_lessequal EXP\n                    | EXP TK_greatequal EXP\n                    | EXP TK_less EXP\n                    | EXP TK_great EXPLOGICS   : EXP TK_and EXP\n                | EXP TK_or EXP\n                | TK_not EXPCAST : RW_cas TK_lpar EXP RW_as TYPE TK_rparNATIVEFUNC : RW_truncate TK_lpar EXP TK_comma EXP TK_rparTERNARY : RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rparTYPE : RW_int\n            | RW_bit\n            | RW_decimal\n            | RW_date\n            | RW_datetime\n            | RW_nchar\n            | RW_nvarchar'
    
_lr_action_items = {'$end':([0,1,2,3,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,118,],[-2,0,-1,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-25,]),'RW_break':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[22,22,-4,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,22,-25,22,22,22,22,22,22,]),'RW_continue':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[23,23,-4,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,23,-25,23,23,23,23,23,23,]),'RW_return':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[24,24,-4,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,24,-25,24,24,24,24,24,24,]),'RW_create':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[25,25,-4,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,25,-25,25,25,25,25,25,25,]),'RW_alter':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[27,27,-4,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,27,-25,27,27,27,27,27,27,]),'RW_drop':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,145,164,165,219,220,254,284,],[28,28,-4,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,28,-25,204,28,28,28,28,28,28,]),'RW_insert':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[29,29,-4,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,29,-25,29,29,29,29,29,29,]),'RW_update':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[30,30,-4,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,30,-25,30,30,30,30,30,30,]),'RW_truncate':([0,2,3,24,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,80,81,82,89,106,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,164,165,171,174,201,211,218,219,220,224,227,228,247,248,251,254,261,284,291,313,329,],[32,32,-4,84,84,84,32,84,84,84,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,84,84,84,84,32,84,-25,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,32,32,84,84,84,84,84,32,32,84,84,84,84,84,84,32,84,32,84,84,84,]),'RW_delete':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[33,33,-4,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,33,-25,33,33,33,33,33,33,]),'RW_select':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[34,34,-4,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,34,-25,34,34,34,34,34,34,]),'RW_declare':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[35,35,-4,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,35,-25,35,35,35,35,35,35,]),'RW_set':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,93,106,118,164,165,219,220,254,284,],[31,31,-4,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,148,31,-25,31,31,31,31,31,31,]),'RW_if':([0,2,3,24,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,80,81,82,89,106,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,164,165,171,174,201,211,218,219,220,224,227,228,247,248,251,254,255,261,284,291,303,313,329,],[36,36,-4,85,85,85,36,85,85,85,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,85,85,85,85,36,85,-25,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,36,36,85,85,85,85,85,36,36,85,85,85,85,85,85,36,285,85,36,85,314,85,85,]),'RW_case':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[38,38,-4,38,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,38,-25,38,38,38,38,38,38,]),'RW_while':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[39,39,-4,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,39,-25,39,39,39,39,39,39,]),'RW_for':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[40,40,-4,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,40,-25,40,40,40,40,40,40,]),'TK_field':([0,2,3,24,30,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,80,81,82,86,87,88,89,90,91,92,95,96,106,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,148,149,152,153,154,164,165,171,174,193,201,203,206,211,218,219,220,222,224,227,228,242,243,244,247,248,249,251,254,257,261,267,279,284,291,297,300,313,327,329,332,],[26,26,-4,73,93,73,73,26,73,73,73,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,73,73,73,139,140,141,73,145,146,147,150,151,26,73,-25,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,207,73,212,214,73,26,26,73,73,229,73,241,245,73,73,26,26,258,73,73,73,275,276,277,73,73,207,73,26,286,73,229,302,26,73,309,312,73,330,73,333,]),'RW_begin':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,105,106,115,118,134,135,141,143,157,158,159,160,161,162,163,164,165,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,196,198,200,219,220,235,254,272,273,284,288,289,290,299,310,316,],[37,37,-4,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,165,37,37,-25,-127,-137,37,-103,-141,-142,-143,-144,-145,-146,-147,37,37,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,37,37,-98,-102,37,37,37,37,-97,-99,37,37,-138,-139,37,37,-140,]),'RW_print':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,164,165,219,220,254,284,],[41,41,-4,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,41,-25,41,41,41,41,41,41,]),'RW_end':([3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,106,109,110,111,112,118,134,135,143,167,169,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,200,219,220,223,260,284,289,290,316,],[-4,107,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,166,168,-82,-83,-85,-25,-127,-137,-103,221,-81,-84,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,-102,255,256,-87,-86,303,-138,-139,-140,]),'RW_else':([3,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,108,110,112,118,134,135,143,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,200,219,260,289,290,316,],[-4,113,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,113,113,-85,-25,-127,-137,-103,-84,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,-102,254,-86,-138,-139,-140,]),'TK_semicolon':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,99,101,102,104,107,117,134,135,143,146,150,156,157,158,159,160,161,162,163,166,168,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,197,200,202,210,212,213,214,215,216,221,236,238,250,252,253,256,258,259,266,271,274,275,276,281,283,285,286,287,289,290,311,312,314,315,316,321,328,],[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,118,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-42,-35,-39,-27,-30,-101,-88,-127,-137,-103,-60,-70,-31,-141,-142,-143,-144,-145,-146,-147,-100,-80,-89,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,-96,-102,-55,-32,-34,-40,-41,-38,-29,-77,-95,-94,-71,-31,-28,-74,-78,-79,-43,-93,-56,-57,-58,-66,-33,-73,-75,-76,-138,-139,-92,-59,-72,-90,-140,-91,-61,]),'TK_id':([24,31,34,35,36,38,39,40,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,141,149,154,155,171,174,194,201,211,218,224,227,228,237,247,248,251,261,291,313,329,],[72,94,72,103,72,72,72,116,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,199,72,72,217,72,72,199,72,72,72,72,72,72,199,72,72,72,72,72,72,72,]),'TK_nvarchar':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,153,154,171,174,201,211,218,222,224,227,228,247,248,251,257,261,291,313,329,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,213,74,74,74,74,74,74,259,74,74,74,74,74,74,287,74,74,74,74,]),'TK_int':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,292,313,329,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,306,75,75,]),'TK_decimal':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'TK_date':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'TK_datetime':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'RW_null':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,294,313,319,329,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,307,79,326,79,]),'TK_lpar':([24,26,34,36,38,39,41,73,80,81,82,83,84,85,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,139,140,147,149,154,157,158,159,160,161,162,163,171,174,201,211,218,224,227,228,247,248,251,261,265,268,291,301,313,329,330,],[80,89,80,80,80,80,80,89,80,80,80,136,137,138,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,193,194,206,80,80,-141,-142,-143,-144,-145,-146,-147,80,80,80,80,80,80,80,80,80,80,80,80,292,297,80,313,80,80,332,]),'TK_minus':([24,34,36,38,39,41,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,89,98,105,108,114,115,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,143,144,149,154,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,201,210,211,218,223,224,225,227,228,240,247,248,250,251,253,260,261,263,264,280,281,283,288,289,290,291,305,313,316,323,329,331,],[81,81,81,81,81,81,120,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,81,81,81,81,120,120,120,81,120,120,81,81,81,81,81,81,81,81,81,81,81,81,81,81,120,-127,120,81,81,81,-103,120,81,81,81,120,81,-122,-123,-124,-125,-126,120,120,120,120,120,120,120,120,120,-121,120,120,120,-102,81,120,81,81,120,81,120,81,81,120,81,81,120,81,120,120,81,120,120,120,120,120,120,-138,-139,81,120,81,-140,120,81,120,]),'TK_not':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'RW_cas':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'RW_table':([25,27,28,32,],[86,90,91,95,]),'RW_function':([25,],[87,]),'RW_procedure':([25,],[88,]),'RW_into':([29,],[92,]),'RW_from':([33,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,97,98,99,100,101,134,135,143,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,200,213,214,215,289,290,316,],[96,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,152,-42,-36,-37,-39,-127,-137,-103,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,-102,-40,-41,-38,-138,-139,-140,]),'TK_mult':([34,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[100,121,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,121,121,121,121,121,121,-127,121,-103,121,121,121,121,-124,-125,-126,121,121,121,121,121,121,121,121,121,-121,121,121,121,-102,121,121,121,121,121,121,121,121,121,121,121,121,121,-138,-139,121,-140,121,121,]),'RW_when':([38,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,108,110,112,134,135,143,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,200,260,289,290,316,],[114,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,114,114,-85,-127,-137,-103,-84,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,-102,-86,-138,-139,-140,]),'TK_plus':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[119,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,119,119,119,119,119,119,-127,119,-103,119,119,-122,-123,-124,-125,-126,119,119,119,119,119,119,119,119,119,-121,119,119,119,-102,119,119,119,119,119,119,119,119,119,119,119,119,119,-138,-139,119,-140,119,119,]),'TK_div':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[122,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,122,122,122,122,122,122,-127,122,-103,122,122,122,122,-124,-125,-126,122,122,122,122,122,122,122,122,122,-121,122,122,122,-102,122,122,122,122,122,122,122,122,122,122,122,122,122,-138,-139,122,-140,122,122,]),'TK_mod':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[123,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,123,123,123,123,123,123,-127,123,-103,123,123,123,123,-124,-125,-126,123,123,123,123,123,123,123,123,123,-121,123,123,123,-102,123,123,123,123,123,123,123,123,123,123,123,123,123,-138,-139,123,-140,123,123,]),'TK_equalequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[124,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,124,124,124,124,124,124,-127,124,-103,124,124,-122,-123,-124,-125,-126,-128,124,-130,-131,-132,-133,-134,124,124,-121,124,124,124,-102,124,124,124,124,124,124,124,124,124,124,124,124,124,-138,-139,124,-140,124,124,]),'TK_equal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,94,98,105,108,115,117,133,134,135,143,144,156,157,158,159,160,161,162,163,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,207,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[125,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,149,125,125,125,125,125,125,-127,-137,-103,125,218,-141,-142,-143,-144,-145,-146,-147,125,-122,-123,-124,-125,-126,-128,125,-130,-131,-132,-133,-134,-135,-136,-121,125,125,125,-102,247,125,125,125,125,125,125,125,125,125,125,125,125,125,-138,-139,125,-140,125,125,]),'TK_notequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[126,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,126,126,126,126,126,126,-127,126,-103,126,126,-122,-123,-124,-125,-126,-128,126,-130,-131,-132,-133,-134,126,126,-121,126,126,126,-102,126,126,126,126,126,126,126,126,126,126,126,126,126,-138,-139,126,-140,126,126,]),'TK_lessequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[127,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,127,127,127,127,127,127,-127,127,-103,127,127,-122,-123,-124,-125,-126,127,127,127,-131,-132,-133,-134,127,127,-121,127,127,127,-102,127,127,127,127,127,127,127,127,127,127,127,127,127,-138,-139,127,-140,127,127,]),'TK_greatequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[128,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,128,128,128,128,128,128,-127,128,-103,128,128,-122,-123,-124,-125,-126,128,128,128,-131,-132,-133,-134,128,128,-121,128,128,128,-102,128,128,128,128,128,128,128,128,128,128,128,128,128,-138,-139,128,-140,128,128,]),'TK_less':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[129,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,129,129,129,129,129,129,-127,129,-103,129,129,-122,-123,-124,-125,-126,129,129,129,-131,-132,-133,-134,129,129,-121,129,129,129,-102,129,129,129,129,129,129,129,129,129,129,129,129,129,-138,-139,129,-140,129,129,]),'TK_great':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[130,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,130,130,130,130,130,130,-127,130,-103,130,130,-122,-123,-124,-125,-126,130,130,130,-131,-132,-133,-134,130,130,-121,130,130,130,-102,130,130,130,130,130,130,130,130,130,130,130,130,130,-138,-139,130,-140,130,130,]),'TK_and':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[131,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,131,131,131,131,131,131,-127,-137,-103,131,131,-122,-123,-124,-125,-126,-128,131,-130,-131,-132,-133,-134,-135,131,-121,131,131,131,-102,131,131,131,131,131,131,131,131,131,131,131,131,131,-138,-139,131,-140,131,131,]),'TK_or':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,133,134,135,143,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,200,210,223,225,240,250,253,260,263,264,280,281,283,288,289,290,305,316,323,331,],[132,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,132,132,132,132,132,132,-127,-137,-103,132,132,-122,-123,-124,-125,-126,-128,132,-130,-131,-132,-133,-134,-135,-136,-121,132,132,132,-102,132,132,132,132,132,132,132,132,132,132,132,132,132,-138,-139,132,-140,132,132,]),'RW_as':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,134,135,141,143,157,158,159,160,161,162,163,168,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,195,198,199,200,221,272,273,289,290,316,],[-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,153,-127,-137,196,-103,-141,-142,-143,-144,-145,-146,-147,222,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,226,235,-98,239,-102,257,-97,-99,-138,-139,-140,]),'TK_comma':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,99,101,102,104,134,135,142,143,144,156,157,158,159,160,161,162,163,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,195,198,200,208,209,213,214,215,216,230,231,233,240,245,246,252,264,265,272,273,280,282,289,290,293,296,302,307,308,316,317,322,323,324,325,326,331,334,],[-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-42,154,-39,155,-30,-127,-137,201,-103,-105,-31,-141,-142,-143,-144,-145,-146,-147,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,227,228,237,-98,-102,249,-68,-40,-41,-38,-29,267,-45,237,-104,-63,279,-31,291,-49,-97,-99,-69,-67,-138,-139,-47,-44,-62,-53,-54,-140,-48,329,-65,-46,-51,-52,-64,-50,]),'RW_then':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,105,113,134,135,143,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,200,289,290,316,],[-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,164,171,-127,-137,-103,224,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,-102,-138,-139,-140,]),'TK_rpar':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,89,133,134,135,142,143,144,157,158,159,160,161,162,163,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,194,198,200,230,231,233,240,245,246,262,263,265,272,273,289,290,293,296,302,305,306,307,308,309,316,317,322,323,324,325,326,331,333,334,],[-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,143,189,-127,-137,200,-103,-105,-141,-142,-143,-144,-145,-146,-147,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,234,-98,-102,266,-45,269,-104,-63,278,289,290,-49,-97,-99,-138,-139,-47,-44,-62,316,317,-53,-54,320,-140,-48,328,-65,-46,-51,-52,-64,334,-50,]),'TK_dot':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,134,135,143,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,200,225,289,290,316,],[-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-127,-137,-103,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,-102,261,-138,-139,-140,]),'RW_where':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,134,135,143,151,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,200,208,209,212,280,282,289,290,316,],[-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-127,-137,-103,211,-122,-123,-124,-125,-126,-128,-129,-130,-131,-132,-133,-134,-135,-136,-121,-102,248,-68,251,-69,-67,-138,-139,-140,]),'RW_int':([103,217,226,229,239,241,270,298,],[157,157,157,157,157,157,157,157,]),'RW_bit':([103,217,226,229,239,241,270,298,],[158,158,158,158,158,158,158,158,]),'RW_decimal':([103,217,226,229,239,241,270,298,],[159,159,159,159,159,159,159,159,]),'RW_date':([103,217,226,229,239,241,270,298,],[160,160,160,160,160,160,160,160,]),'RW_datetime':([103,217,226,229,239,241,270,298,],[161,161,161,161,161,161,161,161,]),'RW_nchar':([103,217,226,229,239,241,270,298,],[162,162,162,162,162,162,162,162,]),'RW_nvarchar':([103,217,226,229,239,241,270,298,],[163,163,163,163,163,163,163,163,]),'RW_loop':([107,166,304,],[-101,-100,315,]),'RW_in':([116,],[174,]),'RW_add':([145,],[203,]),'RW_rename':([145,],[205,]),'RW_not':([157,158,159,160,161,162,163,265,308,317,],[-141,-142,-143,-144,-145,-146,-147,294,319,294,]),'RW_primary':([157,158,159,160,161,162,163,265,307,317,],[-141,-142,-143,-144,-145,-146,-147,295,318,295,]),'RW_foreing':([193,267,],[232,232,]),'RW_column':([204,205,],[242,244,]),'RW_to':([205,277,],[243,300,]),'RW_key':([232,295,318,],[268,308,325,]),'RW_returns':([234,269,],[270,298,]),'RW_values':([278,],[301,]),'RW_ref':([320,],[327,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'INSTRUCTIONS':([0,37,164,165,254,],[2,106,219,220,284,]),'INSTRUCTION':([0,2,37,106,164,165,219,220,254,284,],[3,42,3,42,3,3,42,42,3,42,]),'CREATETABLE':([0,2,37,106,164,165,219,220,254,284,],[4,4,4,4,4,4,4,4,4,4,]),'ALTERTAB':([0,2,37,106,164,165,219,220,254,284,],[5,5,5,5,5,5,5,5,5,5,]),'DROPTAB':([0,2,37,106,164,165,219,220,254,284,],[6,6,6,6,6,6,6,6,6,6,]),'INSERTREG':([0,2,37,106,164,165,219,220,254,284,],[7,7,7,7,7,7,7,7,7,7,]),'UPDATETAB':([0,2,37,106,164,165,219,220,254,284,],[8,8,8,8,8,8,8,8,8,8,]),'TRUNCATETAB':([0,2,37,106,164,165,219,220,254,284,],[9,9,9,9,9,9,9,9,9,9,]),'DELETETAB':([0,2,37,106,164,165,219,220,254,284,],[10,10,10,10,10,10,10,10,10,10,]),'SELECT':([0,2,37,106,164,165,219,220,254,284,],[11,11,11,11,11,11,11,11,11,11,]),'DECLAREID':([0,2,37,106,164,165,219,220,254,284,],[12,12,12,12,12,12,12,12,12,12,]),'ASIGNID':([0,2,37,106,164,165,219,220,254,284,],[13,13,13,13,13,13,13,13,13,13,]),'IFSTRUCT':([0,2,37,106,164,165,219,220,254,284,],[14,14,14,14,14,14,14,14,14,14,]),'CASESTRUCT_S':([0,2,37,106,164,165,219,220,254,284,],[15,15,15,15,15,15,15,15,15,15,]),'WHILESTRUCT':([0,2,37,106,164,165,219,220,254,284,],[16,16,16,16,16,16,16,16,16,16,]),'FORSTRUCT':([0,2,37,106,164,165,219,220,254,284,],[17,17,17,17,17,17,17,17,17,17,]),'FUNCDEC':([0,2,37,106,164,165,219,220,254,284,],[18,18,18,18,18,18,18,18,18,18,]),'CALLFUNC':([0,2,24,34,36,37,38,39,41,80,81,82,89,106,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,164,165,171,174,201,211,218,219,220,224,227,228,247,248,251,254,261,284,291,313,329,],[19,19,70,70,70,19,70,70,70,70,70,70,70,19,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,19,19,70,70,70,70,70,19,19,70,70,70,70,70,70,19,70,19,70,70,70,]),'ENCAP':([0,2,37,106,115,141,164,165,195,196,219,220,235,254,284,288,299,310,],[20,20,20,20,173,197,20,20,236,238,20,20,271,20,20,304,311,321,]),'PRINT':([0,2,37,106,164,165,219,220,254,284,],[21,21,21,21,21,21,21,21,21,21,]),'EXP':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[63,98,105,108,115,117,133,134,135,144,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,210,98,223,225,240,250,253,260,263,264,280,281,283,288,305,323,331,]),'ARITHMETICS':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'RELATIONALS':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LOGICS':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CAST':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'NATIVEFUNC':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'TERNARY':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,137,138,149,154,171,174,201,211,218,224,227,228,247,248,251,261,291,313,329,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'FIELDS':([34,],[97,]),'LIST_IDS':([34,],[99,]),'IDS':([34,154,],[101,215,]),'DECLIDS':([35,],[102,]),'DECLID':([35,155,],[104,216,]),'WHENELSE':([38,108,],[109,167,]),'WHENS':([38,108,],[110,110,]),'ELSE':([38,108,110,],[111,111,169,]),'WHEN':([38,108,110,],[112,112,170,]),'ARGS':([89,],[142,]),'TYPE':([103,217,226,229,239,241,270,298,],[156,252,262,265,273,274,299,310,]),'PARAMS':([141,194,],[195,233,]),'PARAM':([141,194,237,],[198,198,272,]),'ACTION':([145,],[202,]),'VALUESTAB':([148,],[208,]),'VALUETAB':([148,249,],[209,282,]),'ATTRIBUTES':([193,],[230,]),'ATTRIBUTE':([193,267,],[231,296,]),'LIST_ATTRIBS':([206,],[246,]),'PROPS':([265,317,],[293,324,]),'LIST_EXPS':([313,],[322,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> INSTRUCTIONS','INIT',1,'p_INIT','Parser.py',45),
  ('INIT -> <empty>','INIT',0,'p_INIT','Parser.py',46),
  ('INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION','INSTRUCTIONS',2,'p_INSTRUCTIONS','Parser.py',51),
  ('INSTRUCTIONS -> INSTRUCTION','INSTRUCTIONS',1,'p_INSTRUCTIONS','Parser.py',52),
  ('INSTRUCTION -> CREATETABLE TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',57),
  ('INSTRUCTION -> ALTERTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',58),
  ('INSTRUCTION -> DROPTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',59),
  ('INSTRUCTION -> INSERTREG TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',60),
  ('INSTRUCTION -> UPDATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',61),
  ('INSTRUCTION -> TRUNCATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',62),
  ('INSTRUCTION -> DELETETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',63),
  ('INSTRUCTION -> SELECT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',64),
  ('INSTRUCTION -> DECLAREID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',65),
  ('INSTRUCTION -> ASIGNID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',66),
  ('INSTRUCTION -> IFSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',67),
  ('INSTRUCTION -> CASESTRUCT_S TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',68),
  ('INSTRUCTION -> WHILESTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',69),
  ('INSTRUCTION -> FORSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',70),
  ('INSTRUCTION -> FUNCDEC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',71),
  ('INSTRUCTION -> CALLFUNC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',72),
  ('INSTRUCTION -> ENCAP TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',73),
  ('INSTRUCTION -> PRINT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',74),
  ('INSTRUCTION -> RW_break TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',75),
  ('INSTRUCTION -> RW_continue TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',76),
  ('INSTRUCTION -> RW_return EXP TK_semicolon','INSTRUCTION',3,'p_INSTRUCTION','Parser.py',77),
  ('INSTRUCTION -> RW_return TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',78),
  ('DECLAREID -> RW_declare DECLIDS','DECLAREID',2,'p_DECLAREID','Parser.py',88),
  ('DECLAREID -> RW_declare TK_id TYPE TK_equal EXP','DECLAREID',5,'p_DECLAREID','Parser.py',89),
  ('DECLIDS -> DECLIDS TK_comma DECLID','DECLIDS',3,'p_DECLIDS','Parser.py',94),
  ('DECLIDS -> DECLID','DECLIDS',1,'p_DECLIDS','Parser.py',95),
  ('DECLID -> TK_id TYPE','DECLID',2,'p_DECLID','Parser.py',100),
  ('ASIGNID -> RW_set TK_id TK_equal EXP','ASIGNID',4,'p_ASIGNID','Parser.py',105),
  ('SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP','SELECT',6,'p_SELECT','Parser.py',110),
  ('SELECT -> RW_select FIELDS RW_from TK_field','SELECT',4,'p_SELECT','Parser.py',111),
  ('SELECT -> RW_select LIST_IDS','SELECT',2,'p_SELECT','Parser.py',112),
  ('FIELDS -> LIST_IDS','FIELDS',1,'p_FIELDS','Parser.py',118),
  ('FIELDS -> TK_mult','FIELDS',1,'p_FIELDS','Parser.py',119),
  ('LIST_IDS -> LIST_IDS TK_comma IDS','LIST_IDS',3,'p_LIST_IDS','Parser.py',123),
  ('LIST_IDS -> IDS','LIST_IDS',1,'p_LIST_IDS','Parser.py',124),
  ('IDS -> EXP RW_as TK_nvarchar','IDS',3,'p_IDS','Parser.py',129),
  ('IDS -> EXP RW_as TK_field','IDS',3,'p_IDS','Parser.py',130),
  ('IDS -> EXP','IDS',1,'p_IDS','Parser.py',131),
  ('CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar','CREATETABLE',6,'p_CREATETABLE','Parser.py',137),
  ('ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE','ATTRIBUTES',3,'p_ATTRIBUTES','Parser.py',141),
  ('ATTRIBUTES -> ATTRIBUTE','ATTRIBUTES',1,'p_ATTRIBUTES','Parser.py',142),
  ('ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS','ATTRIBUTE',6,'p_ATTRIBUTE','Parser.py',147),
  ('ATTRIBUTE -> TK_field TYPE PROPS','ATTRIBUTE',3,'p_ATTRIBUTE','Parser.py',148),
  ('ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar','ATTRIBUTE',5,'p_ATTRIBUTE','Parser.py',149),
  ('ATTRIBUTE -> TK_field TYPE','ATTRIBUTE',2,'p_ATTRIBUTE','Parser.py',150),
  ('ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar','ATTRIBUTE',10,'p_ATTRIBUTE','Parser.py',151),
  ('PROPS -> RW_not RW_null RW_primary RW_key','PROPS',4,'p_PROPS','Parser.py',159),
  ('PROPS -> RW_primary RW_key RW_not RW_null','PROPS',4,'p_PROPS','Parser.py',160),
  ('PROPS -> RW_not RW_null','PROPS',2,'p_PROPS','Parser.py',161),
  ('PROPS -> RW_primary RW_key','PROPS',2,'p_PROPS','Parser.py',162),
  ('ALTERTAB -> RW_alter RW_table TK_field ACTION','ALTERTAB',4,'p_ALTERTAB','Parser.py',170),
  ('ACTION -> RW_add TK_field TYPE','ACTION',3,'p_ACTION','Parser.py',173),
  ('ACTION -> RW_drop RW_column TK_field','ACTION',3,'p_ACTION','Parser.py',174),
  ('ACTION -> RW_rename RW_to TK_field','ACTION',3,'p_ACTION','Parser.py',175),
  ('ACTION -> RW_rename RW_column TK_field RW_to TK_field','ACTION',5,'p_ACTION','Parser.py',176),
  ('DROPTAB -> RW_drop RW_table TK_field','DROPTAB',3,'p_DROPTAB','Parser.py',180),
  ('INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar','INSERTREG',10,'p_INSERTREG','Parser.py',185),
  ('LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field','LIST_ATTRIBS',3,'p_LIST_ATTRIBS','Parser.py',190),
  ('LIST_ATTRIBS -> TK_field','LIST_ATTRIBS',1,'p_LIST_ATTRIBS','Parser.py',191),
  ('LIST_EXPS -> LIST_EXPS TK_comma EXP','LIST_EXPS',3,'p_LIST_EXPS','Parser.py',196),
  ('LIST_EXPS -> EXP','LIST_EXPS',1,'p_LIST_EXPS','Parser.py',197),
  ('UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP','UPDATETAB',6,'p_UPDATETAB','Parser.py',203),
  ('VALUESTAB -> VALUESTAB TK_comma VALUETAB','VALUESTAB',3,'p_VALUESTAB','Parser.py',207),
  ('VALUESTAB -> VALUETAB','VALUESTAB',1,'p_VALUESTAB','Parser.py',208),
  ('VALUETAB -> TK_field TK_equal EXP','VALUETAB',3,'p_VALUETAB','Parser.py',213),
  ('TRUNCATETAB -> RW_truncate RW_table TK_field','TRUNCATETAB',3,'p_TRUNCATETAB','Parser.py',218),
  ('DELETETAB -> RW_delete RW_from TK_field RW_where EXP','DELETETAB',5,'p_DELETETAB','Parser.py',223),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if','IFSTRUCT',8,'p_IFSTRUCT','Parser.py',228),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if','IFSTRUCT',6,'p_IFSTRUCT','Parser.py',229),
  ('IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end','IFSTRUCT',5,'p_IFSTRUCT','Parser.py',230),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',237),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',238),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end','CASESTRUCT_S',4,'p_CASESTRUCT_S','Parser.py',239),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',240),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',241),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end','CASESTRUCT_S',3,'p_CASESTRUCT_S','Parser.py',242),
  ('WHENELSE -> WHENS ELSE','WHENELSE',2,'p_WHENELSE','Parser.py',249),
  ('WHENELSE -> WHENS','WHENELSE',1,'p_WHENELSE','Parser.py',250),
  ('WHENELSE -> ELSE','WHENELSE',1,'p_WHENELSE','Parser.py',251),
  ('WHENS -> WHENS WHEN','WHENS',2,'p_WHENS','Parser.py',257),
  ('WHENS -> WHEN','WHENS',1,'p_WHENS','Parser.py',258),
  ('WHEN -> RW_when EXP RW_then EXP','WHEN',4,'p_WHEN','Parser.py',263),
  ('ELSE -> RW_else RW_then EXP','ELSE',3,'p_ELSE','Parser.py',267),
  ('PRINT -> RW_print EXP','PRINT',2,'p_PRINT','Parser.py',272),
  ('WHILESTRUCT -> RW_while EXP ENCAP','WHILESTRUCT',3,'p_WHILESTRUCT','Parser.py',276),
  ('FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop','FORSTRUCT',8,'p_FORSTRUCT','Parser.py',281),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP','FUNCDEC',9,'p_FUNCDEC','Parser.py',285),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP','FUNCDEC',8,'p_FUNCDEC','Parser.py',286),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP','FUNCDEC',6,'p_FUNCDEC','Parser.py',287),
  ('FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',288),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',289),
  ('FUNCDEC -> RW_create RW_procedure TK_field ENCAP','FUNCDEC',4,'p_FUNCDEC','Parser.py',290),
  ('PARAMS -> PARAMS TK_comma PARAM','PARAMS',3,'p_PARAMS','Parser.py',299),
  ('PARAMS -> PARAM','PARAMS',1,'p_PARAMS','Parser.py',300),
  ('PARAM -> TK_id RW_as TYPE','PARAM',3,'p_PARAM','Parser.py',305),
  ('ENCAP -> RW_begin INSTRUCTIONS RW_end','ENCAP',3,'p_ENCAP','Parser.py',310),
  ('ENCAP -> RW_begin RW_end','ENCAP',2,'p_ENCAP','Parser.py',311),
  ('CALLFUNC -> TK_field TK_lpar ARGS TK_rpar','CALLFUNC',4,'p_CALLFUNC','Parser.py',317),
  ('CALLFUNC -> TK_field TK_lpar TK_rpar','CALLFUNC',3,'p_CALLFUNC','Parser.py',318),
  ('ARGS -> ARGS TK_comma EXP','ARGS',3,'p_ARGS','Parser.py',323),
  ('ARGS -> EXP','ARGS',1,'p_ARGS','Parser.py',324),
  ('EXP -> ARITHMETICS','EXP',1,'p_EXP','Parser.py',329),
  ('EXP -> RELATIONALS','EXP',1,'p_EXP','Parser.py',330),
  ('EXP -> LOGICS','EXP',1,'p_EXP','Parser.py',331),
  ('EXP -> CAST','EXP',1,'p_EXP','Parser.py',332),
  ('EXP -> NATIVEFUNC','EXP',1,'p_EXP','Parser.py',333),
  ('EXP -> CALLFUNC','EXP',1,'p_EXP','Parser.py',334),
  ('EXP -> TERNARY','EXP',1,'p_EXP','Parser.py',335),
  ('EXP -> TK_id','EXP',1,'p_EXP','Parser.py',336),
  ('EXP -> TK_field','EXP',1,'p_EXP','Parser.py',337),
  ('EXP -> TK_nvarchar','EXP',1,'p_EXP','Parser.py',338),
  ('EXP -> TK_int','EXP',1,'p_EXP','Parser.py',339),
  ('EXP -> TK_decimal','EXP',1,'p_EXP','Parser.py',340),
  ('EXP -> TK_date','EXP',1,'p_EXP','Parser.py',341),
  ('EXP -> TK_datetime','EXP',1,'p_EXP','Parser.py',342),
  ('EXP -> RW_null','EXP',1,'p_EXP','Parser.py',343),
  ('EXP -> TK_lpar EXP TK_rpar','EXP',3,'p_EXP','Parser.py',344),
  ('ARITHMETICS -> EXP TK_plus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',359),
  ('ARITHMETICS -> EXP TK_minus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',360),
  ('ARITHMETICS -> EXP TK_mult EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',361),
  ('ARITHMETICS -> EXP TK_div EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',362),
  ('ARITHMETICS -> EXP TK_mod EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',363),
  ('ARITHMETICS -> TK_minus EXP','ARITHMETICS',2,'p_ARITHMETICS','Parser.py',364),
  ('RELATIONALS -> EXP TK_equalequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',369),
  ('RELATIONALS -> EXP TK_equal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',370),
  ('RELATIONALS -> EXP TK_notequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',371),
  ('RELATIONALS -> EXP TK_lessequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',372),
  ('RELATIONALS -> EXP TK_greatequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',373),
  ('RELATIONALS -> EXP TK_less EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',374),
  ('RELATIONALS -> EXP TK_great EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',375),
  ('LOGICS -> EXP TK_and EXP','LOGICS',3,'p_LOGICS','Parser.py',379),
  ('LOGICS -> EXP TK_or EXP','LOGICS',3,'p_LOGICS','Parser.py',380),
  ('LOGICS -> TK_not EXP','LOGICS',2,'p_LOGICS','Parser.py',381),
  ('CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar','CAST',6,'p_CAST','Parser.py',386),
  ('NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar','NATIVEFUNC',6,'p_NATIVEFUNC','Parser.py',390),
  ('TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar','TERNARY',8,'p_TERNARY','Parser.py',393),
  ('TYPE -> RW_int','TYPE',1,'p_TYPE','Parser.py',396),
  ('TYPE -> RW_bit','TYPE',1,'p_TYPE','Parser.py',397),
  ('TYPE -> RW_decimal','TYPE',1,'p_TYPE','Parser.py',398),
  ('TYPE -> RW_date','TYPE',1,'p_TYPE','Parser.py',399),
  ('TYPE -> RW_datetime','TYPE',1,'p_TYPE','Parser.py',400),
  ('TYPE -> RW_nchar','TYPE',1,'p_TYPE','Parser.py',401),
  ('TYPE -> RW_nvarchar','TYPE',1,'p_TYPE','Parser.py',402),
]
