
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTK_orleftTK_andrightTK_notleftTK_equalequalTK_notequalleftTK_lessTK_lessequalTK_greatTK_greatequalleftTK_plusTK_minusleftTK_multTK_divTK_modrightTK_uminusRW_add RW_alter RW_as RW_begin RW_bit RW_break RW_cas RW_case RW_column RW_concatena RW_contar RW_continue RW_create RW_date RW_datetime RW_decimal RW_declare RW_delete RW_drop RW_else RW_end RW_for RW_from RW_function RW_hoy RW_if RW_in RW_insert RW_int RW_into RW_loop RW_nchar RW_null RW_nvarchar RW_print RW_procedure RW_rename RW_return RW_returns RW_select RW_set RW_substraer RW_table RW_then RW_to RW_truncate RW_update RW_values RW_when RW_where RW_while TK_and TK_comma TK_date TK_datetime TK_decimal TK_div TK_dot TK_equal TK_equalequal TK_field TK_great TK_greatequal TK_id TK_int TK_less TK_lessequal TK_lpar TK_minus TK_mod TK_mult TK_not TK_notequal TK_nvarchar TK_or TK_plus TK_rpar TK_semicolonINIT : INSTRUCTIONS\n            |INSTRUCTIONS : INSTRUCTIONS INSTRUCTION\n                    | INSTRUCTIONINSTRUCTION  : CREATETABLE TK_semicolon\n                    | ALTERTAB TK_semicolon\n                    | DROPTAB TK_semicolon\n                    | INSERTREG TK_semicolon\n                    | UPDATETAB TK_semicolon\n                    | TRUNCATETAB TK_semicolon\n                    | DELETETAB TK_semicolon\n                    | SELECT TK_semicolon\n                    | DECLAREID TK_semicolon\n                    | ASIGNID TK_semicolon\n                    | IFSTRUCT TK_semicolon\n                    | CASESTRUCT_S TK_semicolon\n                    | WHILESTRUCT TK_semicolon\n                    | FORSTRUCT TK_semicolon\n                    | FUNCDEC TK_semicolon\n                    | CALLFUNC TK_semicolon\n                    | ENCAP TK_semicolon\n                    | PRINT TK_semicolon\n                    | RW_break TK_semicolon\n                    | RW_continue TK_semicolon\n                    | RW_return EXP TK_semicolon\n                    | RW_return TK_semicolonDECLAREID    : RW_declare DECLIDS\n                    | RW_declare TK_id TYPE TK_equal EXPDECLIDS  : DECLIDS TK_comma DECLID\n                | DECLIDDECLID : TK_id TYPEASIGNID : RW_set TK_id TK_equal EXPSELECT   : RW_select FIELDS RW_from TK_field RW_where EXP\n                | RW_select FIELDS RW_from TK_field\n                | RW_select LIST_IDSFIELDS   : LIST_IDS\n                | TK_multLIST_IDS : LIST_IDS TK_comma IDS\n                | IDSIDS  : EXP RW_as TK_nvarchar\n            | EXP RW_as TK_field\n            | EXPCREATETABLE : RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rparATTRIBUTES   : ATTRIBUTES TK_comma ATTRIBUTE\n                    | ATTRIBUTEATTRIBUTE : TK_field TYPEALTERTAB : RW_alter RW_table TK_field ACTIONACTION   : RW_add TK_field TYPE\n                | RW_drop RW_column TK_field\n                | RW_rename RW_to TK_field\n                | RW_rename RW_column TK_field RW_to TK_fieldDROPTAB : RW_drop RW_table TK_fieldINSERTREG : RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rparLIST_ATTRIBS : LIST_ATTRIBS TK_comma TK_field\n                    | TK_fieldLIST_EXPS    : LIST_EXPS TK_comma EXP\n                    | EXPUPDATETAB : RW_update TK_field RW_set VALUESTAB RW_where EXPVALUESTAB    : VALUESTAB TK_comma VALUETAB\n                    | VALUETAB VALUETAB : TK_field TK_equal EXPTRUNCATETAB : RW_truncate RW_table TK_fieldDELETETAB : RW_delete RW_from TK_field RW_where EXPIFSTRUCT : RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_then INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_begin INSTRUCTIONS RW_endCASESTRUCT_S : RW_case EXP WHENELSE RW_end RW_as TK_field\n                    | RW_case EXP WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case EXP WHENELSE RW_end\n                    | RW_case WHENELSE RW_end RW_as TK_field\n                    | RW_case WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case WHENELSE RW_endWHENELSE : WHENS ELSE\n                | WHENS\n                | ELSEWHENS    : WHENS WHEN\n                | WHENWHEN : RW_when EXP RW_then EXPELSE : RW_else RW_then EXPPRINT : RW_print EXPWHILESTRUCT : RW_while EXP ENCAPFORSTRUCT : RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loopFUNCDEC  : RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_procedure TK_field PARAMS RW_as ENCAP\n                | RW_create RW_procedure TK_field RW_as ENCAP\n                | RW_create RW_procedure TK_field PARAMS ENCAP\n                | RW_create RW_procedure TK_field ENCAPPARAMS   : PARAMS TK_comma PARAM\n                | PARAMPARAM    : TK_id TYPEENCAP    : RW_begin INSTRUCTIONS RW_end\n                | RW_begin RW_endCALLFUNC : TK_field TK_lpar ARGS TK_rpar\n                | TK_field TK_lpar TK_rparARGS : ARGS TK_comma EXP\n            | EXPEXP  : ARITHMETICS\n            | RELATIONALS\n            | LOGICS\n            | CAST\n            | NATIVEFUNC\n            | CALLFUNC\n            | TERNARY\n            | TK_id\n            | TK_field\n            | TK_nvarchar\n            | TK_int\n            | TK_decimal\n            | TK_date\n            | TK_datetime\n            | RW_null\n            | TK_lpar EXP TK_rparARITHMETICS  : EXP TK_plus EXP\n                    | EXP TK_minus EXP\n                    | EXP TK_mult EXP\n                    | EXP TK_div EXP\n                    | EXP TK_mod EXP\n                    | TK_minus EXP %prec TK_uminusRELATIONALS  : EXP TK_equalequal EXP\n                    | EXP TK_notequal EXP\n                    | EXP TK_lessequal EXP\n                    | EXP TK_greatequal EXP\n                    | EXP TK_less EXP\n                    | EXP TK_great EXPLOGICS   : EXP TK_and EXP\n                | EXP TK_or EXP\n                | TK_not EXPCAST : RW_cas TK_lpar EXP RW_as TYPE TK_rparNATIVEFUNC : RW_truncate TK_lpar EXP TK_comma EXP TK_rparTERNARY : RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rparTYPE : RW_int\n            | RW_bit\n            | RW_decimal\n            | RW_date\n            | RW_datetime\n            | RW_nchar\n            | RW_nvarchar'
    
_lr_action_items = {'$end':([0,1,2,3,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,118,],[-2,0,-1,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-25,]),'RW_break':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[22,22,-4,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,22,-25,22,22,22,22,22,22,]),'RW_continue':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[23,23,-4,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,23,-25,23,23,23,23,23,23,]),'RW_return':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[24,24,-4,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,24,-25,24,24,24,24,24,24,]),'RW_create':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[25,25,-4,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,25,-25,25,25,25,25,25,25,]),'RW_alter':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[27,27,-4,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,27,-25,27,27,27,27,27,27,]),'RW_drop':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,144,163,164,217,218,251,279,],[28,28,-4,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,28,-25,202,28,28,28,28,28,28,]),'RW_insert':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[29,29,-4,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,29,-25,29,29,29,29,29,29,]),'RW_update':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[30,30,-4,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,30,-25,30,30,30,30,30,30,]),'RW_truncate':([0,2,3,24,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,80,81,82,89,106,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,163,164,170,173,199,209,216,217,218,222,225,226,244,245,248,251,258,279,286,299,307,],[32,32,-4,84,84,84,32,84,84,84,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,84,84,84,84,32,84,-25,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,32,32,84,84,84,84,84,32,32,84,84,84,84,84,84,32,84,32,84,84,84,]),'RW_delete':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[33,33,-4,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,33,-25,33,33,33,33,33,33,]),'RW_select':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[34,34,-4,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,34,-25,34,34,34,34,34,34,]),'RW_declare':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[35,35,-4,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,35,-25,35,35,35,35,35,35,]),'RW_set':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,93,106,118,163,164,217,218,251,279,],[31,31,-4,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,147,31,-25,31,31,31,31,31,31,]),'RW_if':([0,2,3,24,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,80,81,82,89,106,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,163,164,170,173,199,209,216,217,218,222,225,226,244,245,248,251,252,258,279,286,293,299,307,],[36,36,-4,85,85,85,36,85,85,85,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,85,85,85,85,36,85,-25,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,36,36,85,85,85,85,85,36,36,85,85,85,85,85,85,36,280,85,36,85,300,85,85,]),'RW_case':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[38,38,-4,38,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,38,-25,38,38,38,38,38,38,]),'RW_while':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[39,39,-4,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,39,-25,39,39,39,39,39,39,]),'RW_for':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[40,40,-4,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,40,-25,40,40,40,40,40,40,]),'TK_field':([0,2,3,24,30,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,80,81,82,86,87,88,89,90,91,92,95,96,106,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,147,148,151,152,153,163,164,170,173,191,199,201,204,209,216,217,218,220,222,225,226,239,240,241,244,245,246,248,251,254,258,264,274,279,286,290,299,307,],[26,26,-4,73,93,73,73,26,73,73,73,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,73,73,73,138,139,140,73,144,145,146,149,150,26,73,-25,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,205,73,210,212,73,26,26,73,73,227,73,238,242,73,73,26,26,255,73,73,73,270,271,272,73,73,205,73,26,281,73,227,292,26,73,298,73,73,]),'RW_begin':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,105,106,115,118,133,134,140,142,156,157,158,159,160,161,162,163,164,174,175,176,177,178,179,180,181,182,183,184,185,186,187,193,194,196,198,217,218,232,236,251,268,279,283,284,285,289,296,302,],[37,37,-4,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,164,37,37,-25,-119,-128,37,-95,-132,-133,-134,-135,-136,-137,-138,37,37,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,37,37,-90,-94,37,37,37,-91,37,-89,37,37,-129,-130,37,37,-131,]),'RW_print':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,106,118,163,164,217,218,251,279,],[41,41,-4,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,41,-25,41,41,41,41,41,41,]),'RW_end':([3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,106,109,110,111,112,118,133,134,142,166,168,169,174,175,176,177,178,179,180,181,182,183,184,185,186,187,198,217,218,221,257,279,284,285,302,],[-4,107,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,165,167,-74,-75,-77,-25,-119,-128,-95,219,-73,-76,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,-94,252,253,-79,-78,293,-129,-130,-131,]),'RW_else':([3,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,108,110,112,118,133,134,142,169,174,175,176,177,178,179,180,181,182,183,184,185,186,187,198,217,257,284,285,302,],[-4,113,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,113,113,-77,-25,-119,-128,-95,-76,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,-94,251,-78,-129,-130,-131,]),'TK_semicolon':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,99,101,102,104,107,117,133,134,142,145,149,155,156,157,158,159,160,161,162,165,167,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,195,198,200,208,210,211,212,213,214,219,233,235,247,249,250,253,255,256,263,267,269,270,271,276,278,280,281,282,284,285,297,298,300,301,302,303,306,],[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,118,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-42,-35,-39,-27,-30,-93,-80,-119,-128,-95,-52,-62,-31,-132,-133,-134,-135,-136,-137,-138,-92,-72,-81,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,-88,-94,-47,-32,-34,-40,-41,-38,-29,-69,-87,-86,-63,-31,-28,-66,-70,-71,-43,-85,-48,-49,-50,-58,-33,-65,-67,-68,-129,-130,-84,-51,-64,-82,-131,-83,-53,]),'TK_id':([24,31,34,35,36,38,39,40,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,140,148,153,154,170,173,192,199,209,216,222,225,226,234,244,245,248,258,286,299,307,],[72,94,72,103,72,72,72,116,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,197,72,72,215,72,72,197,72,72,72,72,72,72,197,72,72,72,72,72,72,72,]),'TK_nvarchar':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,152,153,170,173,199,209,216,220,222,225,226,244,245,248,254,258,286,299,307,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,211,74,74,74,74,74,74,256,74,74,74,74,74,74,282,74,74,74,74,]),'TK_int':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'TK_decimal':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'TK_date':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'TK_datetime':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'RW_null':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'TK_lpar':([24,26,34,36,38,39,41,73,80,81,82,83,84,85,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,138,139,146,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,291,299,307,],[80,89,80,80,80,80,80,89,80,80,80,135,136,137,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,191,192,204,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,299,80,80,]),'TK_minus':([24,34,36,38,39,41,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,89,98,105,108,114,115,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,142,143,148,153,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,199,208,209,216,221,222,223,225,226,237,244,245,247,248,250,257,258,260,261,275,276,278,283,284,285,286,295,299,302,305,307,308,],[81,81,81,81,81,81,120,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,81,81,81,81,120,120,120,81,120,120,81,81,81,81,81,81,81,81,81,81,81,81,81,120,-119,120,81,81,81,-95,120,81,81,81,120,81,-114,-115,-116,-117,-118,120,120,120,120,120,120,120,120,-113,120,120,120,-94,81,120,81,81,120,81,120,81,81,120,81,81,120,81,120,120,81,120,120,120,120,120,120,-129,-130,81,120,81,-131,120,81,120,]),'TK_not':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'RW_cas':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'RW_table':([25,27,28,32,],[86,90,91,95,]),'RW_function':([25,],[87,]),'RW_procedure':([25,],[88,]),'RW_into':([29,],[92,]),'RW_from':([33,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,97,98,99,100,101,133,134,142,174,175,176,177,178,179,180,181,182,183,184,185,186,187,198,211,212,213,284,285,302,],[96,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,151,-42,-36,-37,-39,-119,-128,-95,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,-94,-40,-41,-38,-129,-130,-131,]),'TK_mult':([34,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[100,121,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,121,121,121,121,121,121,-119,121,-95,121,121,121,121,-116,-117,-118,121,121,121,121,121,121,121,121,-113,121,121,121,-94,121,121,121,121,121,121,121,121,121,121,121,121,121,-129,-130,121,-131,121,121,]),'RW_when':([38,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,108,110,112,133,134,142,169,174,175,176,177,178,179,180,181,182,183,184,185,186,187,198,257,284,285,302,],[114,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,114,114,-77,-119,-128,-95,-76,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,-94,-78,-129,-130,-131,]),'TK_plus':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[119,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,119,119,119,119,119,119,-119,119,-95,119,119,-114,-115,-116,-117,-118,119,119,119,119,119,119,119,119,-113,119,119,119,-94,119,119,119,119,119,119,119,119,119,119,119,119,119,-129,-130,119,-131,119,119,]),'TK_div':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[122,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,122,122,122,122,122,122,-119,122,-95,122,122,122,122,-116,-117,-118,122,122,122,122,122,122,122,122,-113,122,122,122,-94,122,122,122,122,122,122,122,122,122,122,122,122,122,-129,-130,122,-131,122,122,]),'TK_mod':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[123,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,123,123,123,123,123,123,-119,123,-95,123,123,123,123,-116,-117,-118,123,123,123,123,123,123,123,123,-113,123,123,123,-94,123,123,123,123,123,123,123,123,123,123,123,123,123,-129,-130,123,-131,123,123,]),'TK_equalequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[124,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,124,124,124,124,124,124,-119,124,-95,124,124,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,124,124,-113,124,124,124,-94,124,124,124,124,124,124,124,124,124,124,124,124,124,-129,-130,124,-131,124,124,]),'TK_notequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[125,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,125,125,125,125,125,125,-119,125,-95,125,125,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,125,125,-113,125,125,125,-94,125,125,125,125,125,125,125,125,125,125,125,125,125,-129,-130,125,-131,125,125,]),'TK_lessequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[126,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,126,126,126,126,126,126,-119,126,-95,126,126,-114,-115,-116,-117,-118,126,126,-122,-123,-124,-125,126,126,-113,126,126,126,-94,126,126,126,126,126,126,126,126,126,126,126,126,126,-129,-130,126,-131,126,126,]),'TK_greatequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[127,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,127,127,127,127,127,127,-119,127,-95,127,127,-114,-115,-116,-117,-118,127,127,-122,-123,-124,-125,127,127,-113,127,127,127,-94,127,127,127,127,127,127,127,127,127,127,127,127,127,-129,-130,127,-131,127,127,]),'TK_less':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[128,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,128,128,128,128,128,128,-119,128,-95,128,128,-114,-115,-116,-117,-118,128,128,-122,-123,-124,-125,128,128,-113,128,128,128,-94,128,128,128,128,128,128,128,128,128,128,128,128,128,-129,-130,128,-131,128,128,]),'TK_great':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[129,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,129,129,129,129,129,129,-119,129,-95,129,129,-114,-115,-116,-117,-118,129,129,-122,-123,-124,-125,129,129,-113,129,129,129,-94,129,129,129,129,129,129,129,129,129,129,129,129,129,-129,-130,129,-131,129,129,]),'TK_and':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[130,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,130,130,130,130,130,130,-119,-128,-95,130,130,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,130,-113,130,130,130,-94,130,130,130,130,130,130,130,130,130,130,130,130,130,-129,-130,130,-131,130,130,]),'TK_or':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,105,108,115,117,132,133,134,142,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,198,208,221,223,237,247,250,257,260,261,275,276,278,283,284,285,295,302,305,308,],[131,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,131,131,131,131,131,131,-119,-128,-95,131,131,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,131,131,131,-94,131,131,131,131,131,131,131,131,131,131,131,131,131,-129,-130,131,-131,131,131,]),'RW_as':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,133,134,140,142,156,157,158,159,160,161,162,167,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,193,196,198,219,236,268,284,285,302,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,152,-119,-128,194,-95,-132,-133,-134,-135,-136,-137,-138,220,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,224,232,-90,-94,254,-91,-89,-129,-130,-131,]),'TK_comma':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,98,99,101,102,104,133,134,141,142,143,155,156,157,158,159,160,161,162,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,193,196,198,206,207,211,212,213,214,228,229,230,236,237,242,243,249,261,262,268,275,277,284,285,287,292,302,304,305,308,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-42,153,-39,154,-30,-119,-128,199,-95,-97,-31,-132,-133,-134,-135,-136,-137,-138,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,225,226,234,-90,-94,246,-60,-40,-41,-38,-29,264,-45,234,-91,-96,-55,274,-31,286,-46,-89,-61,-59,-129,-130,-44,-54,-131,307,-57,-56,]),'RW_then':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,105,113,133,134,142,171,174,175,176,177,178,179,180,181,182,183,184,185,186,187,198,284,285,302,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,163,170,-119,-128,-95,222,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,-94,-129,-130,-131,]),'TK_rpar':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,89,132,133,134,141,142,143,156,157,158,159,160,161,162,174,175,176,177,178,179,180,181,182,183,184,185,186,187,192,196,198,228,229,230,236,237,242,243,259,260,262,268,284,285,287,292,295,302,304,305,308,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,142,187,-119,-128,198,-95,-97,-132,-133,-134,-135,-136,-137,-138,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,231,-90,-94,263,-45,265,-91,-96,-55,273,284,285,-46,-89,-129,-130,-44,-54,302,-131,306,-57,-56,]),'TK_dot':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,133,134,142,174,175,176,177,178,179,180,181,182,183,184,185,186,187,198,223,284,285,302,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-119,-128,-95,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,-94,258,-129,-130,-131,]),'RW_where':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,133,134,142,150,174,175,176,177,178,179,180,181,182,183,184,185,186,187,198,206,207,210,275,277,284,285,302,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-119,-128,-95,209,-114,-115,-116,-117,-118,-120,-121,-122,-123,-124,-125,-126,-127,-113,-94,245,-60,248,-61,-59,-129,-130,-131,]),'TK_equal':([94,155,156,157,158,159,160,161,162,205,],[148,216,-132,-133,-134,-135,-136,-137,-138,244,]),'RW_int':([103,197,215,224,227,238,266,288,],[156,156,156,156,156,156,156,156,]),'RW_bit':([103,197,215,224,227,238,266,288,],[157,157,157,157,157,157,157,157,]),'RW_decimal':([103,197,215,224,227,238,266,288,],[158,158,158,158,158,158,158,158,]),'RW_date':([103,197,215,224,227,238,266,288,],[159,159,159,159,159,159,159,159,]),'RW_datetime':([103,197,215,224,227,238,266,288,],[160,160,160,160,160,160,160,160,]),'RW_nchar':([103,197,215,224,227,238,266,288,],[161,161,161,161,161,161,161,161,]),'RW_nvarchar':([103,197,215,224,227,238,266,288,],[162,162,162,162,162,162,162,162,]),'RW_loop':([107,165,294,],[-93,-92,301,]),'RW_in':([116,],[173,]),'RW_add':([144,],[201,]),'RW_rename':([144,],[203,]),'RW_column':([202,203,],[239,241,]),'RW_to':([203,272,],[240,290,]),'RW_returns':([231,265,],[266,288,]),'RW_values':([273,],[291,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'INSTRUCTIONS':([0,37,163,164,251,],[2,106,217,218,279,]),'INSTRUCTION':([0,2,37,106,163,164,217,218,251,279,],[3,42,3,42,3,3,42,42,3,42,]),'CREATETABLE':([0,2,37,106,163,164,217,218,251,279,],[4,4,4,4,4,4,4,4,4,4,]),'ALTERTAB':([0,2,37,106,163,164,217,218,251,279,],[5,5,5,5,5,5,5,5,5,5,]),'DROPTAB':([0,2,37,106,163,164,217,218,251,279,],[6,6,6,6,6,6,6,6,6,6,]),'INSERTREG':([0,2,37,106,163,164,217,218,251,279,],[7,7,7,7,7,7,7,7,7,7,]),'UPDATETAB':([0,2,37,106,163,164,217,218,251,279,],[8,8,8,8,8,8,8,8,8,8,]),'TRUNCATETAB':([0,2,37,106,163,164,217,218,251,279,],[9,9,9,9,9,9,9,9,9,9,]),'DELETETAB':([0,2,37,106,163,164,217,218,251,279,],[10,10,10,10,10,10,10,10,10,10,]),'SELECT':([0,2,37,106,163,164,217,218,251,279,],[11,11,11,11,11,11,11,11,11,11,]),'DECLAREID':([0,2,37,106,163,164,217,218,251,279,],[12,12,12,12,12,12,12,12,12,12,]),'ASIGNID':([0,2,37,106,163,164,217,218,251,279,],[13,13,13,13,13,13,13,13,13,13,]),'IFSTRUCT':([0,2,37,106,163,164,217,218,251,279,],[14,14,14,14,14,14,14,14,14,14,]),'CASESTRUCT_S':([0,2,37,106,163,164,217,218,251,279,],[15,15,15,15,15,15,15,15,15,15,]),'WHILESTRUCT':([0,2,37,106,163,164,217,218,251,279,],[16,16,16,16,16,16,16,16,16,16,]),'FORSTRUCT':([0,2,37,106,163,164,217,218,251,279,],[17,17,17,17,17,17,17,17,17,17,]),'FUNCDEC':([0,2,37,106,163,164,217,218,251,279,],[18,18,18,18,18,18,18,18,18,18,]),'CALLFUNC':([0,2,24,34,36,37,38,39,41,80,81,82,89,106,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,163,164,170,173,199,209,216,217,218,222,225,226,244,245,248,251,258,279,286,299,307,],[19,19,70,70,70,19,70,70,70,70,70,70,70,19,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,19,19,70,70,70,70,70,19,19,70,70,70,70,70,70,19,70,19,70,70,70,]),'ENCAP':([0,2,37,106,115,140,163,164,193,194,217,218,232,251,279,283,289,296,],[20,20,20,20,172,195,20,20,233,235,20,20,267,20,20,294,297,303,]),'PRINT':([0,2,37,106,163,164,217,218,251,279,],[21,21,21,21,21,21,21,21,21,21,]),'EXP':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[63,98,105,108,115,117,132,133,134,143,171,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,208,98,221,223,237,247,250,257,260,261,275,276,278,283,295,305,308,]),'ARITHMETICS':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'RELATIONALS':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LOGICS':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CAST':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'NATIVEFUNC':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'TERNARY':([24,34,36,38,39,41,80,81,82,89,114,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,137,148,153,170,173,199,209,216,222,225,226,244,245,248,258,286,299,307,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'FIELDS':([34,],[97,]),'LIST_IDS':([34,],[99,]),'IDS':([34,153,],[101,213,]),'DECLIDS':([35,],[102,]),'DECLID':([35,154,],[104,214,]),'WHENELSE':([38,108,],[109,166,]),'WHENS':([38,108,],[110,110,]),'ELSE':([38,108,110,],[111,111,168,]),'WHEN':([38,108,110,],[112,112,169,]),'ARGS':([89,],[141,]),'TYPE':([103,197,215,224,227,238,266,288,],[155,236,249,259,262,269,289,296,]),'PARAMS':([140,192,],[193,230,]),'PARAM':([140,192,234,],[196,196,268,]),'ACTION':([144,],[200,]),'VALUESTAB':([147,],[206,]),'VALUETAB':([147,246,],[207,277,]),'ATTRIBUTES':([191,],[228,]),'ATTRIBUTE':([191,264,],[229,287,]),'LIST_ATTRIBS':([204,],[243,]),'LIST_EXPS':([299,],[304,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> INSTRUCTIONS','INIT',1,'p_INIT','Parser.py',33),
  ('INIT -> <empty>','INIT',0,'p_INIT','Parser.py',34),
  ('INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION','INSTRUCTIONS',2,'p_INSTRUCTIONS','Parser.py',39),
  ('INSTRUCTIONS -> INSTRUCTION','INSTRUCTIONS',1,'p_INSTRUCTIONS','Parser.py',40),
  ('INSTRUCTION -> CREATETABLE TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',45),
  ('INSTRUCTION -> ALTERTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',46),
  ('INSTRUCTION -> DROPTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',47),
  ('INSTRUCTION -> INSERTREG TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',48),
  ('INSTRUCTION -> UPDATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',49),
  ('INSTRUCTION -> TRUNCATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',50),
  ('INSTRUCTION -> DELETETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',51),
  ('INSTRUCTION -> SELECT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',52),
  ('INSTRUCTION -> DECLAREID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',53),
  ('INSTRUCTION -> ASIGNID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',54),
  ('INSTRUCTION -> IFSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',55),
  ('INSTRUCTION -> CASESTRUCT_S TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',56),
  ('INSTRUCTION -> WHILESTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',57),
  ('INSTRUCTION -> FORSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',58),
  ('INSTRUCTION -> FUNCDEC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',59),
  ('INSTRUCTION -> CALLFUNC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',60),
  ('INSTRUCTION -> ENCAP TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',61),
  ('INSTRUCTION -> PRINT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',62),
  ('INSTRUCTION -> RW_break TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',63),
  ('INSTRUCTION -> RW_continue TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',64),
  ('INSTRUCTION -> RW_return EXP TK_semicolon','INSTRUCTION',3,'p_INSTRUCTION','Parser.py',65),
  ('INSTRUCTION -> RW_return TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',66),
  ('DECLAREID -> RW_declare DECLIDS','DECLAREID',2,'p_DECLAREID','Parser.py',76),
  ('DECLAREID -> RW_declare TK_id TYPE TK_equal EXP','DECLAREID',5,'p_DECLAREID','Parser.py',77),
  ('DECLIDS -> DECLIDS TK_comma DECLID','DECLIDS',3,'p_DECLIDS','Parser.py',82),
  ('DECLIDS -> DECLID','DECLIDS',1,'p_DECLIDS','Parser.py',83),
  ('DECLID -> TK_id TYPE','DECLID',2,'p_DECLID','Parser.py',88),
  ('ASIGNID -> RW_set TK_id TK_equal EXP','ASIGNID',4,'p_ASIGNID','Parser.py',93),
  ('SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP','SELECT',6,'p_SELECT','Parser.py',98),
  ('SELECT -> RW_select FIELDS RW_from TK_field','SELECT',4,'p_SELECT','Parser.py',99),
  ('SELECT -> RW_select LIST_IDS','SELECT',2,'p_SELECT','Parser.py',100),
  ('FIELDS -> LIST_IDS','FIELDS',1,'p_FIELDS','Parser.py',106),
  ('FIELDS -> TK_mult','FIELDS',1,'p_FIELDS','Parser.py',107),
  ('LIST_IDS -> LIST_IDS TK_comma IDS','LIST_IDS',3,'p_LIST_IDS','Parser.py',111),
  ('LIST_IDS -> IDS','LIST_IDS',1,'p_LIST_IDS','Parser.py',112),
  ('IDS -> EXP RW_as TK_nvarchar','IDS',3,'p_IDS','Parser.py',117),
  ('IDS -> EXP RW_as TK_field','IDS',3,'p_IDS','Parser.py',118),
  ('IDS -> EXP','IDS',1,'p_IDS','Parser.py',119),
  ('CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar','CREATETABLE',6,'p_CREATETABLE','Parser.py',125),
  ('ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE','ATTRIBUTES',3,'p_ATTRIBUTES','Parser.py',128),
  ('ATTRIBUTES -> ATTRIBUTE','ATTRIBUTES',1,'p_ATTRIBUTES','Parser.py',129),
  ('ATTRIBUTE -> TK_field TYPE','ATTRIBUTE',2,'p_ATTRIBUTE','Parser.py',132),
  ('ALTERTAB -> RW_alter RW_table TK_field ACTION','ALTERTAB',4,'p_ALTERTAB','Parser.py',136),
  ('ACTION -> RW_add TK_field TYPE','ACTION',3,'p_ACTION','Parser.py',139),
  ('ACTION -> RW_drop RW_column TK_field','ACTION',3,'p_ACTION','Parser.py',140),
  ('ACTION -> RW_rename RW_to TK_field','ACTION',3,'p_ACTION','Parser.py',141),
  ('ACTION -> RW_rename RW_column TK_field RW_to TK_field','ACTION',5,'p_ACTION','Parser.py',142),
  ('DROPTAB -> RW_drop RW_table TK_field','DROPTAB',3,'p_DROPTAB','Parser.py',146),
  ('INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar','INSERTREG',10,'p_INSERTREG','Parser.py',150),
  ('LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field','LIST_ATTRIBS',3,'p_LIST_ATTRIBS','Parser.py',153),
  ('LIST_ATTRIBS -> TK_field','LIST_ATTRIBS',1,'p_LIST_ATTRIBS','Parser.py',154),
  ('LIST_EXPS -> LIST_EXPS TK_comma EXP','LIST_EXPS',3,'p_LIST_EXPS','Parser.py',157),
  ('LIST_EXPS -> EXP','LIST_EXPS',1,'p_LIST_EXPS','Parser.py',158),
  ('UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP','UPDATETAB',6,'p_UPDATETAB','Parser.py',162),
  ('VALUESTAB -> VALUESTAB TK_comma VALUETAB','VALUESTAB',3,'p_VALUESTAB','Parser.py',165),
  ('VALUESTAB -> VALUETAB','VALUESTAB',1,'p_VALUESTAB','Parser.py',166),
  ('VALUETAB -> TK_field TK_equal EXP','VALUETAB',3,'p_VALUETAB','Parser.py',169),
  ('TRUNCATETAB -> RW_truncate RW_table TK_field','TRUNCATETAB',3,'p_TRUNCATETAB','Parser.py',173),
  ('DELETETAB -> RW_delete RW_from TK_field RW_where EXP','DELETETAB',5,'p_DELETETAB','Parser.py',177),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if','IFSTRUCT',8,'p_IFSTRUCT','Parser.py',181),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if','IFSTRUCT',6,'p_IFSTRUCT','Parser.py',182),
  ('IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end','IFSTRUCT',5,'p_IFSTRUCT','Parser.py',183),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',190),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',191),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end','CASESTRUCT_S',4,'p_CASESTRUCT_S','Parser.py',192),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',193),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',194),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end','CASESTRUCT_S',3,'p_CASESTRUCT_S','Parser.py',195),
  ('WHENELSE -> WHENS ELSE','WHENELSE',2,'p_WHENELSE','Parser.py',202),
  ('WHENELSE -> WHENS','WHENELSE',1,'p_WHENELSE','Parser.py',203),
  ('WHENELSE -> ELSE','WHENELSE',1,'p_WHENELSE','Parser.py',204),
  ('WHENS -> WHENS WHEN','WHENS',2,'p_WHENS','Parser.py',210),
  ('WHENS -> WHEN','WHENS',1,'p_WHENS','Parser.py',211),
  ('WHEN -> RW_when EXP RW_then EXP','WHEN',4,'p_WHEN','Parser.py',216),
  ('ELSE -> RW_else RW_then EXP','ELSE',3,'p_ELSE','Parser.py',220),
  ('PRINT -> RW_print EXP','PRINT',2,'p_PRINT','Parser.py',225),
  ('WHILESTRUCT -> RW_while EXP ENCAP','WHILESTRUCT',3,'p_WHILESTRUCT','Parser.py',229),
  ('FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop','FORSTRUCT',8,'p_FORSTRUCT','Parser.py',234),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP','FUNCDEC',9,'p_FUNCDEC','Parser.py',238),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP','FUNCDEC',8,'p_FUNCDEC','Parser.py',239),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP','FUNCDEC',6,'p_FUNCDEC','Parser.py',240),
  ('FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',241),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',242),
  ('FUNCDEC -> RW_create RW_procedure TK_field ENCAP','FUNCDEC',4,'p_FUNCDEC','Parser.py',243),
  ('PARAMS -> PARAMS TK_comma PARAM','PARAMS',3,'p_PARAMS','Parser.py',246),
  ('PARAMS -> PARAM','PARAMS',1,'p_PARAMS','Parser.py',247),
  ('PARAM -> TK_id TYPE','PARAM',2,'p_PARAM','Parser.py',250),
  ('ENCAP -> RW_begin INSTRUCTIONS RW_end','ENCAP',3,'p_ENCAP','Parser.py',254),
  ('ENCAP -> RW_begin RW_end','ENCAP',2,'p_ENCAP','Parser.py',255),
  ('CALLFUNC -> TK_field TK_lpar ARGS TK_rpar','CALLFUNC',4,'p_CALLFUNC','Parser.py',261),
  ('CALLFUNC -> TK_field TK_lpar TK_rpar','CALLFUNC',3,'p_CALLFUNC','Parser.py',262),
  ('ARGS -> ARGS TK_comma EXP','ARGS',3,'p_ARGS','Parser.py',265),
  ('ARGS -> EXP','ARGS',1,'p_ARGS','Parser.py',266),
  ('EXP -> ARITHMETICS','EXP',1,'p_EXP','Parser.py',269),
  ('EXP -> RELATIONALS','EXP',1,'p_EXP','Parser.py',270),
  ('EXP -> LOGICS','EXP',1,'p_EXP','Parser.py',271),
  ('EXP -> CAST','EXP',1,'p_EXP','Parser.py',272),
  ('EXP -> NATIVEFUNC','EXP',1,'p_EXP','Parser.py',273),
  ('EXP -> CALLFUNC','EXP',1,'p_EXP','Parser.py',274),
  ('EXP -> TERNARY','EXP',1,'p_EXP','Parser.py',275),
  ('EXP -> TK_id','EXP',1,'p_EXP','Parser.py',276),
  ('EXP -> TK_field','EXP',1,'p_EXP','Parser.py',277),
  ('EXP -> TK_nvarchar','EXP',1,'p_EXP','Parser.py',278),
  ('EXP -> TK_int','EXP',1,'p_EXP','Parser.py',279),
  ('EXP -> TK_decimal','EXP',1,'p_EXP','Parser.py',280),
  ('EXP -> TK_date','EXP',1,'p_EXP','Parser.py',281),
  ('EXP -> TK_datetime','EXP',1,'p_EXP','Parser.py',282),
  ('EXP -> RW_null','EXP',1,'p_EXP','Parser.py',283),
  ('EXP -> TK_lpar EXP TK_rpar','EXP',3,'p_EXP','Parser.py',284),
  ('ARITHMETICS -> EXP TK_plus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',299),
  ('ARITHMETICS -> EXP TK_minus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',300),
  ('ARITHMETICS -> EXP TK_mult EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',301),
  ('ARITHMETICS -> EXP TK_div EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',302),
  ('ARITHMETICS -> EXP TK_mod EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',303),
  ('ARITHMETICS -> TK_minus EXP','ARITHMETICS',2,'p_ARITHMETICS','Parser.py',304),
  ('RELATIONALS -> EXP TK_equalequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',309),
  ('RELATIONALS -> EXP TK_notequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',310),
  ('RELATIONALS -> EXP TK_lessequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',311),
  ('RELATIONALS -> EXP TK_greatequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',312),
  ('RELATIONALS -> EXP TK_less EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',313),
  ('RELATIONALS -> EXP TK_great EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',314),
  ('LOGICS -> EXP TK_and EXP','LOGICS',3,'p_LOGICS','Parser.py',318),
  ('LOGICS -> EXP TK_or EXP','LOGICS',3,'p_LOGICS','Parser.py',319),
  ('LOGICS -> TK_not EXP','LOGICS',2,'p_LOGICS','Parser.py',320),
  ('CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar','CAST',6,'p_CAST','Parser.py',325),
  ('NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar','NATIVEFUNC',6,'p_NATIVEFUNC','Parser.py',329),
  ('TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar','TERNARY',8,'p_TERNARY','Parser.py',332),
  ('TYPE -> RW_int','TYPE',1,'p_TYPE','Parser.py',335),
  ('TYPE -> RW_bit','TYPE',1,'p_TYPE','Parser.py',336),
  ('TYPE -> RW_decimal','TYPE',1,'p_TYPE','Parser.py',337),
  ('TYPE -> RW_date','TYPE',1,'p_TYPE','Parser.py',338),
  ('TYPE -> RW_datetime','TYPE',1,'p_TYPE','Parser.py',339),
  ('TYPE -> RW_nchar','TYPE',1,'p_TYPE','Parser.py',340),
  ('TYPE -> RW_nvarchar','TYPE',1,'p_TYPE','Parser.py',341),
]
