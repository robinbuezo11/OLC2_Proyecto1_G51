
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTK_orleftTK_andrightTK_notleftTK_equalTK_notequalleftTK_lessTK_lessequalTK_greatTK_greatequalleftTK_plusTK_minusleftTK_multTK_divTK_modrightTK_uminusRW_add RW_alter RW_as RW_begin RW_bit RW_break RW_cas RW_case RW_column RW_concatena RW_contar RW_continue RW_create RW_date RW_datetime RW_decimal RW_declare RW_delete RW_drop RW_else RW_end RW_for RW_from RW_function RW_hoy RW_if RW_in RW_insert RW_int RW_into RW_loop RW_nchar RW_null RW_nvarchar RW_print RW_procedure RW_rename RW_return RW_returns RW_select RW_set RW_substraer RW_table RW_then RW_to RW_truncate RW_update RW_values RW_when RW_where RW_while TK_and TK_comma TK_date TK_datetime TK_decimal TK_div TK_dot TK_equal TK_equalequal TK_field TK_great TK_greatequal TK_id TK_int TK_less TK_lessequal TK_lpar TK_minus TK_mod TK_mult TK_not TK_notequal TK_nvarchar TK_or TK_plus TK_rpar TK_semicolonINIT : INSTRUCTIONS\n            |INSTRUCTIONS : INSTRUCTIONS INSTRUCTION\n                    | INSTRUCTIONINSTRUCTION  : CREATETABLE TK_semicolon\n                    | ALTERTAB TK_semicolon\n                    | DROPTAB TK_semicolon\n                    | INSERTREG TK_semicolon\n                    | UPDATETAB TK_semicolon\n                    | TRUNCATETAB TK_semicolon\n                    | DELETETAB TK_semicolon\n                    | SELECT TK_semicolon\n                    | DECLAREID TK_semicolon\n                    | ASIGNID TK_semicolon\n                    | IFSTRUCT TK_semicolon\n                    | CASESTRUCT_S TK_semicolon\n                    | WHILESTRUCT TK_semicolon\n                    | FORSTRUCT TK_semicolon\n                    | FUNCDEC TK_semicolon\n                    | CALLFUNC TK_semicolon\n                    | ENCAP TK_semicolon\n                    | PRINT TK_semicolon\n                    | RW_break TK_semicolon\n                    | RW_continue TK_semicolon\n                    | RW_return EXP TK_semicolon\n                    | RW_return TK_semicolonDECLAREID    : RW_declare DECLIDS\n                    | RW_declare TK_id TYPE TK_equal EXPDECLIDS  : DECLIDS TK_comma DECLID\n                | DECLIDDECLID : TK_id TYPEASIGNID : RW_set TK_id TK_equal EXPSELECT   : RW_select FIELDS RW_from TK_field RW_where EXP\n                | RW_select FIELDS RW_from TK_field\n                | RW_select LIST_IDSFIELDS   : LIST_IDS\n                | TK_multLIST_IDS : LIST_IDS TK_comma IDS\n                | IDSIDS  : EXP RW_as TK_nvarchar\n            | EXP RW_as TK_field\n            | EXPCREATETABLE : RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rparATTRIBUTES   : ATTRIBUTES TK_comma ATTRIBUTE\n                    | ATTRIBUTEATTRIBUTE : TK_field TYPEALTERTAB : RW_alter RW_table TK_field ACTIONACTION   : RW_add TK_field TYPE\n                | RW_drop RW_column TK_field\n                | RW_rename RW_to TK_field\n                | RW_rename RW_column TK_field RW_to TK_fieldDROPTAB : RW_drop RW_table TK_fieldINSERTREG : RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rparLIST_ATTRIBS : LIST_ATTRIBS TK_comma TK_field\n                    | TK_fieldLIST_EXPS    : LIST_EXPS TK_comma EXP\n                    | EXPUPDATETAB : RW_update TK_field RW_set VALUESTAB RW_where EXPVALUESTAB    : VALUESTAB TK_comma VALUETAB\n                    | VALUETAB VALUETAB : TK_field TK_equal EXPTRUNCATETAB : RW_truncate RW_table TK_fieldDELETETAB : RW_delete RW_from TK_field RW_where EXPIFSTRUCT : RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_then INSTRUCTIONS RW_end RW_if\n                | RW_if EXP RW_begin INSTRUCTIONS RW_endCASESTRUCT_S : RW_case EXP WHENELSE RW_end RW_as TK_field\n                    | RW_case EXP WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case EXP WHENELSE RW_end\n                    | RW_case WHENELSE RW_end RW_as TK_field\n                    | RW_case WHENELSE RW_end RW_as TK_nvarchar\n                    | RW_case WHENELSE RW_endWHENELSE : WHENS ELSE\n                | WHENS\n                | ELSEWHENS    : WHENS WHEN\n                | WHENWHEN : RW_when EXP RW_then EXPELSE : RW_else EXPPRINT : RW_print EXPWHILESTRUCT : RW_while EXP ENCAPFORSTRUCT : RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loopFUNCDEC  : RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP\n                | RW_create RW_procedure TK_field PARAMS RW_as ENCAP\n                | RW_create RW_procedure TK_field RW_as ENCAP\n                | RW_create RW_procedure TK_field PARAMS ENCAP\n                | RW_create RW_procedure TK_field ENCAPPARAMS   : PARAMS TK_comma PARAM\n                | PARAMPARAM    : TK_id TYPEENCAP    : RW_begin INSTRUCTIONS RW_end\n                | RW_begin RW_endCALLFUNC : TK_field TK_lpar ARGS TK_rpar\n                | TK_field TK_lpar TK_rparARGS : ARGS TK_comma EXP\n            | EXPEXP  : ARITHMETICS\n            | RELATIONALS\n            | LOGICS\n            | CAST\n            | NATIVEFUNC\n            | CALLFUNC\n            | TK_id\n            | TK_field\n            | TK_nvarchar\n            | TK_int\n            | TK_decimal\n            | TK_date\n            | TK_datetime\n            | RW_null\n            | TK_lpar EXP TK_rparARITHMETICS  : EXP TK_plus EXP\n                    | EXP TK_minus EXP\n                    | EXP TK_mult EXP\n                    | EXP TK_div EXP\n                    | EXP TK_mod EXP\n                    | TK_minus EXP %prec TK_uminusRELATIONALS  : EXP TK_equal EXP\n                    | EXP TK_notequal EXP\n                    | EXP TK_lessequal EXP\n                    | EXP TK_greatequal EXP\n                    | EXP TK_less EXP\n                    | EXP TK_great EXPLOGICS   : EXP TK_and EXP\n                | EXP TK_or EXP\n                | TK_not EXPCAST : RW_cas TK_lpar EXP RW_as TYPE TK_rparNATIVEFUNC : RW_truncate TK_lpar EXP TK_comma EXP TK_rparTYPE : RW_int\n            | RW_bit\n            | RW_decimal\n            | RW_date\n            | RW_datetime\n            | RW_nchar\n            | RW_nvarchar'
    
_lr_action_items = {'$end':([0,1,2,3,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,116,],[-2,0,-1,-4,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-25,]),'RW_break':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[22,22,-4,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,22,-25,22,22,22,22,22,22,]),'RW_continue':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[23,23,-4,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,23,-25,23,23,23,23,23,23,]),'RW_return':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[24,24,-4,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,24,-25,24,24,24,24,24,24,]),'RW_create':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[25,25,-4,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,25,-25,25,25,25,25,25,25,]),'RW_alter':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[27,27,-4,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,27,-25,27,27,27,27,27,27,]),'RW_drop':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,141,160,161,213,214,245,272,],[28,28,-4,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,28,-25,198,28,28,28,28,28,28,]),'RW_insert':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[29,29,-4,29,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,29,-25,29,29,29,29,29,29,]),'RW_update':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[30,30,-4,30,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,30,-25,30,30,30,30,30,30,]),'RW_truncate':([0,2,3,24,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,79,80,81,87,104,111,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,160,161,170,195,205,212,213,214,217,220,238,239,242,245,252,272,290,297,],[32,32,-4,83,83,83,32,83,83,83,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,83,83,83,83,32,83,83,-25,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,32,32,83,83,83,83,32,32,83,83,83,83,83,32,83,32,83,83,]),'RW_delete':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[33,33,-4,33,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,33,-25,33,33,33,33,33,33,]),'RW_select':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[34,34,-4,34,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,34,-25,34,34,34,34,34,34,]),'RW_declare':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[35,35,-4,35,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,35,-25,35,35,35,35,35,35,]),'RW_set':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,91,104,116,160,161,213,214,245,272,],[31,31,-4,31,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,144,31,-25,31,31,31,31,31,31,]),'RW_if':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,246,272,285,],[36,36,-4,36,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,36,-25,36,36,36,36,36,273,36,291,]),'RW_case':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[38,38,-4,38,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,38,-25,38,38,38,38,38,38,]),'RW_while':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[39,39,-4,39,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,39,-25,39,39,39,39,39,39,]),'RW_for':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[40,40,-4,40,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,40,-25,40,40,40,40,40,40,]),'TK_field':([0,2,3,24,30,34,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,79,80,81,84,85,86,87,88,89,90,93,94,104,111,112,116,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,144,145,148,149,150,160,161,170,187,195,197,200,205,212,213,214,216,217,220,233,234,235,238,239,240,242,245,248,252,257,267,272,282,290,297,],[26,26,-4,72,91,72,72,26,72,72,72,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,72,72,72,135,136,137,72,141,142,143,146,147,26,72,72,-25,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,201,72,206,208,72,26,26,72,221,72,232,236,72,72,26,26,249,72,72,263,264,265,72,72,201,72,26,274,72,221,284,26,289,72,72,]),'RW_begin':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,103,104,113,116,131,132,137,139,153,154,155,156,157,158,159,160,161,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,190,192,194,213,214,226,230,245,261,272,276,277,278,281,287,],[37,37,-4,37,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,161,37,37,-25,-118,-127,37,-95,-130,-131,-132,-133,-134,-135,-136,37,37,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,37,37,-90,-94,37,37,37,-91,37,-89,37,37,-128,-129,37,37,]),'RW_print':([0,2,3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,104,116,160,161,213,214,245,272,],[41,41,-4,41,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,41,-25,41,41,41,41,41,41,]),'RW_end':([3,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,104,107,108,109,110,116,131,132,139,163,165,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,194,213,214,251,272,277,278,],[-4,105,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,162,164,-74,-75,-77,-25,-118,-127,-95,215,-73,-76,-79,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,-94,246,247,-78,285,-128,-129,]),'RW_else':([3,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,106,108,110,116,131,132,139,166,171,172,173,174,175,176,177,178,179,180,181,182,183,184,194,213,251,277,278,],[-4,111,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,111,111,-77,-25,-118,-127,-95,-76,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,-94,245,-78,-128,-129,]),'TK_semicolon':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,97,99,100,102,105,115,131,132,139,142,146,152,153,154,155,156,157,158,159,162,164,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,191,194,196,204,206,207,208,209,210,215,227,229,241,243,244,247,249,250,256,260,262,263,264,269,271,273,274,275,277,278,288,289,291,292,293,296,],[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,116,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-42,-35,-39,-27,-30,-93,-80,-118,-127,-95,-52,-62,-31,-130,-131,-132,-133,-134,-135,-136,-92,-72,-81,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,-88,-94,-47,-32,-34,-40,-41,-38,-29,-69,-87,-86,-63,-31,-28,-66,-70,-71,-43,-85,-48,-49,-50,-58,-33,-65,-67,-68,-128,-129,-84,-51,-64,-82,-83,-53,]),'TK_id':([24,31,34,35,36,38,39,40,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,137,145,150,151,170,188,195,205,212,217,220,228,238,239,242,252,290,297,],[71,92,71,101,71,71,71,114,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,193,71,71,211,71,193,71,71,71,71,71,193,71,71,71,71,71,71,]),'TK_nvarchar':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,149,150,170,195,205,212,216,217,220,238,239,242,248,252,290,297,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,207,73,73,73,73,73,250,73,73,73,73,73,275,73,73,73,]),'TK_int':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'TK_decimal':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'TK_date':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'TK_datetime':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'RW_null':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'TK_lpar':([24,26,34,36,38,39,41,72,79,80,81,82,83,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,135,136,143,145,150,170,195,205,212,217,220,238,239,242,252,283,290,297,],[79,87,79,79,79,79,79,87,79,79,79,133,134,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,187,188,200,79,79,79,79,79,79,79,79,79,79,79,79,290,79,79,]),'TK_minus':([24,34,36,38,39,41,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,96,103,106,111,112,113,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,139,140,145,150,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,195,204,205,212,217,218,220,231,238,239,241,242,244,251,252,254,268,269,271,276,277,278,290,295,297,298,],[80,80,80,80,80,80,118,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,80,80,80,80,118,118,118,80,80,118,118,80,80,80,80,80,80,80,80,80,80,80,80,80,118,-118,118,80,80,-95,118,80,80,118,118,80,-113,-114,-115,-116,-117,118,118,118,118,118,118,118,118,-112,118,118,-94,80,118,80,80,80,118,80,118,80,80,118,80,118,118,80,118,118,118,118,118,-128,-129,80,118,80,118,]),'TK_not':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'RW_cas':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'RW_table':([25,27,28,32,],[84,88,89,93,]),'RW_function':([25,],[85,]),'RW_procedure':([25,],[86,]),'RW_into':([29,],[90,]),'RW_from':([33,65,66,67,68,69,70,71,72,73,74,75,76,77,78,95,96,97,98,99,131,132,139,171,172,173,174,175,176,177,178,179,180,181,182,183,184,194,207,208,209,277,278,],[94,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,148,-42,-36,-37,-39,-118,-127,-95,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,-94,-40,-41,-38,-128,-129,]),'TK_mult':([34,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[98,119,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,119,119,119,119,119,119,-118,119,-95,119,119,119,119,119,-115,-116,-117,119,119,119,119,119,119,119,119,-112,119,119,-94,119,119,119,119,119,119,119,119,119,119,119,-128,-129,119,119,]),'RW_when':([38,65,66,67,68,69,70,71,72,73,74,75,76,77,78,106,108,110,131,132,139,166,171,172,173,174,175,176,177,178,179,180,181,182,183,184,194,251,277,278,],[112,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,112,112,-77,-118,-127,-95,-76,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,-94,-78,-128,-129,]),'TK_plus':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[117,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,117,117,117,117,117,117,-118,117,-95,117,117,117,-113,-114,-115,-116,-117,117,117,117,117,117,117,117,117,-112,117,117,-94,117,117,117,117,117,117,117,117,117,117,117,-128,-129,117,117,]),'TK_div':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[120,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,120,120,120,120,120,120,-118,120,-95,120,120,120,120,120,-115,-116,-117,120,120,120,120,120,120,120,120,-112,120,120,-94,120,120,120,120,120,120,120,120,120,120,120,-128,-129,120,120,]),'TK_mod':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[121,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,121,121,121,121,121,121,-118,121,-95,121,121,121,121,121,-115,-116,-117,121,121,121,121,121,121,121,121,-112,121,121,-94,121,121,121,121,121,121,121,121,121,121,121,-128,-129,121,121,]),'TK_equal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,92,96,103,106,113,115,130,131,132,139,140,152,153,154,155,156,157,158,159,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,201,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[122,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,145,122,122,122,122,122,122,-118,122,-95,122,212,-130,-131,-132,-133,-134,-135,-136,122,122,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,122,122,-112,122,122,-94,238,122,122,122,122,122,122,122,122,122,122,122,-128,-129,122,122,]),'TK_notequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[123,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,123,123,123,123,123,123,-118,123,-95,123,123,123,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,123,123,-112,123,123,-94,123,123,123,123,123,123,123,123,123,123,123,-128,-129,123,123,]),'TK_lessequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[124,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,124,124,124,124,124,124,-118,124,-95,124,124,124,-113,-114,-115,-116,-117,124,124,-121,-122,-123,-124,124,124,-112,124,124,-94,124,124,124,124,124,124,124,124,124,124,124,-128,-129,124,124,]),'TK_greatequal':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[125,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,125,125,125,125,125,125,-118,125,-95,125,125,125,-113,-114,-115,-116,-117,125,125,-121,-122,-123,-124,125,125,-112,125,125,-94,125,125,125,125,125,125,125,125,125,125,125,-128,-129,125,125,]),'TK_less':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[126,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,126,126,126,126,126,126,-118,126,-95,126,126,126,-113,-114,-115,-116,-117,126,126,-121,-122,-123,-124,126,126,-112,126,126,-94,126,126,126,126,126,126,126,126,126,126,126,-128,-129,126,126,]),'TK_great':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[127,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,127,127,127,127,127,127,-118,127,-95,127,127,127,-113,-114,-115,-116,-117,127,127,-121,-122,-123,-124,127,127,-112,127,127,-94,127,127,127,127,127,127,127,127,127,127,127,-128,-129,127,127,]),'TK_and':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[128,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,128,128,128,128,128,128,-118,-127,-95,128,128,128,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,128,-112,128,128,-94,128,128,128,128,128,128,128,128,128,128,128,-128,-129,128,128,]),'TK_or':([63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,103,106,113,115,130,131,132,139,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,194,204,218,231,241,244,251,254,268,269,271,276,277,278,295,298,],[129,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,129,129,129,129,129,129,-118,-127,-95,129,129,129,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,129,129,-94,129,129,129,129,129,129,129,129,129,129,129,-128,-129,129,129,]),'RW_as':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,131,132,137,139,153,154,155,156,157,158,159,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,189,192,194,215,230,261,277,278,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,149,-118,-127,190,-95,-130,-131,-132,-133,-134,-135,-136,216,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,219,226,-90,-94,248,-91,-89,-128,-129,]),'TK_comma':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,96,97,99,100,102,131,132,138,139,140,152,153,154,155,156,157,158,159,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,189,192,194,202,203,207,208,209,210,222,223,224,230,231,236,237,243,255,261,268,270,277,278,279,284,294,295,298,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-42,150,-39,151,-30,-118,-127,195,-95,-97,-31,-130,-131,-132,-133,-134,-135,-136,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,220,228,-90,-94,240,-60,-40,-41,-38,-29,257,-45,228,-91,-96,-55,267,-31,-46,-89,-61,-59,-128,-129,-44,-54,297,-57,-56,]),'RW_then':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,103,131,132,139,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,194,277,278,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,160,-118,-127,-95,217,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,-94,-128,-129,]),'TK_rpar':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,87,130,131,132,138,139,140,153,154,155,156,157,158,159,171,172,173,174,175,176,177,178,179,180,181,182,183,184,188,192,194,222,223,224,230,231,236,237,253,254,255,261,277,278,279,284,294,295,298,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,139,184,-118,-127,194,-95,-97,-130,-131,-132,-133,-134,-135,-136,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,225,-90,-94,256,-45,258,-91,-96,-55,266,277,278,-46,-89,-128,-129,-44,-54,296,-57,-56,]),'TK_dot':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,131,132,139,171,172,173,174,175,176,177,178,179,180,181,182,183,184,194,218,277,278,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-118,-127,-95,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,-94,252,-128,-129,]),'RW_where':([65,66,67,68,69,70,71,72,73,74,75,76,77,78,131,132,139,147,171,172,173,174,175,176,177,178,179,180,181,182,183,184,194,202,203,206,268,270,277,278,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-118,-127,-95,205,-113,-114,-115,-116,-117,-119,-120,-121,-122,-123,-124,-125,-126,-112,-94,239,-60,242,-61,-59,-128,-129,]),'RW_int':([101,193,211,219,221,232,259,280,],[153,153,153,153,153,153,153,153,]),'RW_bit':([101,193,211,219,221,232,259,280,],[154,154,154,154,154,154,154,154,]),'RW_decimal':([101,193,211,219,221,232,259,280,],[155,155,155,155,155,155,155,155,]),'RW_date':([101,193,211,219,221,232,259,280,],[156,156,156,156,156,156,156,156,]),'RW_datetime':([101,193,211,219,221,232,259,280,],[157,157,157,157,157,157,157,157,]),'RW_nchar':([101,193,211,219,221,232,259,280,],[158,158,158,158,158,158,158,158,]),'RW_nvarchar':([101,193,211,219,221,232,259,280,],[159,159,159,159,159,159,159,159,]),'RW_loop':([105,162,286,],[-93,-92,292,]),'RW_in':([114,],[170,]),'RW_add':([141,],[197,]),'RW_rename':([141,],[199,]),'RW_column':([198,199,],[233,235,]),'RW_to':([199,265,],[234,282,]),'RW_returns':([225,258,],[259,280,]),'RW_values':([266,],[283,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INIT':([0,],[1,]),'INSTRUCTIONS':([0,37,160,161,245,],[2,104,213,214,272,]),'INSTRUCTION':([0,2,37,104,160,161,213,214,245,272,],[3,42,3,42,3,3,42,42,3,42,]),'CREATETABLE':([0,2,37,104,160,161,213,214,245,272,],[4,4,4,4,4,4,4,4,4,4,]),'ALTERTAB':([0,2,37,104,160,161,213,214,245,272,],[5,5,5,5,5,5,5,5,5,5,]),'DROPTAB':([0,2,37,104,160,161,213,214,245,272,],[6,6,6,6,6,6,6,6,6,6,]),'INSERTREG':([0,2,37,104,160,161,213,214,245,272,],[7,7,7,7,7,7,7,7,7,7,]),'UPDATETAB':([0,2,37,104,160,161,213,214,245,272,],[8,8,8,8,8,8,8,8,8,8,]),'TRUNCATETAB':([0,2,37,104,160,161,213,214,245,272,],[9,9,9,9,9,9,9,9,9,9,]),'DELETETAB':([0,2,37,104,160,161,213,214,245,272,],[10,10,10,10,10,10,10,10,10,10,]),'SELECT':([0,2,37,104,160,161,213,214,245,272,],[11,11,11,11,11,11,11,11,11,11,]),'DECLAREID':([0,2,37,104,160,161,213,214,245,272,],[12,12,12,12,12,12,12,12,12,12,]),'ASIGNID':([0,2,37,104,160,161,213,214,245,272,],[13,13,13,13,13,13,13,13,13,13,]),'IFSTRUCT':([0,2,37,104,160,161,213,214,245,272,],[14,14,14,14,14,14,14,14,14,14,]),'CASESTRUCT_S':([0,2,37,104,160,161,213,214,245,272,],[15,15,15,15,15,15,15,15,15,15,]),'WHILESTRUCT':([0,2,37,104,160,161,213,214,245,272,],[16,16,16,16,16,16,16,16,16,16,]),'FORSTRUCT':([0,2,37,104,160,161,213,214,245,272,],[17,17,17,17,17,17,17,17,17,17,]),'FUNCDEC':([0,2,37,104,160,161,213,214,245,272,],[18,18,18,18,18,18,18,18,18,18,]),'CALLFUNC':([0,2,24,34,36,37,38,39,41,79,80,81,87,104,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,160,161,170,195,205,212,213,214,217,220,238,239,242,245,252,272,290,297,],[19,19,70,70,70,19,70,70,70,70,70,70,70,19,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,19,19,70,70,70,70,19,19,70,70,70,70,70,19,70,19,70,70,]),'ENCAP':([0,2,37,104,113,137,160,161,189,190,213,214,226,245,272,276,281,287,],[20,20,20,20,169,191,20,20,227,229,20,20,260,20,20,286,288,293,]),'PRINT':([0,2,37,104,160,161,213,214,245,272,],[21,21,21,21,21,21,21,21,21,21,]),'EXP':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[63,96,103,106,113,115,130,131,132,140,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,204,96,218,231,241,244,251,254,268,269,271,276,295,298,]),'ARITHMETICS':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'RELATIONALS':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LOGICS':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'CAST':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'NATIVEFUNC':([24,34,36,38,39,41,79,80,81,87,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,133,134,145,150,170,195,205,212,217,220,238,239,242,252,290,297,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'FIELDS':([34,],[95,]),'LIST_IDS':([34,],[97,]),'IDS':([34,150,],[99,209,]),'DECLIDS':([35,],[100,]),'DECLID':([35,151,],[102,210,]),'WHENELSE':([38,106,],[107,163,]),'WHENS':([38,106,],[108,108,]),'ELSE':([38,106,108,],[109,109,165,]),'WHEN':([38,106,108,],[110,110,166,]),'ARGS':([87,],[138,]),'TYPE':([101,193,211,219,221,232,259,280,],[152,230,243,253,255,262,281,287,]),'PARAMS':([137,188,],[189,224,]),'PARAM':([137,188,228,],[192,192,261,]),'ACTION':([141,],[196,]),'VALUESTAB':([144,],[202,]),'VALUETAB':([144,240,],[203,270,]),'ATTRIBUTES':([187,],[222,]),'ATTRIBUTE':([187,257,],[223,279,]),'LIST_ATTRIBS':([200,],[237,]),'LIST_EXPS':([290,],[294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INIT","S'",1,None,None,None),
  ('INIT -> INSTRUCTIONS','INIT',1,'p_INIT','Parser.py',27),
  ('INIT -> <empty>','INIT',0,'p_INIT','Parser.py',28),
  ('INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION','INSTRUCTIONS',2,'p_INSTRUCTIONS','Parser.py',33),
  ('INSTRUCTIONS -> INSTRUCTION','INSTRUCTIONS',1,'p_INSTRUCTIONS','Parser.py',34),
  ('INSTRUCTION -> CREATETABLE TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',39),
  ('INSTRUCTION -> ALTERTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',40),
  ('INSTRUCTION -> DROPTAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',41),
  ('INSTRUCTION -> INSERTREG TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',42),
  ('INSTRUCTION -> UPDATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',43),
  ('INSTRUCTION -> TRUNCATETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',44),
  ('INSTRUCTION -> DELETETAB TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',45),
  ('INSTRUCTION -> SELECT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',46),
  ('INSTRUCTION -> DECLAREID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',47),
  ('INSTRUCTION -> ASIGNID TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',48),
  ('INSTRUCTION -> IFSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',49),
  ('INSTRUCTION -> CASESTRUCT_S TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',50),
  ('INSTRUCTION -> WHILESTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',51),
  ('INSTRUCTION -> FORSTRUCT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',52),
  ('INSTRUCTION -> FUNCDEC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',53),
  ('INSTRUCTION -> CALLFUNC TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',54),
  ('INSTRUCTION -> ENCAP TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',55),
  ('INSTRUCTION -> PRINT TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',56),
  ('INSTRUCTION -> RW_break TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',57),
  ('INSTRUCTION -> RW_continue TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',58),
  ('INSTRUCTION -> RW_return EXP TK_semicolon','INSTRUCTION',3,'p_INSTRUCTION','Parser.py',59),
  ('INSTRUCTION -> RW_return TK_semicolon','INSTRUCTION',2,'p_INSTRUCTION','Parser.py',60),
  ('DECLAREID -> RW_declare DECLIDS','DECLAREID',2,'p_DECLAREID','Parser.py',70),
  ('DECLAREID -> RW_declare TK_id TYPE TK_equal EXP','DECLAREID',5,'p_DECLAREID','Parser.py',71),
  ('DECLIDS -> DECLIDS TK_comma DECLID','DECLIDS',3,'p_DECLIDS','Parser.py',76),
  ('DECLIDS -> DECLID','DECLIDS',1,'p_DECLIDS','Parser.py',77),
  ('DECLID -> TK_id TYPE','DECLID',2,'p_DECLID','Parser.py',82),
  ('ASIGNID -> RW_set TK_id TK_equal EXP','ASIGNID',4,'p_ASIGNID','Parser.py',87),
  ('SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP','SELECT',6,'p_SELECT','Parser.py',92),
  ('SELECT -> RW_select FIELDS RW_from TK_field','SELECT',4,'p_SELECT','Parser.py',93),
  ('SELECT -> RW_select LIST_IDS','SELECT',2,'p_SELECT','Parser.py',94),
  ('FIELDS -> LIST_IDS','FIELDS',1,'p_FIELDS','Parser.py',100),
  ('FIELDS -> TK_mult','FIELDS',1,'p_FIELDS','Parser.py',101),
  ('LIST_IDS -> LIST_IDS TK_comma IDS','LIST_IDS',3,'p_LIST_IDS','Parser.py',105),
  ('LIST_IDS -> IDS','LIST_IDS',1,'p_LIST_IDS','Parser.py',106),
  ('IDS -> EXP RW_as TK_nvarchar','IDS',3,'p_IDS','Parser.py',111),
  ('IDS -> EXP RW_as TK_field','IDS',3,'p_IDS','Parser.py',112),
  ('IDS -> EXP','IDS',1,'p_IDS','Parser.py',113),
  ('CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar','CREATETABLE',6,'p_CREATETABLE','Parser.py',119),
  ('ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE','ATTRIBUTES',3,'p_ATTRIBUTES','Parser.py',122),
  ('ATTRIBUTES -> ATTRIBUTE','ATTRIBUTES',1,'p_ATTRIBUTES','Parser.py',123),
  ('ATTRIBUTE -> TK_field TYPE','ATTRIBUTE',2,'p_ATTRIBUTE','Parser.py',126),
  ('ALTERTAB -> RW_alter RW_table TK_field ACTION','ALTERTAB',4,'p_ALTERTAB','Parser.py',130),
  ('ACTION -> RW_add TK_field TYPE','ACTION',3,'p_ACTION','Parser.py',133),
  ('ACTION -> RW_drop RW_column TK_field','ACTION',3,'p_ACTION','Parser.py',134),
  ('ACTION -> RW_rename RW_to TK_field','ACTION',3,'p_ACTION','Parser.py',135),
  ('ACTION -> RW_rename RW_column TK_field RW_to TK_field','ACTION',5,'p_ACTION','Parser.py',136),
  ('DROPTAB -> RW_drop RW_table TK_field','DROPTAB',3,'p_DROPTAB','Parser.py',140),
  ('INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar','INSERTREG',10,'p_INSERTREG','Parser.py',144),
  ('LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field','LIST_ATTRIBS',3,'p_LIST_ATTRIBS','Parser.py',147),
  ('LIST_ATTRIBS -> TK_field','LIST_ATTRIBS',1,'p_LIST_ATTRIBS','Parser.py',148),
  ('LIST_EXPS -> LIST_EXPS TK_comma EXP','LIST_EXPS',3,'p_LIST_EXPS','Parser.py',151),
  ('LIST_EXPS -> EXP','LIST_EXPS',1,'p_LIST_EXPS','Parser.py',152),
  ('UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP','UPDATETAB',6,'p_UPDATETAB','Parser.py',156),
  ('VALUESTAB -> VALUESTAB TK_comma VALUETAB','VALUESTAB',3,'p_VALUESTAB','Parser.py',159),
  ('VALUESTAB -> VALUETAB','VALUESTAB',1,'p_VALUESTAB','Parser.py',160),
  ('VALUETAB -> TK_field TK_equal EXP','VALUETAB',3,'p_VALUETAB','Parser.py',163),
  ('TRUNCATETAB -> RW_truncate RW_table TK_field','TRUNCATETAB',3,'p_TRUNCATETAB','Parser.py',167),
  ('DELETETAB -> RW_delete RW_from TK_field RW_where EXP','DELETETAB',5,'p_DELETETAB','Parser.py',171),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if','IFSTRUCT',8,'p_IFSTRUCT','Parser.py',175),
  ('IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if','IFSTRUCT',6,'p_IFSTRUCT','Parser.py',176),
  ('IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end','IFSTRUCT',5,'p_IFSTRUCT','Parser.py',177),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',181),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',6,'p_CASESTRUCT_S','Parser.py',182),
  ('CASESTRUCT_S -> RW_case EXP WHENELSE RW_end','CASESTRUCT_S',4,'p_CASESTRUCT_S','Parser.py',183),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',184),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar','CASESTRUCT_S',5,'p_CASESTRUCT_S','Parser.py',185),
  ('CASESTRUCT_S -> RW_case WHENELSE RW_end','CASESTRUCT_S',3,'p_CASESTRUCT_S','Parser.py',186),
  ('WHENELSE -> WHENS ELSE','WHENELSE',2,'p_WHENELSE','Parser.py',189),
  ('WHENELSE -> WHENS','WHENELSE',1,'p_WHENELSE','Parser.py',190),
  ('WHENELSE -> ELSE','WHENELSE',1,'p_WHENELSE','Parser.py',191),
  ('WHENS -> WHENS WHEN','WHENS',2,'p_WHENS','Parser.py',194),
  ('WHENS -> WHEN','WHENS',1,'p_WHENS','Parser.py',195),
  ('WHEN -> RW_when EXP RW_then EXP','WHEN',4,'p_WHEN','Parser.py',198),
  ('ELSE -> RW_else EXP','ELSE',2,'p_ELSE','Parser.py',201),
  ('PRINT -> RW_print EXP','PRINT',2,'p_PRINT','Parser.py',205),
  ('WHILESTRUCT -> RW_while EXP ENCAP','WHILESTRUCT',3,'p_WHILESTRUCT','Parser.py',209),
  ('FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop','FORSTRUCT',8,'p_FORSTRUCT','Parser.py',213),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP','FUNCDEC',9,'p_FUNCDEC','Parser.py',217),
  ('FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP','FUNCDEC',8,'p_FUNCDEC','Parser.py',218),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP','FUNCDEC',6,'p_FUNCDEC','Parser.py',219),
  ('FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',220),
  ('FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP','FUNCDEC',5,'p_FUNCDEC','Parser.py',221),
  ('FUNCDEC -> RW_create RW_procedure TK_field ENCAP','FUNCDEC',4,'p_FUNCDEC','Parser.py',222),
  ('PARAMS -> PARAMS TK_comma PARAM','PARAMS',3,'p_PARAMS','Parser.py',225),
  ('PARAMS -> PARAM','PARAMS',1,'p_PARAMS','Parser.py',226),
  ('PARAM -> TK_id TYPE','PARAM',2,'p_PARAM','Parser.py',229),
  ('ENCAP -> RW_begin INSTRUCTIONS RW_end','ENCAP',3,'p_ENCAP','Parser.py',233),
  ('ENCAP -> RW_begin RW_end','ENCAP',2,'p_ENCAP','Parser.py',234),
  ('CALLFUNC -> TK_field TK_lpar ARGS TK_rpar','CALLFUNC',4,'p_CALLFUNC','Parser.py',238),
  ('CALLFUNC -> TK_field TK_lpar TK_rpar','CALLFUNC',3,'p_CALLFUNC','Parser.py',239),
  ('ARGS -> ARGS TK_comma EXP','ARGS',3,'p_ARGS','Parser.py',242),
  ('ARGS -> EXP','ARGS',1,'p_ARGS','Parser.py',243),
  ('EXP -> ARITHMETICS','EXP',1,'p_EXP','Parser.py',246),
  ('EXP -> RELATIONALS','EXP',1,'p_EXP','Parser.py',247),
  ('EXP -> LOGICS','EXP',1,'p_EXP','Parser.py',248),
  ('EXP -> CAST','EXP',1,'p_EXP','Parser.py',249),
  ('EXP -> NATIVEFUNC','EXP',1,'p_EXP','Parser.py',250),
  ('EXP -> CALLFUNC','EXP',1,'p_EXP','Parser.py',251),
  ('EXP -> TK_id','EXP',1,'p_EXP','Parser.py',252),
  ('EXP -> TK_field','EXP',1,'p_EXP','Parser.py',253),
  ('EXP -> TK_nvarchar','EXP',1,'p_EXP','Parser.py',254),
  ('EXP -> TK_int','EXP',1,'p_EXP','Parser.py',255),
  ('EXP -> TK_decimal','EXP',1,'p_EXP','Parser.py',256),
  ('EXP -> TK_date','EXP',1,'p_EXP','Parser.py',257),
  ('EXP -> TK_datetime','EXP',1,'p_EXP','Parser.py',258),
  ('EXP -> RW_null','EXP',1,'p_EXP','Parser.py',259),
  ('EXP -> TK_lpar EXP TK_rpar','EXP',3,'p_EXP','Parser.py',260),
  ('ARITHMETICS -> EXP TK_plus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',275),
  ('ARITHMETICS -> EXP TK_minus EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',276),
  ('ARITHMETICS -> EXP TK_mult EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',277),
  ('ARITHMETICS -> EXP TK_div EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',278),
  ('ARITHMETICS -> EXP TK_mod EXP','ARITHMETICS',3,'p_ARITHMETICS','Parser.py',279),
  ('ARITHMETICS -> TK_minus EXP','ARITHMETICS',2,'p_ARITHMETICS','Parser.py',280),
  ('RELATIONALS -> EXP TK_equal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',285),
  ('RELATIONALS -> EXP TK_notequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',286),
  ('RELATIONALS -> EXP TK_lessequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',287),
  ('RELATIONALS -> EXP TK_greatequal EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',288),
  ('RELATIONALS -> EXP TK_less EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',289),
  ('RELATIONALS -> EXP TK_great EXP','RELATIONALS',3,'p_RELATIONALS','Parser.py',290),
  ('LOGICS -> EXP TK_and EXP','LOGICS',3,'p_LOGICS','Parser.py',294),
  ('LOGICS -> EXP TK_or EXP','LOGICS',3,'p_LOGICS','Parser.py',295),
  ('LOGICS -> TK_not EXP','LOGICS',2,'p_LOGICS','Parser.py',296),
  ('CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar','CAST',6,'p_CAST','Parser.py',299),
  ('NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar','NATIVEFUNC',6,'p_NATIVEFUNC','Parser.py',303),
  ('TYPE -> RW_int','TYPE',1,'p_TYPE','Parser.py',306),
  ('TYPE -> RW_bit','TYPE',1,'p_TYPE','Parser.py',307),
  ('TYPE -> RW_decimal','TYPE',1,'p_TYPE','Parser.py',308),
  ('TYPE -> RW_date','TYPE',1,'p_TYPE','Parser.py',309),
  ('TYPE -> RW_datetime','TYPE',1,'p_TYPE','Parser.py',310),
  ('TYPE -> RW_nchar','TYPE',1,'p_TYPE','Parser.py',311),
  ('TYPE -> RW_nvarchar','TYPE',1,'p_TYPE','Parser.py',312),
]
