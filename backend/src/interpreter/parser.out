Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INIT
Rule 1     INIT -> INSTRUCTIONS
Rule 2     INIT -> <empty>
Rule 3     INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION
Rule 4     INSTRUCTIONS -> INSTRUCTION
Rule 5     INSTRUCTION -> CREATEDB TK_semicolon
Rule 6     INSTRUCTION -> USEDB TK_semicolon
Rule 7     INSTRUCTION -> CREATETABLE TK_semicolon
Rule 8     INSTRUCTION -> ALTERTAB TK_semicolon
Rule 9     INSTRUCTION -> DROPTAB TK_semicolon
Rule 10    INSTRUCTION -> INSERTREG TK_semicolon
Rule 11    INSTRUCTION -> UPDATETAB TK_semicolon
Rule 12    INSTRUCTION -> TRUNCATETAB TK_semicolon
Rule 13    INSTRUCTION -> DELETETAB TK_semicolon
Rule 14    INSTRUCTION -> SELECT TK_semicolon
Rule 15    INSTRUCTION -> DECLAREID TK_semicolon
Rule 16    INSTRUCTION -> ASIGNID TK_semicolon
Rule 17    INSTRUCTION -> IFSTRUCT TK_semicolon
Rule 18    INSTRUCTION -> CASESTRUCT_S TK_semicolon
Rule 19    INSTRUCTION -> WHILESTRUCT TK_semicolon
Rule 20    INSTRUCTION -> FORSTRUCT TK_semicolon
Rule 21    INSTRUCTION -> FUNCDEC TK_semicolon
Rule 22    INSTRUCTION -> CALLFUNC TK_semicolon
Rule 23    INSTRUCTION -> ENCAP TK_semicolon
Rule 24    INSTRUCTION -> PRINT TK_semicolon
Rule 25    INSTRUCTION -> RW_break TK_semicolon
Rule 26    INSTRUCTION -> RW_continue TK_semicolon
Rule 27    INSTRUCTION -> RW_return EXP TK_semicolon
Rule 28    INSTRUCTION -> RW_return TK_semicolon
Rule 29    CREATEDB -> RW_create RW_data RW_base TK_field
Rule 30    USEDB -> RW_use TK_field
Rule 31    DECLAREID -> RW_declare DECLIDS
Rule 32    DECLAREID -> RW_declare TK_id TYPE TK_equal EXP
Rule 33    DECLIDS -> DECLIDS TK_comma DECLID
Rule 34    DECLIDS -> DECLID
Rule 35    DECLID -> TK_id TYPE
Rule 36    DECLID -> TK_id RW_as TYPE
Rule 37    DECLID -> TK_id TYPE TK_lpar TK_int TK_rpar
Rule 38    ASIGNID -> RW_set TK_id TK_equal EXP
Rule 39    SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP
Rule 40    SELECT -> RW_select FIELDS RW_from TK_field
Rule 41    SELECT -> RW_select LIST_IDS
Rule 42    FIELDS -> LIST_IDS
Rule 43    FIELDS -> TK_mult
Rule 44    LIST_IDS -> LIST_IDS TK_comma IDS
Rule 45    LIST_IDS -> IDS
Rule 46    IDS -> EXP RW_as TK_nvarchar
Rule 47    IDS -> EXP RW_as TK_field
Rule 48    IDS -> EXP
Rule 49    CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
Rule 50    ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE
Rule 51    ATTRIBUTES -> ATTRIBUTE
Rule 52    ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS
Rule 53    ATTRIBUTE -> TK_field TYPE PROPS
Rule 54    ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar
Rule 55    ATTRIBUTE -> TK_field TYPE
Rule 56    PROPS -> RW_not RW_null RW_primary RW_key FKEY
Rule 57    PROPS -> RW_not RW_null RW_primary RW_key
Rule 58    PROPS -> RW_primary RW_key RW_not RW_null FKEY
Rule 59    PROPS -> RW_primary RW_key RW_not RW_null
Rule 60    PROPS -> RW_not RW_null FKEY
Rule 61    PROPS -> RW_not RW_null
Rule 62    PROPS -> RW_primary RW_key FKEY
Rule 63    PROPS -> RW_primary RW_key
Rule 64    PROPS -> FKEY
Rule 65    FKEY -> RW_ref TK_field TK_lpar TK_field TK_rpar
Rule 66    ALTERTAB -> RW_alter RW_table TK_field ACTION
Rule 67    ACTION -> RW_add RW_column TK_field TYPE
Rule 68    ACTION -> RW_drop TK_field
Rule 69    ACTION -> RW_rename RW_to TK_field
Rule 70    ACTION -> RW_rename RW_column TK_field RW_to TK_field
Rule 71    DROPTAB -> RW_drop RW_table TK_field
Rule 72    INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
Rule 73    LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field
Rule 74    LIST_ATTRIBS -> TK_field
Rule 75    LIST_EXPS -> LIST_EXPS TK_comma EXP
Rule 76    LIST_EXPS -> EXP
Rule 77    UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP
Rule 78    VALUESTAB -> VALUESTAB TK_comma VALUETAB
Rule 79    VALUESTAB -> VALUETAB
Rule 80    VALUETAB -> TK_field TK_equal EXP
Rule 81    TRUNCATETAB -> RW_truncate RW_table TK_field
Rule 82    DELETETAB -> RW_delete RW_from TK_field RW_where EXP
Rule 83    IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
Rule 84    IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
Rule 85    IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
Rule 86    IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end
Rule 87    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field
Rule 88    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
Rule 89    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end
Rule 90    CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field
Rule 91    CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar
Rule 92    CASESTRUCT_S -> RW_case WHENELSE RW_end
Rule 93    WHENELSE -> WHENS ELSE
Rule 94    WHENELSE -> WHENS
Rule 95    WHENELSE -> ELSE
Rule 96    WHENS -> WHENS WHEN
Rule 97    WHENS -> WHEN
Rule 98    WHEN -> RW_when EXP RW_then EXP
Rule 99    ELSE -> RW_else RW_then EXP
Rule 100   PRINT -> RW_print EXP
Rule 101   WHILESTRUCT -> RW_while EXP ENCAP
Rule 102   FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
Rule 103   FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
Rule 104   FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
Rule 105   FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP
Rule 106   FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP
Rule 107   FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
Rule 108   FUNCDEC -> RW_create RW_procedure TK_field ENCAP
Rule 109   PARAMS -> PARAMS TK_comma PARAM
Rule 110   PARAMS -> PARAM
Rule 111   PARAM -> TK_id TYPE
Rule 112   PARAM -> TK_id RW_as TYPE
Rule 113   ENCAP -> RW_begin INSTRUCTIONS RW_end
Rule 114   ENCAP -> RW_begin RW_end
Rule 115   CALLFUNC -> TK_field TK_lpar ARGS TK_rpar
Rule 116   CALLFUNC -> TK_field TK_lpar TK_rpar
Rule 117   CALLFUNC -> RW_exec TK_field ARGS
Rule 118   ARGS -> ARGS TK_comma EXP
Rule 119   ARGS -> EXP
Rule 120   EXP -> ARITHMETICS
Rule 121   EXP -> RELATIONALS
Rule 122   EXP -> LOGICS
Rule 123   EXP -> CAST
Rule 124   EXP -> NATIVEFUNC
Rule 125   EXP -> CALLFUNC
Rule 126   EXP -> TERNARY
Rule 127   EXP -> TK_id
Rule 128   EXP -> TK_id TK_point TK_id
Rule 129   EXP -> TK_field
Rule 130   EXP -> TK_field TK_point TK_field
Rule 131   EXP -> TK_nvarchar
Rule 132   EXP -> TK_int
Rule 133   EXP -> TK_decimal
Rule 134   EXP -> TK_date
Rule 135   EXP -> TK_datetime
Rule 136   EXP -> RW_null
Rule 137   EXP -> TK_lpar EXP TK_rpar
Rule 138   ARITHMETICS -> EXP TK_plus EXP
Rule 139   ARITHMETICS -> EXP TK_minus EXP
Rule 140   ARITHMETICS -> EXP TK_mult EXP
Rule 141   ARITHMETICS -> EXP TK_div EXP
Rule 142   ARITHMETICS -> EXP TK_mod EXP
Rule 143   ARITHMETICS -> TK_minus EXP
Rule 144   RELATIONALS -> EXP TK_equalequal EXP
Rule 145   RELATIONALS -> EXP TK_equal EXP
Rule 146   RELATIONALS -> EXP TK_notequal EXP
Rule 147   RELATIONALS -> EXP TK_lessequal EXP
Rule 148   RELATIONALS -> EXP TK_greatequal EXP
Rule 149   RELATIONALS -> EXP TK_less EXP
Rule 150   RELATIONALS -> EXP TK_great EXP
Rule 151   LOGICS -> EXP TK_and EXP
Rule 152   LOGICS -> EXP TK_or EXP
Rule 153   LOGICS -> TK_not EXP
Rule 154   CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar
Rule 155   NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
Rule 156   NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
Rule 157   NATIVEFUNC -> RW_hoy TK_lpar TK_rpar
Rule 158   TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
Rule 159   TYPE -> RW_int
Rule 160   TYPE -> RW_bit
Rule 161   TYPE -> RW_decimal
Rule 162   TYPE -> RW_date
Rule 163   TYPE -> RW_datetime
Rule 164   TYPE -> RW_nchar
Rule 165   TYPE -> RW_nvarchar

Terminals, with rules where they appear

RW_add               : 67
RW_alter             : 66
RW_as                : 36 46 47 87 88 90 91 103 104 105 106 107 112 154
RW_base              : 29
RW_begin             : 83 83 86 113 114
RW_bit               : 160
RW_break             : 25
RW_case              : 87 88 89 90 91 92
RW_cast              : 154
RW_column            : 67 70
RW_concatenar        : 155
RW_continue          : 26
RW_create            : 29 49 103 104 105 106 107 108
RW_data              : 29
RW_date              : 162
RW_datetime          : 163
RW_decimal           : 161
RW_declare           : 31 32
RW_delete            : 82
RW_drop              : 68 71
RW_else              : 83 84 99
RW_end               : 83 83 84 85 86 87 88 89 90 91 92 113 114
RW_exec              : 117
RW_for               : 102
RW_from              : 39 40 82
RW_function          : 103 104
RW_hoy               : 157
RW_if                : 83 84 84 85 85 86 158
RW_in                : 102
RW_insert            : 72
RW_int               : 159
RW_into              : 72
RW_key               : 56 57 58 59 62 63
RW_loop              : 102
RW_nchar             : 164
RW_not               : 56 57 58 59 60 61
RW_null              : 56 57 58 59 60 61 136
RW_nvarchar          : 165
RW_primary           : 56 57 58 59 62 63
RW_print             : 100
RW_procedure         : 105 106 107 108
RW_ref               : 65
RW_rename            : 69 70
RW_return            : 27 28
RW_returns           : 103 104
RW_select            : 39 40 41
RW_set               : 38 77
RW_substraer         : 156
RW_table             : 49 66 71 81
RW_then              : 84 85 98 99
RW_to                : 69 70
RW_truncate          : 81
RW_update            : 77
RW_use               : 30
RW_values            : 72
RW_when              : 98
RW_where             : 39 77 82
RW_while             : 101
TK_and               : 151
TK_comma             : 33 44 50 73 75 78 109 118 155 156 156 158 158
TK_date              : 134
TK_datetime          : 135
TK_decimal           : 133
TK_div               : 141
TK_dot               : 102
TK_equal             : 32 38 80 145
TK_equalequal        : 144
TK_field             : 29 30 39 40 47 49 52 53 54 55 65 65 66 67 68 69 70 70 71 72 73 74 77 80 81 82 87 90 103 104 105 106 107 108 115 116 117 129 130 130
TK_great             : 150
TK_greatequal        : 148
TK_id                : 32 35 36 37 38 102 111 112 127 128 128
TK_int               : 37 52 54 132
TK_less              : 149
TK_lessequal         : 147
TK_lpar              : 37 49 52 54 65 72 72 103 104 107 115 116 137 154 155 156 157 158
TK_minus             : 139 143
TK_mod               : 142
TK_mult              : 43 140
TK_not               : 153
TK_notequal          : 146
TK_nvarchar          : 46 88 91 131
TK_or                : 152
TK_plus              : 138
TK_point             : 128 130
TK_rpar              : 37 49 52 54 65 72 72 103 104 107 115 116 137 154 155 156 157 158
TK_semicolon         : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
error                : 

Nonterminals, with rules where they appear

ACTION               : 66
ALTERTAB             : 8
ARGS                 : 115 117 118
ARITHMETICS          : 120
ASIGNID              : 16
ATTRIBUTE            : 50 51
ATTRIBUTES           : 49 50
CALLFUNC             : 22 125
CASESTRUCT_S         : 18
CAST                 : 123
CREATEDB             : 5
CREATETABLE          : 7
DECLAREID            : 15
DECLID               : 33 34
DECLIDS              : 31 33
DELETETAB            : 13
DROPTAB              : 9
ELSE                 : 93 95
ENCAP                : 23 101 102 103 104 105 106 107 108
EXP                  : 27 32 38 39 46 47 48 75 76 77 80 82 83 84 85 86 87 88 89 98 98 99 100 101 102 102 118 119 137 138 138 139 139 140 140 141 141 142 142 143 144 144 145 145 146 146 147 147 148 148 149 149 150 150 151 151 152 152 153 154 155 155 156 156 156 158 158 158
FIELDS               : 39 40
FKEY                 : 56 58 60 62 64
FORSTRUCT            : 20
FUNCDEC              : 21
IDS                  : 44 45
IFSTRUCT             : 17
INIT                 : 0
INSERTREG            : 10
INSTRUCTION          : 3 4
INSTRUCTIONS         : 1 3 83 83 84 84 85 86 113
LIST_ATTRIBS         : 72 73
LIST_EXPS            : 72 75
LIST_IDS             : 41 42 44
LOGICS               : 122
NATIVEFUNC           : 124
PARAM                : 109 110
PARAMS               : 103 105 107 109
PRINT                : 24
PROPS                : 52 53
RELATIONALS          : 121
SELECT               : 14
TERNARY              : 126
TRUNCATETAB          : 12
TYPE                 : 32 35 36 37 52 53 54 55 67 103 104 111 112 154
UPDATETAB            : 11
USEDB                : 6
VALUESTAB            : 77 78
VALUETAB             : 78 79
WHEN                 : 96 97
WHENELSE             : 87 88 89 90 91 92
WHENS                : 93 94 96
WHILESTRUCT          : 19

Parsing method: LALR

state 0

    (0) S' -> . INIT
    (1) INIT -> . INSTRUCTIONS
    (2) INIT -> .
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    $end            reduce using rule 2 (INIT -> .)
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INIT                           shift and go to state 1
    INSTRUCTIONS                   shift and go to state 2
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 1

    (0) S' -> INIT .



state 2

    (1) INIT -> INSTRUCTIONS .
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    $end            reduce using rule 1 (INIT -> INSTRUCTIONS .)
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTION                    shift and go to state 46
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 3

    (4) INSTRUCTIONS -> INSTRUCTION .

    RW_break        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_continue     reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_return       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_create       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_use          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_alter        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_drop         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_insert       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_update       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_truncate     reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_delete       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_select       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_declare      reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_set          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_if           reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_case         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_while        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_for          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    TK_field        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_exec         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_begin        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_print        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    $end            reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_end          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_else         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)


state 4

    (5) INSTRUCTION -> CREATEDB . TK_semicolon

    TK_semicolon    shift and go to state 47


state 5

    (6) INSTRUCTION -> USEDB . TK_semicolon

    TK_semicolon    shift and go to state 48


state 6

    (7) INSTRUCTION -> CREATETABLE . TK_semicolon

    TK_semicolon    shift and go to state 49


state 7

    (8) INSTRUCTION -> ALTERTAB . TK_semicolon

    TK_semicolon    shift and go to state 50


state 8

    (9) INSTRUCTION -> DROPTAB . TK_semicolon

    TK_semicolon    shift and go to state 51


state 9

    (10) INSTRUCTION -> INSERTREG . TK_semicolon

    TK_semicolon    shift and go to state 52


state 10

    (11) INSTRUCTION -> UPDATETAB . TK_semicolon

    TK_semicolon    shift and go to state 53


state 11

    (12) INSTRUCTION -> TRUNCATETAB . TK_semicolon

    TK_semicolon    shift and go to state 54


state 12

    (13) INSTRUCTION -> DELETETAB . TK_semicolon

    TK_semicolon    shift and go to state 55


state 13

    (14) INSTRUCTION -> SELECT . TK_semicolon

    TK_semicolon    shift and go to state 56


state 14

    (15) INSTRUCTION -> DECLAREID . TK_semicolon

    TK_semicolon    shift and go to state 57


state 15

    (16) INSTRUCTION -> ASIGNID . TK_semicolon

    TK_semicolon    shift and go to state 58


state 16

    (17) INSTRUCTION -> IFSTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 59


state 17

    (18) INSTRUCTION -> CASESTRUCT_S . TK_semicolon

    TK_semicolon    shift and go to state 60


state 18

    (19) INSTRUCTION -> WHILESTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 61


state 19

    (20) INSTRUCTION -> FORSTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 62


state 20

    (21) INSTRUCTION -> FUNCDEC . TK_semicolon

    TK_semicolon    shift and go to state 63


state 21

    (22) INSTRUCTION -> CALLFUNC . TK_semicolon

    TK_semicolon    shift and go to state 64


state 22

    (23) INSTRUCTION -> ENCAP . TK_semicolon

    TK_semicolon    shift and go to state 65


state 23

    (24) INSTRUCTION -> PRINT . TK_semicolon

    TK_semicolon    shift and go to state 66


state 24

    (25) INSTRUCTION -> RW_break . TK_semicolon

    TK_semicolon    shift and go to state 67


state 25

    (26) INSTRUCTION -> RW_continue . TK_semicolon

    TK_semicolon    shift and go to state 68


state 26

    (27) INSTRUCTION -> RW_return . EXP TK_semicolon
    (28) INSTRUCTION -> RW_return . TK_semicolon
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_semicolon    shift and go to state 70
    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 69
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 27

    (29) CREATEDB -> RW_create . RW_data RW_base TK_field
    (49) CREATETABLE -> RW_create . RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (103) FUNCDEC -> RW_create . RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> RW_create . RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> RW_create . RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> RW_create . RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> RW_create . RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> RW_create . RW_procedure TK_field ENCAP

    RW_data         shift and go to state 94
    RW_table        shift and go to state 95
    RW_function     shift and go to state 96
    RW_procedure    shift and go to state 97


state 28

    (115) CALLFUNC -> TK_field . TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> TK_field . TK_lpar TK_rpar

    TK_lpar         shift and go to state 98


state 29

    (30) USEDB -> RW_use . TK_field

    TK_field        shift and go to state 99


state 30

    (66) ALTERTAB -> RW_alter . RW_table TK_field ACTION

    RW_table        shift and go to state 100


state 31

    (71) DROPTAB -> RW_drop . RW_table TK_field

    RW_table        shift and go to state 101


state 32

    (72) INSERTREG -> RW_insert . RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    RW_into         shift and go to state 102


state 33

    (77) UPDATETAB -> RW_update . TK_field RW_set VALUESTAB RW_where EXP

    TK_field        shift and go to state 103


state 34

    (38) ASIGNID -> RW_set . TK_id TK_equal EXP

    TK_id           shift and go to state 104


state 35

    (81) TRUNCATETAB -> RW_truncate . RW_table TK_field

    RW_table        shift and go to state 105


state 36

    (82) DELETETAB -> RW_delete . RW_from TK_field RW_where EXP

    RW_from         shift and go to state 106


state 37

    (39) SELECT -> RW_select . FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> RW_select . FIELDS RW_from TK_field
    (41) SELECT -> RW_select . LIST_IDS
    (42) FIELDS -> . LIST_IDS
    (43) FIELDS -> . TK_mult
    (44) LIST_IDS -> . LIST_IDS TK_comma IDS
    (45) LIST_IDS -> . IDS
    (46) IDS -> . EXP RW_as TK_nvarchar
    (47) IDS -> . EXP RW_as TK_field
    (48) IDS -> . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_mult         shift and go to state 110
    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    FIELDS                         shift and go to state 107
    EXP                            shift and go to state 108
    LIST_IDS                       shift and go to state 109
    IDS                            shift and go to state 111
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 38

    (31) DECLAREID -> RW_declare . DECLIDS
    (32) DECLAREID -> RW_declare . TK_id TYPE TK_equal EXP
    (33) DECLIDS -> . DECLIDS TK_comma DECLID
    (34) DECLIDS -> . DECLID
    (35) DECLID -> . TK_id TYPE
    (36) DECLID -> . TK_id RW_as TYPE
    (37) DECLID -> . TK_id TYPE TK_lpar TK_int TK_rpar

    TK_id           shift and go to state 113

    DECLIDS                        shift and go to state 112
    DECLID                         shift and go to state 114

state 39

    (83) IFSTRUCT -> RW_if . EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> RW_if . EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> RW_if . EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> RW_if . EXP RW_begin INSTRUCTIONS RW_end
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 115
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 40

    (113) ENCAP -> RW_begin . INSTRUCTIONS RW_end
    (114) ENCAP -> RW_begin . RW_end
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_end          shift and go to state 117
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTIONS                   shift and go to state 116
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 41

    (87) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> RW_case . WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> RW_case . WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> RW_case . WHENELSE RW_end
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (93) WHENELSE -> . WHENS ELSE
    (94) WHENELSE -> . WHENS
    (95) WHENELSE -> . ELSE
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (96) WHENS -> . WHENS WHEN
    (97) WHENS -> . WHEN
    (99) ELSE -> . RW_else RW_then EXP
    (98) WHEN -> . RW_when EXP RW_then EXP

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93
    RW_else         shift and go to state 123
    RW_when         shift and go to state 124

    EXP                            shift and go to state 118
    WHENELSE                       shift and go to state 119
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77
    WHENS                          shift and go to state 120
    ELSE                           shift and go to state 121
    WHEN                           shift and go to state 122

state 42

    (101) WHILESTRUCT -> RW_while . EXP ENCAP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 125
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 43

    (102) FORSTRUCT -> RW_for . TK_id RW_in EXP TK_dot EXP ENCAP RW_loop

    TK_id           shift and go to state 126


state 44

    (117) CALLFUNC -> RW_exec . TK_field ARGS

    TK_field        shift and go to state 127


state 45

    (100) PRINT -> RW_print . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 128
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 46

    (3) INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .

    RW_break        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_continue     reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_return       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_create       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_use          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_alter        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_drop         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_insert       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_update       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_truncate     reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_delete       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_select       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_declare      reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_set          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_if           reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_case         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_while        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_for          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    TK_field        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_exec         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_begin        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_print        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    $end            reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_end          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_else         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)


state 47

    (5) INSTRUCTION -> CREATEDB TK_semicolon .

    RW_break        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_continue     reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_return       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_create       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_use          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_alter        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_drop         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_insert       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_update       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_truncate     reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_delete       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_select       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_declare      reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_set          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_if           reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_case         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_while        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_for          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    TK_field        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_exec         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_begin        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_print        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    $end            reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_end          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_else         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)


state 48

    (6) INSTRUCTION -> USEDB TK_semicolon .

    RW_break        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_continue     reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_return       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_create       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_use          reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_alter        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_drop         reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_insert       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_update       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_truncate     reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_delete       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_select       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_declare      reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_set          reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_if           reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_case         reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_while        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_for          reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    TK_field        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_exec         reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_begin        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_print        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    $end            reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_end          reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_else         reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)


state 49

    (7) INSTRUCTION -> CREATETABLE TK_semicolon .

    RW_break        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_continue     reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_return       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_create       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_use          reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_alter        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_drop         reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_insert       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_update       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_truncate     reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_delete       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_select       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_declare      reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_set          reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_if           reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_case         reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_while        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_for          reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    TK_field        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_exec         reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_begin        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_print        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    $end            reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_end          reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_else         reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)


state 50

    (8) INSTRUCTION -> ALTERTAB TK_semicolon .

    RW_break        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_continue     reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_return       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_create       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_use          reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_alter        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_drop         reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_insert       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_update       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_truncate     reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_delete       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_select       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_declare      reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_set          reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_if           reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_case         reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_while        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_for          reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    TK_field        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_exec         reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_begin        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_print        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    $end            reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_end          reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_else         reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)


state 51

    (9) INSTRUCTION -> DROPTAB TK_semicolon .

    RW_break        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_continue     reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_return       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_create       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_use          reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_alter        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_drop         reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_insert       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_update       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_truncate     reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_delete       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_select       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_declare      reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_set          reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_if           reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_case         reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_while        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_for          reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    TK_field        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_exec         reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_begin        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_print        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    $end            reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_end          reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_else         reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)


state 52

    (10) INSTRUCTION -> INSERTREG TK_semicolon .

    RW_break        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_continue     reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_return       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_create       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_use          reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_alter        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_drop         reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_insert       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_update       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_truncate     reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_delete       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_select       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_declare      reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_set          reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_if           reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_case         reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_while        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_for          reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    TK_field        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_exec         reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_begin        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_print        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    $end            reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_end          reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_else         reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)


state 53

    (11) INSTRUCTION -> UPDATETAB TK_semicolon .

    RW_break        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_continue     reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_return       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_create       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_use          reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_alter        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_drop         reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_insert       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_update       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_truncate     reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_delete       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_select       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_declare      reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_set          reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_if           reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_case         reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_while        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_for          reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    TK_field        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_exec         reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_begin        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_print        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    $end            reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_end          reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_else         reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)


state 54

    (12) INSTRUCTION -> TRUNCATETAB TK_semicolon .

    RW_break        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_continue     reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_return       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_create       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_use          reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_alter        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_drop         reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_insert       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_update       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_truncate     reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_delete       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_select       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_declare      reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_set          reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_if           reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_case         reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_while        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_for          reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    TK_field        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_exec         reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_begin        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_print        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    $end            reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_end          reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_else         reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)


state 55

    (13) INSTRUCTION -> DELETETAB TK_semicolon .

    RW_break        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_continue     reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_return       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_create       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_use          reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_alter        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_drop         reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_insert       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_update       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_truncate     reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_delete       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_select       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_declare      reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_set          reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_if           reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_case         reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_while        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_for          reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    TK_field        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_exec         reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_begin        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_print        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    $end            reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_end          reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_else         reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)


state 56

    (14) INSTRUCTION -> SELECT TK_semicolon .

    RW_break        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_continue     reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_return       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_create       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_use          reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_alter        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_drop         reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_insert       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_update       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_truncate     reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_delete       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_select       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_declare      reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_set          reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_if           reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_case         reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_while        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_for          reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    TK_field        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_exec         reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_begin        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_print        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    $end            reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_end          reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_else         reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)


state 57

    (15) INSTRUCTION -> DECLAREID TK_semicolon .

    RW_break        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_continue     reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_return       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_create       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_use          reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_alter        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_drop         reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_insert       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_update       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_truncate     reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_delete       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_select       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_declare      reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_set          reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_if           reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_case         reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_while        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_for          reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    TK_field        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_exec         reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_begin        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_print        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    $end            reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_end          reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_else         reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)


state 58

    (16) INSTRUCTION -> ASIGNID TK_semicolon .

    RW_break        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_continue     reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_return       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_create       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_use          reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_alter        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_drop         reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_insert       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_update       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_truncate     reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_delete       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_select       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_declare      reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_set          reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_if           reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_case         reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_while        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_for          reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    TK_field        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_exec         reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_begin        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_print        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    $end            reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_end          reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_else         reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)


state 59

    (17) INSTRUCTION -> IFSTRUCT TK_semicolon .

    RW_break        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_continue     reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_return       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_create       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_use          reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_alter        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_drop         reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_insert       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_update       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_delete       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_select       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_declare      reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_set          reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_if           reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_case         reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_while        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_for          reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    TK_field        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_exec         reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_begin        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_print        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    $end            reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_end          reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_else         reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)


state 60

    (18) INSTRUCTION -> CASESTRUCT_S TK_semicolon .

    RW_break        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_continue     reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_return       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_create       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_use          reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_alter        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_drop         reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_insert       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_update       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_truncate     reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_delete       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_select       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_declare      reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_set          reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_if           reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_case         reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_while        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_for          reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    TK_field        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_exec         reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_begin        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_print        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    $end            reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_end          reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_else         reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)


state 61

    (19) INSTRUCTION -> WHILESTRUCT TK_semicolon .

    RW_break        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_continue     reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_return       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_create       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_use          reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_alter        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_drop         reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_insert       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_update       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_delete       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_select       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_declare      reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_set          reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_if           reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_case         reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_while        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_for          reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    TK_field        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_exec         reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_begin        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_print        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    $end            reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_end          reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_else         reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)


state 62

    (20) INSTRUCTION -> FORSTRUCT TK_semicolon .

    RW_break        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_continue     reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_return       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_create       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_use          reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_alter        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_drop         reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_insert       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_update       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_delete       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_select       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_declare      reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_set          reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_if           reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_case         reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_while        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_for          reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    TK_field        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_exec         reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_begin        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_print        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    $end            reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_end          reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_else         reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)


state 63

    (21) INSTRUCTION -> FUNCDEC TK_semicolon .

    RW_break        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_continue     reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_return       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_create       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_use          reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_alter        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_drop         reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_insert       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_update       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_truncate     reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_delete       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_select       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_declare      reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_set          reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_if           reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_case         reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_while        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_for          reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    TK_field        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_exec         reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_begin        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_print        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    $end            reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_end          reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_else         reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)


state 64

    (22) INSTRUCTION -> CALLFUNC TK_semicolon .

    RW_break        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_continue     reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_return       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_create       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_use          reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_alter        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_drop         reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_insert       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_update       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_truncate     reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_delete       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_select       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_declare      reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_set          reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_if           reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_case         reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_while        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_for          reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    TK_field        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_exec         reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_begin        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_print        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    $end            reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_end          reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_else         reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)


state 65

    (23) INSTRUCTION -> ENCAP TK_semicolon .

    RW_break        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_continue     reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_return       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_create       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_use          reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_alter        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_drop         reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_insert       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_update       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_truncate     reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_delete       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_select       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_declare      reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_set          reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_if           reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_case         reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_while        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_for          reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    TK_field        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_exec         reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_begin        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_print        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    $end            reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_end          reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_else         reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)


state 66

    (24) INSTRUCTION -> PRINT TK_semicolon .

    RW_break        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_continue     reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_return       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_create       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_use          reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_alter        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_drop         reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_insert       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_update       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_truncate     reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_delete       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_select       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_declare      reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_set          reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_if           reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_case         reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_while        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_for          reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    TK_field        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_exec         reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_begin        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_print        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    $end            reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_end          reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_else         reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)


state 67

    (25) INSTRUCTION -> RW_break TK_semicolon .

    RW_break        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_continue     reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_return       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_create       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_use          reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_alter        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_drop         reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_insert       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_update       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_truncate     reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_delete       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_select       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_declare      reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_set          reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_if           reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_case         reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_while        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_for          reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    TK_field        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_exec         reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_begin        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_print        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    $end            reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_end          reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_else         reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)


state 68

    (26) INSTRUCTION -> RW_continue TK_semicolon .

    RW_break        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_continue     reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_return       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_create       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_use          reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_alter        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_drop         reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_insert       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_update       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_truncate     reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_delete       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_select       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_declare      reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_set          reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_if           reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_case         reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_while        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_for          reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    TK_field        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_exec         reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_begin        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_print        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    $end            reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_end          reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_else         reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)


state 69

    (27) INSTRUCTION -> RW_return EXP . TK_semicolon
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    shift and go to state 129
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 70

    (28) INSTRUCTION -> RW_return TK_semicolon .

    RW_break        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_continue     reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_return       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_create       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_use          reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_alter        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_drop         reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_insert       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_update       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_truncate     reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_delete       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_select       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_declare      reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_set          reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_if           reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_case         reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_while        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_for          reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    TK_field        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_exec         reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_begin        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_print        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    $end            reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_end          reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_else         reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)


state 71

    (120) EXP -> ARITHMETICS .

    TK_semicolon    reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_plus         reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_minus        reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_mult         reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_div          reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_mod          reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_equalequal   reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_equal        reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_notequal     reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_lessequal    reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_greatequal   reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_less         reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_great        reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_and          reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_or           reduce using rule 120 (EXP -> ARITHMETICS .)
    RW_as           reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_comma        reduce using rule 120 (EXP -> ARITHMETICS .)
    RW_from         reduce using rule 120 (EXP -> ARITHMETICS .)
    RW_begin        reduce using rule 120 (EXP -> ARITHMETICS .)
    RW_then         reduce using rule 120 (EXP -> ARITHMETICS .)
    RW_else         reduce using rule 120 (EXP -> ARITHMETICS .)
    RW_when         reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_rpar         reduce using rule 120 (EXP -> ARITHMETICS .)
    RW_end          reduce using rule 120 (EXP -> ARITHMETICS .)
    TK_dot          reduce using rule 120 (EXP -> ARITHMETICS .)
    RW_where        reduce using rule 120 (EXP -> ARITHMETICS .)


state 72

    (121) EXP -> RELATIONALS .

    TK_semicolon    reduce using rule 121 (EXP -> RELATIONALS .)
    TK_plus         reduce using rule 121 (EXP -> RELATIONALS .)
    TK_minus        reduce using rule 121 (EXP -> RELATIONALS .)
    TK_mult         reduce using rule 121 (EXP -> RELATIONALS .)
    TK_div          reduce using rule 121 (EXP -> RELATIONALS .)
    TK_mod          reduce using rule 121 (EXP -> RELATIONALS .)
    TK_equalequal   reduce using rule 121 (EXP -> RELATIONALS .)
    TK_equal        reduce using rule 121 (EXP -> RELATIONALS .)
    TK_notequal     reduce using rule 121 (EXP -> RELATIONALS .)
    TK_lessequal    reduce using rule 121 (EXP -> RELATIONALS .)
    TK_greatequal   reduce using rule 121 (EXP -> RELATIONALS .)
    TK_less         reduce using rule 121 (EXP -> RELATIONALS .)
    TK_great        reduce using rule 121 (EXP -> RELATIONALS .)
    TK_and          reduce using rule 121 (EXP -> RELATIONALS .)
    TK_or           reduce using rule 121 (EXP -> RELATIONALS .)
    RW_as           reduce using rule 121 (EXP -> RELATIONALS .)
    TK_comma        reduce using rule 121 (EXP -> RELATIONALS .)
    RW_from         reduce using rule 121 (EXP -> RELATIONALS .)
    RW_begin        reduce using rule 121 (EXP -> RELATIONALS .)
    RW_then         reduce using rule 121 (EXP -> RELATIONALS .)
    RW_else         reduce using rule 121 (EXP -> RELATIONALS .)
    RW_when         reduce using rule 121 (EXP -> RELATIONALS .)
    TK_rpar         reduce using rule 121 (EXP -> RELATIONALS .)
    RW_end          reduce using rule 121 (EXP -> RELATIONALS .)
    TK_dot          reduce using rule 121 (EXP -> RELATIONALS .)
    RW_where        reduce using rule 121 (EXP -> RELATIONALS .)


state 73

    (122) EXP -> LOGICS .

    TK_semicolon    reduce using rule 122 (EXP -> LOGICS .)
    TK_plus         reduce using rule 122 (EXP -> LOGICS .)
    TK_minus        reduce using rule 122 (EXP -> LOGICS .)
    TK_mult         reduce using rule 122 (EXP -> LOGICS .)
    TK_div          reduce using rule 122 (EXP -> LOGICS .)
    TK_mod          reduce using rule 122 (EXP -> LOGICS .)
    TK_equalequal   reduce using rule 122 (EXP -> LOGICS .)
    TK_equal        reduce using rule 122 (EXP -> LOGICS .)
    TK_notequal     reduce using rule 122 (EXP -> LOGICS .)
    TK_lessequal    reduce using rule 122 (EXP -> LOGICS .)
    TK_greatequal   reduce using rule 122 (EXP -> LOGICS .)
    TK_less         reduce using rule 122 (EXP -> LOGICS .)
    TK_great        reduce using rule 122 (EXP -> LOGICS .)
    TK_and          reduce using rule 122 (EXP -> LOGICS .)
    TK_or           reduce using rule 122 (EXP -> LOGICS .)
    RW_as           reduce using rule 122 (EXP -> LOGICS .)
    TK_comma        reduce using rule 122 (EXP -> LOGICS .)
    RW_from         reduce using rule 122 (EXP -> LOGICS .)
    RW_begin        reduce using rule 122 (EXP -> LOGICS .)
    RW_then         reduce using rule 122 (EXP -> LOGICS .)
    RW_else         reduce using rule 122 (EXP -> LOGICS .)
    RW_when         reduce using rule 122 (EXP -> LOGICS .)
    TK_rpar         reduce using rule 122 (EXP -> LOGICS .)
    RW_end          reduce using rule 122 (EXP -> LOGICS .)
    TK_dot          reduce using rule 122 (EXP -> LOGICS .)
    RW_where        reduce using rule 122 (EXP -> LOGICS .)


state 74

    (123) EXP -> CAST .

    TK_semicolon    reduce using rule 123 (EXP -> CAST .)
    TK_plus         reduce using rule 123 (EXP -> CAST .)
    TK_minus        reduce using rule 123 (EXP -> CAST .)
    TK_mult         reduce using rule 123 (EXP -> CAST .)
    TK_div          reduce using rule 123 (EXP -> CAST .)
    TK_mod          reduce using rule 123 (EXP -> CAST .)
    TK_equalequal   reduce using rule 123 (EXP -> CAST .)
    TK_equal        reduce using rule 123 (EXP -> CAST .)
    TK_notequal     reduce using rule 123 (EXP -> CAST .)
    TK_lessequal    reduce using rule 123 (EXP -> CAST .)
    TK_greatequal   reduce using rule 123 (EXP -> CAST .)
    TK_less         reduce using rule 123 (EXP -> CAST .)
    TK_great        reduce using rule 123 (EXP -> CAST .)
    TK_and          reduce using rule 123 (EXP -> CAST .)
    TK_or           reduce using rule 123 (EXP -> CAST .)
    RW_as           reduce using rule 123 (EXP -> CAST .)
    TK_comma        reduce using rule 123 (EXP -> CAST .)
    RW_from         reduce using rule 123 (EXP -> CAST .)
    RW_begin        reduce using rule 123 (EXP -> CAST .)
    RW_then         reduce using rule 123 (EXP -> CAST .)
    RW_else         reduce using rule 123 (EXP -> CAST .)
    RW_when         reduce using rule 123 (EXP -> CAST .)
    TK_rpar         reduce using rule 123 (EXP -> CAST .)
    RW_end          reduce using rule 123 (EXP -> CAST .)
    TK_dot          reduce using rule 123 (EXP -> CAST .)
    RW_where        reduce using rule 123 (EXP -> CAST .)


state 75

    (124) EXP -> NATIVEFUNC .

    TK_semicolon    reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_plus         reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_minus        reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_mult         reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_div          reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_mod          reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_equalequal   reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_equal        reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_notequal     reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_lessequal    reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_greatequal   reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_less         reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_great        reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_and          reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_or           reduce using rule 124 (EXP -> NATIVEFUNC .)
    RW_as           reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_comma        reduce using rule 124 (EXP -> NATIVEFUNC .)
    RW_from         reduce using rule 124 (EXP -> NATIVEFUNC .)
    RW_begin        reduce using rule 124 (EXP -> NATIVEFUNC .)
    RW_then         reduce using rule 124 (EXP -> NATIVEFUNC .)
    RW_else         reduce using rule 124 (EXP -> NATIVEFUNC .)
    RW_when         reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_rpar         reduce using rule 124 (EXP -> NATIVEFUNC .)
    RW_end          reduce using rule 124 (EXP -> NATIVEFUNC .)
    TK_dot          reduce using rule 124 (EXP -> NATIVEFUNC .)
    RW_where        reduce using rule 124 (EXP -> NATIVEFUNC .)


state 76

    (125) EXP -> CALLFUNC .

    TK_semicolon    reduce using rule 125 (EXP -> CALLFUNC .)
    TK_plus         reduce using rule 125 (EXP -> CALLFUNC .)
    TK_minus        reduce using rule 125 (EXP -> CALLFUNC .)
    TK_mult         reduce using rule 125 (EXP -> CALLFUNC .)
    TK_div          reduce using rule 125 (EXP -> CALLFUNC .)
    TK_mod          reduce using rule 125 (EXP -> CALLFUNC .)
    TK_equalequal   reduce using rule 125 (EXP -> CALLFUNC .)
    TK_equal        reduce using rule 125 (EXP -> CALLFUNC .)
    TK_notequal     reduce using rule 125 (EXP -> CALLFUNC .)
    TK_lessequal    reduce using rule 125 (EXP -> CALLFUNC .)
    TK_greatequal   reduce using rule 125 (EXP -> CALLFUNC .)
    TK_less         reduce using rule 125 (EXP -> CALLFUNC .)
    TK_great        reduce using rule 125 (EXP -> CALLFUNC .)
    TK_and          reduce using rule 125 (EXP -> CALLFUNC .)
    TK_or           reduce using rule 125 (EXP -> CALLFUNC .)
    RW_as           reduce using rule 125 (EXP -> CALLFUNC .)
    TK_comma        reduce using rule 125 (EXP -> CALLFUNC .)
    RW_from         reduce using rule 125 (EXP -> CALLFUNC .)
    RW_begin        reduce using rule 125 (EXP -> CALLFUNC .)
    RW_then         reduce using rule 125 (EXP -> CALLFUNC .)
    RW_else         reduce using rule 125 (EXP -> CALLFUNC .)
    RW_when         reduce using rule 125 (EXP -> CALLFUNC .)
    TK_rpar         reduce using rule 125 (EXP -> CALLFUNC .)
    RW_end          reduce using rule 125 (EXP -> CALLFUNC .)
    TK_dot          reduce using rule 125 (EXP -> CALLFUNC .)
    RW_where        reduce using rule 125 (EXP -> CALLFUNC .)


state 77

    (126) EXP -> TERNARY .

    TK_semicolon    reduce using rule 126 (EXP -> TERNARY .)
    TK_plus         reduce using rule 126 (EXP -> TERNARY .)
    TK_minus        reduce using rule 126 (EXP -> TERNARY .)
    TK_mult         reduce using rule 126 (EXP -> TERNARY .)
    TK_div          reduce using rule 126 (EXP -> TERNARY .)
    TK_mod          reduce using rule 126 (EXP -> TERNARY .)
    TK_equalequal   reduce using rule 126 (EXP -> TERNARY .)
    TK_equal        reduce using rule 126 (EXP -> TERNARY .)
    TK_notequal     reduce using rule 126 (EXP -> TERNARY .)
    TK_lessequal    reduce using rule 126 (EXP -> TERNARY .)
    TK_greatequal   reduce using rule 126 (EXP -> TERNARY .)
    TK_less         reduce using rule 126 (EXP -> TERNARY .)
    TK_great        reduce using rule 126 (EXP -> TERNARY .)
    TK_and          reduce using rule 126 (EXP -> TERNARY .)
    TK_or           reduce using rule 126 (EXP -> TERNARY .)
    RW_as           reduce using rule 126 (EXP -> TERNARY .)
    TK_comma        reduce using rule 126 (EXP -> TERNARY .)
    RW_from         reduce using rule 126 (EXP -> TERNARY .)
    RW_begin        reduce using rule 126 (EXP -> TERNARY .)
    RW_then         reduce using rule 126 (EXP -> TERNARY .)
    RW_else         reduce using rule 126 (EXP -> TERNARY .)
    RW_when         reduce using rule 126 (EXP -> TERNARY .)
    TK_rpar         reduce using rule 126 (EXP -> TERNARY .)
    RW_end          reduce using rule 126 (EXP -> TERNARY .)
    TK_dot          reduce using rule 126 (EXP -> TERNARY .)
    RW_where        reduce using rule 126 (EXP -> TERNARY .)


state 78

    (127) EXP -> TK_id .
    (128) EXP -> TK_id . TK_point TK_id

    TK_semicolon    reduce using rule 127 (EXP -> TK_id .)
    TK_plus         reduce using rule 127 (EXP -> TK_id .)
    TK_minus        reduce using rule 127 (EXP -> TK_id .)
    TK_mult         reduce using rule 127 (EXP -> TK_id .)
    TK_div          reduce using rule 127 (EXP -> TK_id .)
    TK_mod          reduce using rule 127 (EXP -> TK_id .)
    TK_equalequal   reduce using rule 127 (EXP -> TK_id .)
    TK_equal        reduce using rule 127 (EXP -> TK_id .)
    TK_notequal     reduce using rule 127 (EXP -> TK_id .)
    TK_lessequal    reduce using rule 127 (EXP -> TK_id .)
    TK_greatequal   reduce using rule 127 (EXP -> TK_id .)
    TK_less         reduce using rule 127 (EXP -> TK_id .)
    TK_great        reduce using rule 127 (EXP -> TK_id .)
    TK_and          reduce using rule 127 (EXP -> TK_id .)
    TK_or           reduce using rule 127 (EXP -> TK_id .)
    RW_as           reduce using rule 127 (EXP -> TK_id .)
    TK_comma        reduce using rule 127 (EXP -> TK_id .)
    RW_from         reduce using rule 127 (EXP -> TK_id .)
    RW_begin        reduce using rule 127 (EXP -> TK_id .)
    RW_then         reduce using rule 127 (EXP -> TK_id .)
    RW_else         reduce using rule 127 (EXP -> TK_id .)
    RW_when         reduce using rule 127 (EXP -> TK_id .)
    TK_rpar         reduce using rule 127 (EXP -> TK_id .)
    RW_end          reduce using rule 127 (EXP -> TK_id .)
    TK_dot          reduce using rule 127 (EXP -> TK_id .)
    RW_where        reduce using rule 127 (EXP -> TK_id .)
    TK_point        shift and go to state 144


state 79

    (129) EXP -> TK_field .
    (130) EXP -> TK_field . TK_point TK_field
    (115) CALLFUNC -> TK_field . TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> TK_field . TK_lpar TK_rpar

    TK_semicolon    reduce using rule 129 (EXP -> TK_field .)
    TK_plus         reduce using rule 129 (EXP -> TK_field .)
    TK_minus        reduce using rule 129 (EXP -> TK_field .)
    TK_mult         reduce using rule 129 (EXP -> TK_field .)
    TK_div          reduce using rule 129 (EXP -> TK_field .)
    TK_mod          reduce using rule 129 (EXP -> TK_field .)
    TK_equalequal   reduce using rule 129 (EXP -> TK_field .)
    TK_equal        reduce using rule 129 (EXP -> TK_field .)
    TK_notequal     reduce using rule 129 (EXP -> TK_field .)
    TK_lessequal    reduce using rule 129 (EXP -> TK_field .)
    TK_greatequal   reduce using rule 129 (EXP -> TK_field .)
    TK_less         reduce using rule 129 (EXP -> TK_field .)
    TK_great        reduce using rule 129 (EXP -> TK_field .)
    TK_and          reduce using rule 129 (EXP -> TK_field .)
    TK_or           reduce using rule 129 (EXP -> TK_field .)
    RW_as           reduce using rule 129 (EXP -> TK_field .)
    TK_comma        reduce using rule 129 (EXP -> TK_field .)
    RW_from         reduce using rule 129 (EXP -> TK_field .)
    RW_begin        reduce using rule 129 (EXP -> TK_field .)
    RW_then         reduce using rule 129 (EXP -> TK_field .)
    RW_else         reduce using rule 129 (EXP -> TK_field .)
    RW_when         reduce using rule 129 (EXP -> TK_field .)
    TK_rpar         reduce using rule 129 (EXP -> TK_field .)
    RW_end          reduce using rule 129 (EXP -> TK_field .)
    TK_dot          reduce using rule 129 (EXP -> TK_field .)
    RW_where        reduce using rule 129 (EXP -> TK_field .)
    TK_point        shift and go to state 145
    TK_lpar         shift and go to state 98


state 80

    (131) EXP -> TK_nvarchar .

    TK_semicolon    reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_plus         reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_minus        reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_mult         reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_div          reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_mod          reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_equalequal   reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_equal        reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_notequal     reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_lessequal    reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_greatequal   reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_less         reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_great        reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_and          reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_or           reduce using rule 131 (EXP -> TK_nvarchar .)
    RW_as           reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_comma        reduce using rule 131 (EXP -> TK_nvarchar .)
    RW_from         reduce using rule 131 (EXP -> TK_nvarchar .)
    RW_begin        reduce using rule 131 (EXP -> TK_nvarchar .)
    RW_then         reduce using rule 131 (EXP -> TK_nvarchar .)
    RW_else         reduce using rule 131 (EXP -> TK_nvarchar .)
    RW_when         reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_rpar         reduce using rule 131 (EXP -> TK_nvarchar .)
    RW_end          reduce using rule 131 (EXP -> TK_nvarchar .)
    TK_dot          reduce using rule 131 (EXP -> TK_nvarchar .)
    RW_where        reduce using rule 131 (EXP -> TK_nvarchar .)


state 81

    (132) EXP -> TK_int .

    TK_semicolon    reduce using rule 132 (EXP -> TK_int .)
    TK_plus         reduce using rule 132 (EXP -> TK_int .)
    TK_minus        reduce using rule 132 (EXP -> TK_int .)
    TK_mult         reduce using rule 132 (EXP -> TK_int .)
    TK_div          reduce using rule 132 (EXP -> TK_int .)
    TK_mod          reduce using rule 132 (EXP -> TK_int .)
    TK_equalequal   reduce using rule 132 (EXP -> TK_int .)
    TK_equal        reduce using rule 132 (EXP -> TK_int .)
    TK_notequal     reduce using rule 132 (EXP -> TK_int .)
    TK_lessequal    reduce using rule 132 (EXP -> TK_int .)
    TK_greatequal   reduce using rule 132 (EXP -> TK_int .)
    TK_less         reduce using rule 132 (EXP -> TK_int .)
    TK_great        reduce using rule 132 (EXP -> TK_int .)
    TK_and          reduce using rule 132 (EXP -> TK_int .)
    TK_or           reduce using rule 132 (EXP -> TK_int .)
    RW_as           reduce using rule 132 (EXP -> TK_int .)
    TK_comma        reduce using rule 132 (EXP -> TK_int .)
    RW_from         reduce using rule 132 (EXP -> TK_int .)
    RW_begin        reduce using rule 132 (EXP -> TK_int .)
    RW_then         reduce using rule 132 (EXP -> TK_int .)
    RW_else         reduce using rule 132 (EXP -> TK_int .)
    RW_when         reduce using rule 132 (EXP -> TK_int .)
    TK_rpar         reduce using rule 132 (EXP -> TK_int .)
    RW_end          reduce using rule 132 (EXP -> TK_int .)
    TK_dot          reduce using rule 132 (EXP -> TK_int .)
    RW_where        reduce using rule 132 (EXP -> TK_int .)


state 82

    (133) EXP -> TK_decimal .

    TK_semicolon    reduce using rule 133 (EXP -> TK_decimal .)
    TK_plus         reduce using rule 133 (EXP -> TK_decimal .)
    TK_minus        reduce using rule 133 (EXP -> TK_decimal .)
    TK_mult         reduce using rule 133 (EXP -> TK_decimal .)
    TK_div          reduce using rule 133 (EXP -> TK_decimal .)
    TK_mod          reduce using rule 133 (EXP -> TK_decimal .)
    TK_equalequal   reduce using rule 133 (EXP -> TK_decimal .)
    TK_equal        reduce using rule 133 (EXP -> TK_decimal .)
    TK_notequal     reduce using rule 133 (EXP -> TK_decimal .)
    TK_lessequal    reduce using rule 133 (EXP -> TK_decimal .)
    TK_greatequal   reduce using rule 133 (EXP -> TK_decimal .)
    TK_less         reduce using rule 133 (EXP -> TK_decimal .)
    TK_great        reduce using rule 133 (EXP -> TK_decimal .)
    TK_and          reduce using rule 133 (EXP -> TK_decimal .)
    TK_or           reduce using rule 133 (EXP -> TK_decimal .)
    RW_as           reduce using rule 133 (EXP -> TK_decimal .)
    TK_comma        reduce using rule 133 (EXP -> TK_decimal .)
    RW_from         reduce using rule 133 (EXP -> TK_decimal .)
    RW_begin        reduce using rule 133 (EXP -> TK_decimal .)
    RW_then         reduce using rule 133 (EXP -> TK_decimal .)
    RW_else         reduce using rule 133 (EXP -> TK_decimal .)
    RW_when         reduce using rule 133 (EXP -> TK_decimal .)
    TK_rpar         reduce using rule 133 (EXP -> TK_decimal .)
    RW_end          reduce using rule 133 (EXP -> TK_decimal .)
    TK_dot          reduce using rule 133 (EXP -> TK_decimal .)
    RW_where        reduce using rule 133 (EXP -> TK_decimal .)


state 83

    (134) EXP -> TK_date .

    TK_semicolon    reduce using rule 134 (EXP -> TK_date .)
    TK_plus         reduce using rule 134 (EXP -> TK_date .)
    TK_minus        reduce using rule 134 (EXP -> TK_date .)
    TK_mult         reduce using rule 134 (EXP -> TK_date .)
    TK_div          reduce using rule 134 (EXP -> TK_date .)
    TK_mod          reduce using rule 134 (EXP -> TK_date .)
    TK_equalequal   reduce using rule 134 (EXP -> TK_date .)
    TK_equal        reduce using rule 134 (EXP -> TK_date .)
    TK_notequal     reduce using rule 134 (EXP -> TK_date .)
    TK_lessequal    reduce using rule 134 (EXP -> TK_date .)
    TK_greatequal   reduce using rule 134 (EXP -> TK_date .)
    TK_less         reduce using rule 134 (EXP -> TK_date .)
    TK_great        reduce using rule 134 (EXP -> TK_date .)
    TK_and          reduce using rule 134 (EXP -> TK_date .)
    TK_or           reduce using rule 134 (EXP -> TK_date .)
    RW_as           reduce using rule 134 (EXP -> TK_date .)
    TK_comma        reduce using rule 134 (EXP -> TK_date .)
    RW_from         reduce using rule 134 (EXP -> TK_date .)
    RW_begin        reduce using rule 134 (EXP -> TK_date .)
    RW_then         reduce using rule 134 (EXP -> TK_date .)
    RW_else         reduce using rule 134 (EXP -> TK_date .)
    RW_when         reduce using rule 134 (EXP -> TK_date .)
    TK_rpar         reduce using rule 134 (EXP -> TK_date .)
    RW_end          reduce using rule 134 (EXP -> TK_date .)
    TK_dot          reduce using rule 134 (EXP -> TK_date .)
    RW_where        reduce using rule 134 (EXP -> TK_date .)


state 84

    (135) EXP -> TK_datetime .

    TK_semicolon    reduce using rule 135 (EXP -> TK_datetime .)
    TK_plus         reduce using rule 135 (EXP -> TK_datetime .)
    TK_minus        reduce using rule 135 (EXP -> TK_datetime .)
    TK_mult         reduce using rule 135 (EXP -> TK_datetime .)
    TK_div          reduce using rule 135 (EXP -> TK_datetime .)
    TK_mod          reduce using rule 135 (EXP -> TK_datetime .)
    TK_equalequal   reduce using rule 135 (EXP -> TK_datetime .)
    TK_equal        reduce using rule 135 (EXP -> TK_datetime .)
    TK_notequal     reduce using rule 135 (EXP -> TK_datetime .)
    TK_lessequal    reduce using rule 135 (EXP -> TK_datetime .)
    TK_greatequal   reduce using rule 135 (EXP -> TK_datetime .)
    TK_less         reduce using rule 135 (EXP -> TK_datetime .)
    TK_great        reduce using rule 135 (EXP -> TK_datetime .)
    TK_and          reduce using rule 135 (EXP -> TK_datetime .)
    TK_or           reduce using rule 135 (EXP -> TK_datetime .)
    RW_as           reduce using rule 135 (EXP -> TK_datetime .)
    TK_comma        reduce using rule 135 (EXP -> TK_datetime .)
    RW_from         reduce using rule 135 (EXP -> TK_datetime .)
    RW_begin        reduce using rule 135 (EXP -> TK_datetime .)
    RW_then         reduce using rule 135 (EXP -> TK_datetime .)
    RW_else         reduce using rule 135 (EXP -> TK_datetime .)
    RW_when         reduce using rule 135 (EXP -> TK_datetime .)
    TK_rpar         reduce using rule 135 (EXP -> TK_datetime .)
    RW_end          reduce using rule 135 (EXP -> TK_datetime .)
    TK_dot          reduce using rule 135 (EXP -> TK_datetime .)
    RW_where        reduce using rule 135 (EXP -> TK_datetime .)


state 85

    (136) EXP -> RW_null .

    TK_semicolon    reduce using rule 136 (EXP -> RW_null .)
    TK_plus         reduce using rule 136 (EXP -> RW_null .)
    TK_minus        reduce using rule 136 (EXP -> RW_null .)
    TK_mult         reduce using rule 136 (EXP -> RW_null .)
    TK_div          reduce using rule 136 (EXP -> RW_null .)
    TK_mod          reduce using rule 136 (EXP -> RW_null .)
    TK_equalequal   reduce using rule 136 (EXP -> RW_null .)
    TK_equal        reduce using rule 136 (EXP -> RW_null .)
    TK_notequal     reduce using rule 136 (EXP -> RW_null .)
    TK_lessequal    reduce using rule 136 (EXP -> RW_null .)
    TK_greatequal   reduce using rule 136 (EXP -> RW_null .)
    TK_less         reduce using rule 136 (EXP -> RW_null .)
    TK_great        reduce using rule 136 (EXP -> RW_null .)
    TK_and          reduce using rule 136 (EXP -> RW_null .)
    TK_or           reduce using rule 136 (EXP -> RW_null .)
    RW_as           reduce using rule 136 (EXP -> RW_null .)
    TK_comma        reduce using rule 136 (EXP -> RW_null .)
    RW_from         reduce using rule 136 (EXP -> RW_null .)
    RW_begin        reduce using rule 136 (EXP -> RW_null .)
    RW_then         reduce using rule 136 (EXP -> RW_null .)
    RW_else         reduce using rule 136 (EXP -> RW_null .)
    RW_when         reduce using rule 136 (EXP -> RW_null .)
    TK_rpar         reduce using rule 136 (EXP -> RW_null .)
    RW_end          reduce using rule 136 (EXP -> RW_null .)
    TK_dot          reduce using rule 136 (EXP -> RW_null .)
    RW_where        reduce using rule 136 (EXP -> RW_null .)


state 86

    (137) EXP -> TK_lpar . EXP TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 146
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 87

    (143) ARITHMETICS -> TK_minus . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 147
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 88

    (153) LOGICS -> TK_not . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 148
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 89

    (154) CAST -> RW_cast . TK_lpar EXP RW_as TYPE TK_rpar

    TK_lpar         shift and go to state 149


state 90

    (155) NATIVEFUNC -> RW_concatenar . TK_lpar EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 150


state 91

    (156) NATIVEFUNC -> RW_substraer . TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 151


state 92

    (157) NATIVEFUNC -> RW_hoy . TK_lpar TK_rpar

    TK_lpar         shift and go to state 152


state 93

    (158) TERNARY -> RW_if . TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 153


state 94

    (29) CREATEDB -> RW_create RW_data . RW_base TK_field

    RW_base         shift and go to state 154


state 95

    (49) CREATETABLE -> RW_create RW_table . TK_field TK_lpar ATTRIBUTES TK_rpar

    TK_field        shift and go to state 155


state 96

    (103) FUNCDEC -> RW_create RW_function . TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> RW_create RW_function . TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP

    TK_field        shift and go to state 156


state 97

    (105) FUNCDEC -> RW_create RW_procedure . TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> RW_create RW_procedure . TK_field RW_as ENCAP
    (107) FUNCDEC -> RW_create RW_procedure . TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> RW_create RW_procedure . TK_field ENCAP

    TK_field        shift and go to state 157


state 98

    (115) CALLFUNC -> TK_field TK_lpar . ARGS TK_rpar
    (116) CALLFUNC -> TK_field TK_lpar . TK_rpar
    (118) ARGS -> . ARGS TK_comma EXP
    (119) ARGS -> . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_rpar         shift and go to state 159
    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    ARGS                           shift and go to state 158
    EXP                            shift and go to state 160
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 99

    (30) USEDB -> RW_use TK_field .

    TK_semicolon    reduce using rule 30 (USEDB -> RW_use TK_field .)


state 100

    (66) ALTERTAB -> RW_alter RW_table . TK_field ACTION

    TK_field        shift and go to state 161


state 101

    (71) DROPTAB -> RW_drop RW_table . TK_field

    TK_field        shift and go to state 162


state 102

    (72) INSERTREG -> RW_insert RW_into . TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    TK_field        shift and go to state 163


state 103

    (77) UPDATETAB -> RW_update TK_field . RW_set VALUESTAB RW_where EXP

    RW_set          shift and go to state 164


state 104

    (38) ASIGNID -> RW_set TK_id . TK_equal EXP

    TK_equal        shift and go to state 165


state 105

    (81) TRUNCATETAB -> RW_truncate RW_table . TK_field

    TK_field        shift and go to state 166


state 106

    (82) DELETETAB -> RW_delete RW_from . TK_field RW_where EXP

    TK_field        shift and go to state 167


state 107

    (39) SELECT -> RW_select FIELDS . RW_from TK_field RW_where EXP
    (40) SELECT -> RW_select FIELDS . RW_from TK_field

    RW_from         shift and go to state 168


state 108

    (46) IDS -> EXP . RW_as TK_nvarchar
    (47) IDS -> EXP . RW_as TK_field
    (48) IDS -> EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    RW_as           shift and go to state 169
    TK_comma        reduce using rule 48 (IDS -> EXP .)
    TK_semicolon    reduce using rule 48 (IDS -> EXP .)
    RW_from         reduce using rule 48 (IDS -> EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 109

    (41) SELECT -> RW_select LIST_IDS .
    (42) FIELDS -> LIST_IDS .
    (44) LIST_IDS -> LIST_IDS . TK_comma IDS

    TK_semicolon    reduce using rule 41 (SELECT -> RW_select LIST_IDS .)
    RW_from         reduce using rule 42 (FIELDS -> LIST_IDS .)
    TK_comma        shift and go to state 170


state 110

    (43) FIELDS -> TK_mult .

    RW_from         reduce using rule 43 (FIELDS -> TK_mult .)


state 111

    (45) LIST_IDS -> IDS .

    TK_comma        reduce using rule 45 (LIST_IDS -> IDS .)
    TK_semicolon    reduce using rule 45 (LIST_IDS -> IDS .)
    RW_from         reduce using rule 45 (LIST_IDS -> IDS .)


state 112

    (31) DECLAREID -> RW_declare DECLIDS .
    (33) DECLIDS -> DECLIDS . TK_comma DECLID

    TK_semicolon    reduce using rule 31 (DECLAREID -> RW_declare DECLIDS .)
    TK_comma        shift and go to state 171


state 113

    (32) DECLAREID -> RW_declare TK_id . TYPE TK_equal EXP
    (35) DECLID -> TK_id . TYPE
    (36) DECLID -> TK_id . RW_as TYPE
    (37) DECLID -> TK_id . TYPE TK_lpar TK_int TK_rpar
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_as           shift and go to state 173
    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 172

state 114

    (34) DECLIDS -> DECLID .

    TK_comma        reduce using rule 34 (DECLIDS -> DECLID .)
    TK_semicolon    reduce using rule 34 (DECLIDS -> DECLID .)


state 115

    (83) IFSTRUCT -> RW_if EXP . RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> RW_if EXP . RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> RW_if EXP . RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> RW_if EXP . RW_begin INSTRUCTIONS RW_end
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    RW_begin        shift and go to state 181
    RW_then         shift and go to state 182
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 116

    (113) ENCAP -> RW_begin INSTRUCTIONS . RW_end
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_end          shift and go to state 183
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTION                    shift and go to state 46
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 117

    (114) ENCAP -> RW_begin RW_end .

    TK_semicolon    reduce using rule 114 (ENCAP -> RW_begin RW_end .)
    RW_loop         reduce using rule 114 (ENCAP -> RW_begin RW_end .)


state 118

    (87) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP
    (93) WHENELSE -> . WHENS ELSE
    (94) WHENELSE -> . WHENS
    (95) WHENELSE -> . ELSE
    (96) WHENS -> . WHENS WHEN
    (97) WHENS -> . WHEN
    (99) ELSE -> . RW_else RW_then EXP
    (98) WHEN -> . RW_when EXP RW_then EXP

    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143
    RW_else         shift and go to state 123
    RW_when         shift and go to state 124

    WHENELSE                       shift and go to state 184
    WHENS                          shift and go to state 120
    ELSE                           shift and go to state 121
    WHEN                           shift and go to state 122

state 119

    (90) CASESTRUCT_S -> RW_case WHENELSE . RW_end RW_as TK_field
    (91) CASESTRUCT_S -> RW_case WHENELSE . RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> RW_case WHENELSE . RW_end

    RW_end          shift and go to state 185


state 120

    (93) WHENELSE -> WHENS . ELSE
    (94) WHENELSE -> WHENS .
    (96) WHENS -> WHENS . WHEN
    (99) ELSE -> . RW_else RW_then EXP
    (98) WHEN -> . RW_when EXP RW_then EXP

    RW_end          reduce using rule 94 (WHENELSE -> WHENS .)
    RW_else         shift and go to state 123
    RW_when         shift and go to state 124

    ELSE                           shift and go to state 186
    WHEN                           shift and go to state 187

state 121

    (95) WHENELSE -> ELSE .

    RW_end          reduce using rule 95 (WHENELSE -> ELSE .)


state 122

    (97) WHENS -> WHEN .

    RW_else         reduce using rule 97 (WHENS -> WHEN .)
    RW_when         reduce using rule 97 (WHENS -> WHEN .)
    RW_end          reduce using rule 97 (WHENS -> WHEN .)


state 123

    (99) ELSE -> RW_else . RW_then EXP

    RW_then         shift and go to state 188


state 124

    (98) WHEN -> RW_when . EXP RW_then EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 189
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 125

    (101) WHILESTRUCT -> RW_while EXP . ENCAP
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end

    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143
    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 190

state 126

    (102) FORSTRUCT -> RW_for TK_id . RW_in EXP TK_dot EXP ENCAP RW_loop

    RW_in           shift and go to state 191


state 127

    (117) CALLFUNC -> RW_exec TK_field . ARGS
    (118) ARGS -> . ARGS TK_comma EXP
    (119) ARGS -> . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    ARGS                           shift and go to state 192
    EXP                            shift and go to state 160
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 128

    (100) PRINT -> RW_print EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 100 (PRINT -> RW_print EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 129

    (27) INSTRUCTION -> RW_return EXP TK_semicolon .

    RW_break        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_continue     reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_return       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_create       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_use          reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_alter        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_drop         reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_insert       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_update       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_truncate     reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_delete       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_select       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_declare      reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_set          reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_if           reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_case         reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_while        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_for          reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    TK_field        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_exec         reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_begin        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_print        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    $end            reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_end          reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_else         reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)


state 130

    (138) ARITHMETICS -> EXP TK_plus . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 193
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 131

    (139) ARITHMETICS -> EXP TK_minus . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 194
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 132

    (140) ARITHMETICS -> EXP TK_mult . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 195
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 133

    (141) ARITHMETICS -> EXP TK_div . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 196
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 134

    (142) ARITHMETICS -> EXP TK_mod . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 197
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 135

    (144) RELATIONALS -> EXP TK_equalequal . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 198
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 136

    (145) RELATIONALS -> EXP TK_equal . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 199
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 137

    (146) RELATIONALS -> EXP TK_notequal . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 200
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 138

    (147) RELATIONALS -> EXP TK_lessequal . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 201
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 139

    (148) RELATIONALS -> EXP TK_greatequal . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 202
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 140

    (149) RELATIONALS -> EXP TK_less . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 203
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 141

    (150) RELATIONALS -> EXP TK_great . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 204
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 142

    (151) LOGICS -> EXP TK_and . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 205
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 143

    (152) LOGICS -> EXP TK_or . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 206
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 144

    (128) EXP -> TK_id TK_point . TK_id

    TK_id           shift and go to state 207


state 145

    (130) EXP -> TK_field TK_point . TK_field

    TK_field        shift and go to state 208


state 146

    (137) EXP -> TK_lpar EXP . TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 209
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 147

    (143) ARITHMETICS -> TK_minus EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_plus         reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_minus        reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_mult         reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_div          reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_mod          reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_equalequal   reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_equal        reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_notequal     reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_lessequal    reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_greatequal   reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_less         reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_great        reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_and          reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_or           reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    RW_as           reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_comma        reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    RW_from         reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    RW_begin        reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    RW_then         reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    RW_else         reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    RW_when         reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_rpar         reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    RW_end          reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    TK_dot          reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)
    RW_where        reduce using rule 143 (ARITHMETICS -> TK_minus EXP .)

  ! TK_plus         [ shift and go to state 130 ]
  ! TK_minus        [ shift and go to state 131 ]
  ! TK_mult         [ shift and go to state 132 ]
  ! TK_div          [ shift and go to state 133 ]
  ! TK_mod          [ shift and go to state 134 ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 148

    (153) LOGICS -> TK_not EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 153 (LOGICS -> TK_not EXP .)
    TK_and          reduce using rule 153 (LOGICS -> TK_not EXP .)
    TK_or           reduce using rule 153 (LOGICS -> TK_not EXP .)
    RW_as           reduce using rule 153 (LOGICS -> TK_not EXP .)
    TK_comma        reduce using rule 153 (LOGICS -> TK_not EXP .)
    RW_from         reduce using rule 153 (LOGICS -> TK_not EXP .)
    RW_begin        reduce using rule 153 (LOGICS -> TK_not EXP .)
    RW_then         reduce using rule 153 (LOGICS -> TK_not EXP .)
    RW_else         reduce using rule 153 (LOGICS -> TK_not EXP .)
    RW_when         reduce using rule 153 (LOGICS -> TK_not EXP .)
    TK_rpar         reduce using rule 153 (LOGICS -> TK_not EXP .)
    RW_end          reduce using rule 153 (LOGICS -> TK_not EXP .)
    TK_dot          reduce using rule 153 (LOGICS -> TK_not EXP .)
    RW_where        reduce using rule 153 (LOGICS -> TK_not EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141

  ! TK_plus         [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_minus        [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_mult         [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_div          [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_mod          [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_equalequal   [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_equal        [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_notequal     [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_lessequal    [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_greatequal   [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_less         [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_great        [ reduce using rule 153 (LOGICS -> TK_not EXP .) ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 149

    (154) CAST -> RW_cast TK_lpar . EXP RW_as TYPE TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 210
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 150

    (155) NATIVEFUNC -> RW_concatenar TK_lpar . EXP TK_comma EXP TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 211
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 151

    (156) NATIVEFUNC -> RW_substraer TK_lpar . EXP TK_comma EXP TK_comma EXP TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 212
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 152

    (157) NATIVEFUNC -> RW_hoy TK_lpar . TK_rpar

    TK_rpar         shift and go to state 213


state 153

    (158) TERNARY -> RW_if TK_lpar . EXP TK_comma EXP TK_comma EXP TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 214
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 154

    (29) CREATEDB -> RW_create RW_data RW_base . TK_field

    TK_field        shift and go to state 215


state 155

    (49) CREATETABLE -> RW_create RW_table TK_field . TK_lpar ATTRIBUTES TK_rpar

    TK_lpar         shift and go to state 216


state 156

    (103) FUNCDEC -> RW_create RW_function TK_field . TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> RW_create RW_function TK_field . TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP

    TK_lpar         shift and go to state 217


state 157

    (105) FUNCDEC -> RW_create RW_procedure TK_field . PARAMS RW_as ENCAP
    (106) FUNCDEC -> RW_create RW_procedure TK_field . RW_as ENCAP
    (107) FUNCDEC -> RW_create RW_procedure TK_field . TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> RW_create RW_procedure TK_field . ENCAP
    (109) PARAMS -> . PARAMS TK_comma PARAM
    (110) PARAMS -> . PARAM
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (111) PARAM -> . TK_id TYPE
    (112) PARAM -> . TK_id RW_as TYPE

    RW_as           shift and go to state 219
    TK_lpar         shift and go to state 221
    RW_begin        shift and go to state 40
    TK_id           shift and go to state 223

    PARAMS                         shift and go to state 218
    ENCAP                          shift and go to state 220
    PARAM                          shift and go to state 222

state 158

    (115) CALLFUNC -> TK_field TK_lpar ARGS . TK_rpar
    (118) ARGS -> ARGS . TK_comma EXP

    TK_rpar         shift and go to state 224
    TK_comma        shift and go to state 225


state 159

    (116) CALLFUNC -> TK_field TK_lpar TK_rpar .

    TK_semicolon    reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_plus         reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_minus        reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_mult         reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_div          reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_mod          reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_equalequal   reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_equal        reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_notequal     reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_lessequal    reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_greatequal   reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_less         reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_great        reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_and          reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_or           reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_as           reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_comma        reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_from         reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_begin        reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_then         reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_else         reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_when         reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_rpar         reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_end          reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_dot          reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_where        reduce using rule 116 (CALLFUNC -> TK_field TK_lpar TK_rpar .)


state 160

    (119) ARGS -> EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

  ! shift/reduce conflict for TK_plus resolved as shift
  ! shift/reduce conflict for TK_minus resolved as shift
  ! shift/reduce conflict for TK_mult resolved as shift
  ! shift/reduce conflict for TK_div resolved as shift
  ! shift/reduce conflict for TK_mod resolved as shift
  ! shift/reduce conflict for TK_equalequal resolved as shift
  ! shift/reduce conflict for TK_equal resolved as shift
  ! shift/reduce conflict for TK_notequal resolved as shift
  ! shift/reduce conflict for TK_lessequal resolved as shift
  ! shift/reduce conflict for TK_greatequal resolved as shift
  ! shift/reduce conflict for TK_less resolved as shift
  ! shift/reduce conflict for TK_great resolved as shift
  ! shift/reduce conflict for TK_and resolved as shift
  ! shift/reduce conflict for TK_or resolved as shift
    TK_rpar         reduce using rule 119 (ARGS -> EXP .)
    TK_comma        reduce using rule 119 (ARGS -> EXP .)
    TK_semicolon    reduce using rule 119 (ARGS -> EXP .)
    RW_as           reduce using rule 119 (ARGS -> EXP .)
    RW_from         reduce using rule 119 (ARGS -> EXP .)
    RW_begin        reduce using rule 119 (ARGS -> EXP .)
    RW_then         reduce using rule 119 (ARGS -> EXP .)
    RW_else         reduce using rule 119 (ARGS -> EXP .)
    RW_when         reduce using rule 119 (ARGS -> EXP .)
    RW_end          reduce using rule 119 (ARGS -> EXP .)
    TK_dot          reduce using rule 119 (ARGS -> EXP .)
    RW_where        reduce using rule 119 (ARGS -> EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143

  ! TK_plus         [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_minus        [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_mult         [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_div          [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_mod          [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_equalequal   [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_equal        [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_notequal     [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_lessequal    [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_greatequal   [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_less         [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_great        [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_and          [ reduce using rule 119 (ARGS -> EXP .) ]
  ! TK_or           [ reduce using rule 119 (ARGS -> EXP .) ]


state 161

    (66) ALTERTAB -> RW_alter RW_table TK_field . ACTION
    (67) ACTION -> . RW_add RW_column TK_field TYPE
    (68) ACTION -> . RW_drop TK_field
    (69) ACTION -> . RW_rename RW_to TK_field
    (70) ACTION -> . RW_rename RW_column TK_field RW_to TK_field

    RW_add          shift and go to state 227
    RW_drop         shift and go to state 228
    RW_rename       shift and go to state 229

    ACTION                         shift and go to state 226

state 162

    (71) DROPTAB -> RW_drop RW_table TK_field .

    TK_semicolon    reduce using rule 71 (DROPTAB -> RW_drop RW_table TK_field .)


state 163

    (72) INSERTREG -> RW_insert RW_into TK_field . TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    TK_lpar         shift and go to state 230


state 164

    (77) UPDATETAB -> RW_update TK_field RW_set . VALUESTAB RW_where EXP
    (78) VALUESTAB -> . VALUESTAB TK_comma VALUETAB
    (79) VALUESTAB -> . VALUETAB
    (80) VALUETAB -> . TK_field TK_equal EXP

    TK_field        shift and go to state 231

    VALUESTAB                      shift and go to state 232
    VALUETAB                       shift and go to state 233

state 165

    (38) ASIGNID -> RW_set TK_id TK_equal . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 234
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 166

    (81) TRUNCATETAB -> RW_truncate RW_table TK_field .

    TK_semicolon    reduce using rule 81 (TRUNCATETAB -> RW_truncate RW_table TK_field .)


state 167

    (82) DELETETAB -> RW_delete RW_from TK_field . RW_where EXP

    RW_where        shift and go to state 235


state 168

    (39) SELECT -> RW_select FIELDS RW_from . TK_field RW_where EXP
    (40) SELECT -> RW_select FIELDS RW_from . TK_field

    TK_field        shift and go to state 236


state 169

    (46) IDS -> EXP RW_as . TK_nvarchar
    (47) IDS -> EXP RW_as . TK_field

    TK_nvarchar     shift and go to state 237
    TK_field        shift and go to state 238


state 170

    (44) LIST_IDS -> LIST_IDS TK_comma . IDS
    (46) IDS -> . EXP RW_as TK_nvarchar
    (47) IDS -> . EXP RW_as TK_field
    (48) IDS -> . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    IDS                            shift and go to state 239
    EXP                            shift and go to state 108
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 171

    (33) DECLIDS -> DECLIDS TK_comma . DECLID
    (35) DECLID -> . TK_id TYPE
    (36) DECLID -> . TK_id RW_as TYPE
    (37) DECLID -> . TK_id TYPE TK_lpar TK_int TK_rpar

    TK_id           shift and go to state 241

    DECLID                         shift and go to state 240

state 172

    (32) DECLAREID -> RW_declare TK_id TYPE . TK_equal EXP
    (35) DECLID -> TK_id TYPE .
    (37) DECLID -> TK_id TYPE . TK_lpar TK_int TK_rpar

    TK_equal        shift and go to state 242
    TK_comma        reduce using rule 35 (DECLID -> TK_id TYPE .)
    TK_semicolon    reduce using rule 35 (DECLID -> TK_id TYPE .)
    TK_lpar         shift and go to state 243


state 173

    (36) DECLID -> TK_id RW_as . TYPE
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 244

state 174

    (159) TYPE -> RW_int .

    TK_equal        reduce using rule 159 (TYPE -> RW_int .)
    TK_lpar         reduce using rule 159 (TYPE -> RW_int .)
    TK_comma        reduce using rule 159 (TYPE -> RW_int .)
    TK_semicolon    reduce using rule 159 (TYPE -> RW_int .)
    RW_as           reduce using rule 159 (TYPE -> RW_int .)
    TK_rpar         reduce using rule 159 (TYPE -> RW_int .)
    RW_not          reduce using rule 159 (TYPE -> RW_int .)
    RW_primary      reduce using rule 159 (TYPE -> RW_int .)
    RW_ref          reduce using rule 159 (TYPE -> RW_int .)


state 175

    (160) TYPE -> RW_bit .

    TK_equal        reduce using rule 160 (TYPE -> RW_bit .)
    TK_lpar         reduce using rule 160 (TYPE -> RW_bit .)
    TK_comma        reduce using rule 160 (TYPE -> RW_bit .)
    TK_semicolon    reduce using rule 160 (TYPE -> RW_bit .)
    RW_as           reduce using rule 160 (TYPE -> RW_bit .)
    TK_rpar         reduce using rule 160 (TYPE -> RW_bit .)
    RW_not          reduce using rule 160 (TYPE -> RW_bit .)
    RW_primary      reduce using rule 160 (TYPE -> RW_bit .)
    RW_ref          reduce using rule 160 (TYPE -> RW_bit .)


state 176

    (161) TYPE -> RW_decimal .

    TK_equal        reduce using rule 161 (TYPE -> RW_decimal .)
    TK_lpar         reduce using rule 161 (TYPE -> RW_decimal .)
    TK_comma        reduce using rule 161 (TYPE -> RW_decimal .)
    TK_semicolon    reduce using rule 161 (TYPE -> RW_decimal .)
    RW_as           reduce using rule 161 (TYPE -> RW_decimal .)
    TK_rpar         reduce using rule 161 (TYPE -> RW_decimal .)
    RW_not          reduce using rule 161 (TYPE -> RW_decimal .)
    RW_primary      reduce using rule 161 (TYPE -> RW_decimal .)
    RW_ref          reduce using rule 161 (TYPE -> RW_decimal .)


state 177

    (162) TYPE -> RW_date .

    TK_equal        reduce using rule 162 (TYPE -> RW_date .)
    TK_lpar         reduce using rule 162 (TYPE -> RW_date .)
    TK_comma        reduce using rule 162 (TYPE -> RW_date .)
    TK_semicolon    reduce using rule 162 (TYPE -> RW_date .)
    RW_as           reduce using rule 162 (TYPE -> RW_date .)
    TK_rpar         reduce using rule 162 (TYPE -> RW_date .)
    RW_not          reduce using rule 162 (TYPE -> RW_date .)
    RW_primary      reduce using rule 162 (TYPE -> RW_date .)
    RW_ref          reduce using rule 162 (TYPE -> RW_date .)


state 178

    (163) TYPE -> RW_datetime .

    TK_equal        reduce using rule 163 (TYPE -> RW_datetime .)
    TK_lpar         reduce using rule 163 (TYPE -> RW_datetime .)
    TK_comma        reduce using rule 163 (TYPE -> RW_datetime .)
    TK_semicolon    reduce using rule 163 (TYPE -> RW_datetime .)
    RW_as           reduce using rule 163 (TYPE -> RW_datetime .)
    TK_rpar         reduce using rule 163 (TYPE -> RW_datetime .)
    RW_not          reduce using rule 163 (TYPE -> RW_datetime .)
    RW_primary      reduce using rule 163 (TYPE -> RW_datetime .)
    RW_ref          reduce using rule 163 (TYPE -> RW_datetime .)


state 179

    (164) TYPE -> RW_nchar .

    TK_equal        reduce using rule 164 (TYPE -> RW_nchar .)
    TK_lpar         reduce using rule 164 (TYPE -> RW_nchar .)
    TK_comma        reduce using rule 164 (TYPE -> RW_nchar .)
    TK_semicolon    reduce using rule 164 (TYPE -> RW_nchar .)
    RW_as           reduce using rule 164 (TYPE -> RW_nchar .)
    TK_rpar         reduce using rule 164 (TYPE -> RW_nchar .)
    RW_not          reduce using rule 164 (TYPE -> RW_nchar .)
    RW_primary      reduce using rule 164 (TYPE -> RW_nchar .)
    RW_ref          reduce using rule 164 (TYPE -> RW_nchar .)


state 180

    (165) TYPE -> RW_nvarchar .

    TK_equal        reduce using rule 165 (TYPE -> RW_nvarchar .)
    TK_lpar         reduce using rule 165 (TYPE -> RW_nvarchar .)
    TK_comma        reduce using rule 165 (TYPE -> RW_nvarchar .)
    TK_semicolon    reduce using rule 165 (TYPE -> RW_nvarchar .)
    RW_as           reduce using rule 165 (TYPE -> RW_nvarchar .)
    TK_rpar         reduce using rule 165 (TYPE -> RW_nvarchar .)
    RW_not          reduce using rule 165 (TYPE -> RW_nvarchar .)
    RW_primary      reduce using rule 165 (TYPE -> RW_nvarchar .)
    RW_ref          reduce using rule 165 (TYPE -> RW_nvarchar .)


state 181

    (83) IFSTRUCT -> RW_if EXP RW_begin . INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (86) IFSTRUCT -> RW_if EXP RW_begin . INSTRUCTIONS RW_end
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTIONS                   shift and go to state 245
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 182

    (84) IFSTRUCT -> RW_if EXP RW_then . INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> RW_if EXP RW_then . INSTRUCTIONS RW_end RW_if
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTIONS                   shift and go to state 246
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 183

    (113) ENCAP -> RW_begin INSTRUCTIONS RW_end .

    TK_semicolon    reduce using rule 113 (ENCAP -> RW_begin INSTRUCTIONS RW_end .)
    RW_loop         reduce using rule 113 (ENCAP -> RW_begin INSTRUCTIONS RW_end .)


state 184

    (87) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end RW_as TK_field
    (88) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end

    RW_end          shift and go to state 247


state 185

    (90) CASESTRUCT_S -> RW_case WHENELSE RW_end . RW_as TK_field
    (91) CASESTRUCT_S -> RW_case WHENELSE RW_end . RW_as TK_nvarchar
    (92) CASESTRUCT_S -> RW_case WHENELSE RW_end .

    RW_as           shift and go to state 248
    TK_semicolon    reduce using rule 92 (CASESTRUCT_S -> RW_case WHENELSE RW_end .)


state 186

    (93) WHENELSE -> WHENS ELSE .

    RW_end          reduce using rule 93 (WHENELSE -> WHENS ELSE .)


state 187

    (96) WHENS -> WHENS WHEN .

    RW_else         reduce using rule 96 (WHENS -> WHENS WHEN .)
    RW_when         reduce using rule 96 (WHENS -> WHENS WHEN .)
    RW_end          reduce using rule 96 (WHENS -> WHENS WHEN .)


state 188

    (99) ELSE -> RW_else RW_then . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 249
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 189

    (98) WHEN -> RW_when EXP . RW_then EXP
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    RW_then         shift and go to state 250
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 190

    (101) WHILESTRUCT -> RW_while EXP ENCAP .

    TK_semicolon    reduce using rule 101 (WHILESTRUCT -> RW_while EXP ENCAP .)


state 191

    (102) FORSTRUCT -> RW_for TK_id RW_in . EXP TK_dot EXP ENCAP RW_loop
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 251
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 192

    (117) CALLFUNC -> RW_exec TK_field ARGS .
    (118) ARGS -> ARGS . TK_comma EXP

  ! shift/reduce conflict for TK_comma resolved as shift
    TK_semicolon    reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_plus         reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_minus        reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_mult         reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_div          reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_mod          reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_equalequal   reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_equal        reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_notequal     reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_lessequal    reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_greatequal   reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_less         reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_great        reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_and          reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_or           reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    RW_as           reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    RW_from         reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    RW_begin        reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    RW_then         reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    RW_else         reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    RW_when         reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_rpar         reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    RW_end          reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_dot          reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    RW_where        reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .)
    TK_comma        shift and go to state 225

  ! TK_comma        [ reduce using rule 117 (CALLFUNC -> RW_exec TK_field ARGS .) ]


state 193

    (138) ARITHMETICS -> EXP TK_plus EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_plus         reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_minus        reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_equalequal   reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_equal        reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_notequal     reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_lessequal    reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_greatequal   reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_less         reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_great        reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_and          reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_or           reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_as           reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_comma        reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_from         reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_begin        reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_then         reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_else         reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_when         reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_rpar         reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_end          reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_dot          reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_where        reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134

  ! TK_mult         [ reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_div          [ reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_mod          [ reduce using rule 138 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_plus         [ shift and go to state 130 ]
  ! TK_minus        [ shift and go to state 131 ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 194

    (139) ARITHMETICS -> EXP TK_minus EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_plus         reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_minus        reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_equalequal   reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_equal        reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_notequal     reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_lessequal    reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_greatequal   reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_less         reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_great        reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_and          reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_or           reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_as           reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_comma        reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_from         reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_begin        reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_then         reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_else         reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_when         reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_rpar         reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_end          reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_dot          reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_where        reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134

  ! TK_mult         [ reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_div          [ reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_mod          [ reduce using rule 139 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_plus         [ shift and go to state 130 ]
  ! TK_minus        [ shift and go to state 131 ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 195

    (140) ARITHMETICS -> EXP TK_mult EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_plus         reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_minus        reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_mult         reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_div          reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_mod          reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_equalequal   reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_equal        reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_notequal     reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_lessequal    reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_greatequal   reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_less         reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_great        reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_and          reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_or           reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_as           reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_comma        reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_from         reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_begin        reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_then         reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_else         reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_when         reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_rpar         reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_end          reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_dot          reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_where        reduce using rule 140 (ARITHMETICS -> EXP TK_mult EXP .)

  ! TK_plus         [ shift and go to state 130 ]
  ! TK_minus        [ shift and go to state 131 ]
  ! TK_mult         [ shift and go to state 132 ]
  ! TK_div          [ shift and go to state 133 ]
  ! TK_mod          [ shift and go to state 134 ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 196

    (141) ARITHMETICS -> EXP TK_div EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_plus         reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_minus        reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_mult         reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_div          reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_mod          reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_equalequal   reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_equal        reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_notequal     reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_lessequal    reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_greatequal   reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_less         reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_great        reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_and          reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_or           reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    RW_as           reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_comma        reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    RW_from         reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    RW_begin        reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    RW_then         reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    RW_else         reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    RW_when         reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_rpar         reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    RW_end          reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    TK_dot          reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)
    RW_where        reduce using rule 141 (ARITHMETICS -> EXP TK_div EXP .)

  ! TK_plus         [ shift and go to state 130 ]
  ! TK_minus        [ shift and go to state 131 ]
  ! TK_mult         [ shift and go to state 132 ]
  ! TK_div          [ shift and go to state 133 ]
  ! TK_mod          [ shift and go to state 134 ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 197

    (142) ARITHMETICS -> EXP TK_mod EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_plus         reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_minus        reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_mult         reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_div          reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_mod          reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_equalequal   reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_equal        reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_notequal     reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_lessequal    reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_greatequal   reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_less         reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_great        reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_and          reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_or           reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_as           reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_comma        reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_from         reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_begin        reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_then         reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_else         reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_when         reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_rpar         reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_end          reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_dot          reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_where        reduce using rule 142 (ARITHMETICS -> EXP TK_mod EXP .)

  ! TK_plus         [ shift and go to state 130 ]
  ! TK_minus        [ shift and go to state 131 ]
  ! TK_mult         [ shift and go to state 132 ]
  ! TK_div          [ shift and go to state 133 ]
  ! TK_mod          [ shift and go to state 134 ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 198

    (144) RELATIONALS -> EXP TK_equalequal EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_equalequal   reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_equal        reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_notequal     reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_and          reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_or           reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_as           reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_comma        reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_from         reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_begin        reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_then         reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_else         reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_when         reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_rpar         reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_end          reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_dot          reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_where        reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141

  ! TK_plus         [ reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_minus        [ reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_mult         [ reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_div          [ reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_mod          [ reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_lessequal    [ reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_greatequal   [ reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_less         [ reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_great        [ reduce using rule 144 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 199

    (145) RELATIONALS -> EXP TK_equal EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    TK_equalequal   reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    TK_equal        reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    TK_notequal     reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    TK_and          reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    TK_or           reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    RW_as           reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    TK_comma        reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    RW_from         reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    RW_begin        reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    RW_then         reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    RW_else         reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    RW_when         reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    TK_rpar         reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    RW_end          reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    TK_dot          reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    RW_where        reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141

  ! TK_plus         [ reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_minus        [ reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_mult         [ reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_div          [ reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_mod          [ reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_lessequal    [ reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_greatequal   [ reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_less         [ reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_great        [ reduce using rule 145 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 200

    (146) RELATIONALS -> EXP TK_notequal EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_equalequal   reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_equal        reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_notequal     reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_and          reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_or           reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_as           reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_comma        reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_from         reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_begin        reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_then         reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_else         reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_when         reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_rpar         reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_end          reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_dot          reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_where        reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141

  ! TK_plus         [ reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_minus        [ reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_mult         [ reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_div          [ reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_mod          [ reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_lessequal    [ reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_greatequal   [ reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_less         [ reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_great        [ reduce using rule 146 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 201

    (147) RELATIONALS -> EXP TK_lessequal EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_equalequal   reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_equal        reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_notequal     reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_lessequal    reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_greatequal   reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_less         reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_great        reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_and          reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_or           reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_as           reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_comma        reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_from         reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_begin        reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_then         reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_else         reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_when         reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_rpar         reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_end          reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_dot          reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_where        reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134

  ! TK_plus         [ reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_minus        [ reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_mult         [ reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_div          [ reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_mod          [ reduce using rule 147 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 202

    (148) RELATIONALS -> EXP TK_greatequal EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_equalequal   reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_equal        reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_notequal     reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_lessequal    reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_greatequal   reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_less         reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_great        reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_and          reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_or           reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_as           reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_comma        reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_from         reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_begin        reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_then         reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_else         reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_when         reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_rpar         reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_end          reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_dot          reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_where        reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134

  ! TK_plus         [ reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_minus        [ reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_mult         [ reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_div          [ reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_mod          [ reduce using rule 148 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 203

    (149) RELATIONALS -> EXP TK_less EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_equalequal   reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_equal        reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_notequal     reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_lessequal    reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_greatequal   reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_less         reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_great        reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_and          reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_or           reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    RW_as           reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_comma        reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    RW_from         reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    RW_begin        reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    RW_then         reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    RW_else         reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    RW_when         reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_rpar         reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    RW_end          reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_dot          reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    RW_where        reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134

  ! TK_plus         [ reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_minus        [ reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_mult         [ reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_div          [ reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_mod          [ reduce using rule 149 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 204

    (150) RELATIONALS -> EXP TK_great EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_equalequal   reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_equal        reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_notequal     reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_lessequal    reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_greatequal   reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_less         reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_great        reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_and          reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_or           reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    RW_as           reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_comma        reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    RW_from         reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    RW_begin        reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    RW_then         reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    RW_else         reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    RW_when         reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_rpar         reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    RW_end          reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_dot          reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    RW_where        reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134

  ! TK_plus         [ reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_minus        [ reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_mult         [ reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_div          [ reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_mod          [ reduce using rule 150 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_equalequal   [ shift and go to state 135 ]
  ! TK_equal        [ shift and go to state 136 ]
  ! TK_notequal     [ shift and go to state 137 ]
  ! TK_lessequal    [ shift and go to state 138 ]
  ! TK_greatequal   [ shift and go to state 139 ]
  ! TK_less         [ shift and go to state 140 ]
  ! TK_great        [ shift and go to state 141 ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 205

    (151) LOGICS -> EXP TK_and EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    TK_and          reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    TK_or           reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    RW_as           reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    TK_comma        reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    RW_from         reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    RW_begin        reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    RW_then         reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    RW_else         reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    RW_when         reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    TK_rpar         reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    RW_end          reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    TK_dot          reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    RW_where        reduce using rule 151 (LOGICS -> EXP TK_and EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141

  ! TK_plus         [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_minus        [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_mult         [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_div          [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_mod          [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_equalequal   [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_equal        [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_notequal     [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_lessequal    [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_greatequal   [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_less         [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_great        [ reduce using rule 151 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_and          [ shift and go to state 142 ]
  ! TK_or           [ shift and go to state 143 ]


state 206

    (152) LOGICS -> EXP TK_or EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    TK_or           reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    RW_as           reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    TK_comma        reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    RW_from         reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    RW_begin        reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    RW_then         reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    RW_else         reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    RW_when         reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    TK_rpar         reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    RW_end          reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    TK_dot          reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    RW_where        reduce using rule 152 (LOGICS -> EXP TK_or EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142

  ! TK_plus         [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_minus        [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_mult         [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_div          [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_mod          [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_equalequal   [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_equal        [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_notequal     [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_lessequal    [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_greatequal   [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_less         [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_great        [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_and          [ reduce using rule 152 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_or           [ shift and go to state 143 ]


state 207

    (128) EXP -> TK_id TK_point TK_id .

    TK_semicolon    reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_plus         reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_minus        reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_mult         reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_div          reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_mod          reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_equalequal   reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_equal        reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_notequal     reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_lessequal    reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_greatequal   reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_less         reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_great        reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_and          reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_or           reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    RW_as           reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_comma        reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    RW_from         reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    RW_begin        reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    RW_then         reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    RW_else         reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    RW_when         reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_rpar         reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    RW_end          reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    TK_dot          reduce using rule 128 (EXP -> TK_id TK_point TK_id .)
    RW_where        reduce using rule 128 (EXP -> TK_id TK_point TK_id .)


state 208

    (130) EXP -> TK_field TK_point TK_field .

    TK_semicolon    reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_plus         reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_minus        reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_mult         reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_div          reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_mod          reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_equalequal   reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_equal        reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_notequal     reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_lessequal    reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_greatequal   reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_less         reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_great        reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_and          reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_or           reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    RW_as           reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_comma        reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    RW_from         reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    RW_begin        reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    RW_then         reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    RW_else         reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    RW_when         reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_rpar         reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    RW_end          reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    TK_dot          reduce using rule 130 (EXP -> TK_field TK_point TK_field .)
    RW_where        reduce using rule 130 (EXP -> TK_field TK_point TK_field .)


state 209

    (137) EXP -> TK_lpar EXP TK_rpar .

    TK_semicolon    reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_plus         reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_minus        reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_mult         reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_div          reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_mod          reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_equalequal   reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_equal        reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_notequal     reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_lessequal    reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_greatequal   reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_less         reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_great        reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_and          reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_or           reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    RW_as           reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_comma        reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    RW_from         reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    RW_begin        reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    RW_then         reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    RW_else         reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    RW_when         reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_rpar         reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    RW_end          reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    TK_dot          reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)
    RW_where        reduce using rule 137 (EXP -> TK_lpar EXP TK_rpar .)


state 210

    (154) CAST -> RW_cast TK_lpar EXP . RW_as TYPE TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    RW_as           shift and go to state 252
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 211

    (155) NATIVEFUNC -> RW_concatenar TK_lpar EXP . TK_comma EXP TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 253
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 212

    (156) NATIVEFUNC -> RW_substraer TK_lpar EXP . TK_comma EXP TK_comma EXP TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 254
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 213

    (157) NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .

    TK_semicolon    reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_plus         reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_minus        reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_mult         reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_div          reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_mod          reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_equalequal   reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_equal        reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_notequal     reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_lessequal    reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_greatequal   reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_less         reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_great        reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_and          reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_or           reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_as           reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_comma        reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_from         reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_begin        reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_then         reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_else         reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_when         reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_rpar         reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_end          reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_dot          reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_where        reduce using rule 157 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)


state 214

    (158) TERNARY -> RW_if TK_lpar EXP . TK_comma EXP TK_comma EXP TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 255
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 215

    (29) CREATEDB -> RW_create RW_data RW_base TK_field .

    TK_semicolon    reduce using rule 29 (CREATEDB -> RW_create RW_data RW_base TK_field .)


state 216

    (49) CREATETABLE -> RW_create RW_table TK_field TK_lpar . ATTRIBUTES TK_rpar
    (50) ATTRIBUTES -> . ATTRIBUTES TK_comma ATTRIBUTE
    (51) ATTRIBUTES -> . ATTRIBUTE
    (52) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar PROPS
    (53) ATTRIBUTE -> . TK_field TYPE PROPS
    (54) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar
    (55) ATTRIBUTE -> . TK_field TYPE

    TK_field        shift and go to state 256

    ATTRIBUTES                     shift and go to state 257
    ATTRIBUTE                      shift and go to state 258

state 217

    (103) FUNCDEC -> RW_create RW_function TK_field TK_lpar . PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> RW_create RW_function TK_field TK_lpar . TK_rpar RW_returns TYPE RW_as ENCAP
    (109) PARAMS -> . PARAMS TK_comma PARAM
    (110) PARAMS -> . PARAM
    (111) PARAM -> . TK_id TYPE
    (112) PARAM -> . TK_id RW_as TYPE

    TK_rpar         shift and go to state 260
    TK_id           shift and go to state 223

    PARAMS                         shift and go to state 259
    PARAM                          shift and go to state 222

state 218

    (105) FUNCDEC -> RW_create RW_procedure TK_field PARAMS . RW_as ENCAP
    (109) PARAMS -> PARAMS . TK_comma PARAM

    RW_as           shift and go to state 261
    TK_comma        shift and go to state 262


state 219

    (106) FUNCDEC -> RW_create RW_procedure TK_field RW_as . ENCAP
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 263

state 220

    (108) FUNCDEC -> RW_create RW_procedure TK_field ENCAP .

    TK_semicolon    reduce using rule 108 (FUNCDEC -> RW_create RW_procedure TK_field ENCAP .)


state 221

    (107) FUNCDEC -> RW_create RW_procedure TK_field TK_lpar . PARAMS TK_rpar RW_as ENCAP
    (109) PARAMS -> . PARAMS TK_comma PARAM
    (110) PARAMS -> . PARAM
    (111) PARAM -> . TK_id TYPE
    (112) PARAM -> . TK_id RW_as TYPE

    TK_id           shift and go to state 223

    PARAMS                         shift and go to state 264
    PARAM                          shift and go to state 222

state 222

    (110) PARAMS -> PARAM .

    RW_as           reduce using rule 110 (PARAMS -> PARAM .)
    TK_comma        reduce using rule 110 (PARAMS -> PARAM .)
    TK_rpar         reduce using rule 110 (PARAMS -> PARAM .)


state 223

    (111) PARAM -> TK_id . TYPE
    (112) PARAM -> TK_id . RW_as TYPE
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_as           shift and go to state 266
    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 265

state 224

    (115) CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .

    TK_semicolon    reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_plus         reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_minus        reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_mult         reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_div          reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_mod          reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_equalequal   reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_equal        reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_notequal     reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_lessequal    reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_greatequal   reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_less         reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_great        reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_and          reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_or           reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_as           reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_comma        reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_from         reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_begin        reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_then         reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_else         reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_when         reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_rpar         reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_end          reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_dot          reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_where        reduce using rule 115 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)


state 225

    (118) ARGS -> ARGS TK_comma . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 267
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 226

    (66) ALTERTAB -> RW_alter RW_table TK_field ACTION .

    TK_semicolon    reduce using rule 66 (ALTERTAB -> RW_alter RW_table TK_field ACTION .)


state 227

    (67) ACTION -> RW_add . RW_column TK_field TYPE

    RW_column       shift and go to state 268


state 228

    (68) ACTION -> RW_drop . TK_field

    TK_field        shift and go to state 269


state 229

    (69) ACTION -> RW_rename . RW_to TK_field
    (70) ACTION -> RW_rename . RW_column TK_field RW_to TK_field

    RW_to           shift and go to state 270
    RW_column       shift and go to state 271


state 230

    (72) INSERTREG -> RW_insert RW_into TK_field TK_lpar . LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (73) LIST_ATTRIBS -> . LIST_ATTRIBS TK_comma TK_field
    (74) LIST_ATTRIBS -> . TK_field

    TK_field        shift and go to state 272

    LIST_ATTRIBS                   shift and go to state 273

state 231

    (80) VALUETAB -> TK_field . TK_equal EXP

    TK_equal        shift and go to state 274


state 232

    (77) UPDATETAB -> RW_update TK_field RW_set VALUESTAB . RW_where EXP
    (78) VALUESTAB -> VALUESTAB . TK_comma VALUETAB

    RW_where        shift and go to state 275
    TK_comma        shift and go to state 276


state 233

    (79) VALUESTAB -> VALUETAB .

    RW_where        reduce using rule 79 (VALUESTAB -> VALUETAB .)
    TK_comma        reduce using rule 79 (VALUESTAB -> VALUETAB .)


state 234

    (38) ASIGNID -> RW_set TK_id TK_equal EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 38 (ASIGNID -> RW_set TK_id TK_equal EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 235

    (82) DELETETAB -> RW_delete RW_from TK_field RW_where . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 277
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 236

    (39) SELECT -> RW_select FIELDS RW_from TK_field . RW_where EXP
    (40) SELECT -> RW_select FIELDS RW_from TK_field .

    RW_where        shift and go to state 278
    TK_semicolon    reduce using rule 40 (SELECT -> RW_select FIELDS RW_from TK_field .)


state 237

    (46) IDS -> EXP RW_as TK_nvarchar .

    TK_comma        reduce using rule 46 (IDS -> EXP RW_as TK_nvarchar .)
    TK_semicolon    reduce using rule 46 (IDS -> EXP RW_as TK_nvarchar .)
    RW_from         reduce using rule 46 (IDS -> EXP RW_as TK_nvarchar .)


state 238

    (47) IDS -> EXP RW_as TK_field .

    TK_comma        reduce using rule 47 (IDS -> EXP RW_as TK_field .)
    TK_semicolon    reduce using rule 47 (IDS -> EXP RW_as TK_field .)
    RW_from         reduce using rule 47 (IDS -> EXP RW_as TK_field .)


state 239

    (44) LIST_IDS -> LIST_IDS TK_comma IDS .

    TK_comma        reduce using rule 44 (LIST_IDS -> LIST_IDS TK_comma IDS .)
    TK_semicolon    reduce using rule 44 (LIST_IDS -> LIST_IDS TK_comma IDS .)
    RW_from         reduce using rule 44 (LIST_IDS -> LIST_IDS TK_comma IDS .)


state 240

    (33) DECLIDS -> DECLIDS TK_comma DECLID .

    TK_comma        reduce using rule 33 (DECLIDS -> DECLIDS TK_comma DECLID .)
    TK_semicolon    reduce using rule 33 (DECLIDS -> DECLIDS TK_comma DECLID .)


state 241

    (35) DECLID -> TK_id . TYPE
    (36) DECLID -> TK_id . RW_as TYPE
    (37) DECLID -> TK_id . TYPE TK_lpar TK_int TK_rpar
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_as           shift and go to state 173
    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 279

state 242

    (32) DECLAREID -> RW_declare TK_id TYPE TK_equal . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 280
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 243

    (37) DECLID -> TK_id TYPE TK_lpar . TK_int TK_rpar

    TK_int          shift and go to state 281


state 244

    (36) DECLID -> TK_id RW_as TYPE .

    TK_comma        reduce using rule 36 (DECLID -> TK_id RW_as TYPE .)
    TK_semicolon    reduce using rule 36 (DECLID -> TK_id RW_as TYPE .)


state 245

    (83) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS . RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (86) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS . RW_end
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_end          shift and go to state 282
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTION                    shift and go to state 46
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 246

    (84) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS . RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS . RW_end RW_if
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_else         shift and go to state 283
    RW_end          shift and go to state 284
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTION                    shift and go to state 46
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 247

    (87) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end . RW_as TK_field
    (88) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end . RW_as TK_nvarchar
    (89) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end .

    RW_as           shift and go to state 285
    TK_semicolon    reduce using rule 89 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end .)


state 248

    (90) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as . TK_field
    (91) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as . TK_nvarchar

    TK_field        shift and go to state 286
    TK_nvarchar     shift and go to state 287


state 249

    (99) ELSE -> RW_else RW_then EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    RW_end          reduce using rule 99 (ELSE -> RW_else RW_then EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 250

    (98) WHEN -> RW_when EXP RW_then . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 288
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 251

    (102) FORSTRUCT -> RW_for TK_id RW_in EXP . TK_dot EXP ENCAP RW_loop
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_dot          shift and go to state 289
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 252

    (154) CAST -> RW_cast TK_lpar EXP RW_as . TYPE TK_rpar
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 290

state 253

    (155) NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma . EXP TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 291
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 254

    (156) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma . EXP TK_comma EXP TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 292
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 255

    (158) TERNARY -> RW_if TK_lpar EXP TK_comma . EXP TK_comma EXP TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 293
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 256

    (52) ATTRIBUTE -> TK_field . TYPE TK_lpar TK_int TK_rpar PROPS
    (53) ATTRIBUTE -> TK_field . TYPE PROPS
    (54) ATTRIBUTE -> TK_field . TYPE TK_lpar TK_int TK_rpar
    (55) ATTRIBUTE -> TK_field . TYPE
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 294

state 257

    (49) CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES . TK_rpar
    (50) ATTRIBUTES -> ATTRIBUTES . TK_comma ATTRIBUTE

    TK_rpar         shift and go to state 295
    TK_comma        shift and go to state 296


state 258

    (51) ATTRIBUTES -> ATTRIBUTE .

    TK_rpar         reduce using rule 51 (ATTRIBUTES -> ATTRIBUTE .)
    TK_comma        reduce using rule 51 (ATTRIBUTES -> ATTRIBUTE .)


state 259

    (103) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS . TK_rpar RW_returns TYPE RW_as ENCAP
    (109) PARAMS -> PARAMS . TK_comma PARAM

    TK_rpar         shift and go to state 297
    TK_comma        shift and go to state 262


state 260

    (104) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar . RW_returns TYPE RW_as ENCAP

    RW_returns      shift and go to state 298


state 261

    (105) FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as . ENCAP
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 299

state 262

    (109) PARAMS -> PARAMS TK_comma . PARAM
    (111) PARAM -> . TK_id TYPE
    (112) PARAM -> . TK_id RW_as TYPE

    TK_id           shift and go to state 223

    PARAM                          shift and go to state 300

state 263

    (106) FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP .

    TK_semicolon    reduce using rule 106 (FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP .)


state 264

    (107) FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS . TK_rpar RW_as ENCAP
    (109) PARAMS -> PARAMS . TK_comma PARAM

    TK_rpar         shift and go to state 301
    TK_comma        shift and go to state 262


state 265

    (111) PARAM -> TK_id TYPE .

    RW_as           reduce using rule 111 (PARAM -> TK_id TYPE .)
    TK_comma        reduce using rule 111 (PARAM -> TK_id TYPE .)
    TK_rpar         reduce using rule 111 (PARAM -> TK_id TYPE .)


state 266

    (112) PARAM -> TK_id RW_as . TYPE
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 302

state 267

    (118) ARGS -> ARGS TK_comma EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

  ! shift/reduce conflict for TK_plus resolved as shift
  ! shift/reduce conflict for TK_minus resolved as shift
  ! shift/reduce conflict for TK_mult resolved as shift
  ! shift/reduce conflict for TK_div resolved as shift
  ! shift/reduce conflict for TK_mod resolved as shift
  ! shift/reduce conflict for TK_equalequal resolved as shift
  ! shift/reduce conflict for TK_equal resolved as shift
  ! shift/reduce conflict for TK_notequal resolved as shift
  ! shift/reduce conflict for TK_lessequal resolved as shift
  ! shift/reduce conflict for TK_greatequal resolved as shift
  ! shift/reduce conflict for TK_less resolved as shift
  ! shift/reduce conflict for TK_great resolved as shift
  ! shift/reduce conflict for TK_and resolved as shift
  ! shift/reduce conflict for TK_or resolved as shift
    TK_rpar         reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    TK_comma        reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    TK_semicolon    reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    RW_as           reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    RW_from         reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    RW_begin        reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    RW_then         reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    RW_else         reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    RW_when         reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    RW_end          reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    TK_dot          reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    RW_where        reduce using rule 118 (ARGS -> ARGS TK_comma EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143

  ! TK_plus         [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_minus        [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_mult         [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_div          [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_mod          [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_equalequal   [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_equal        [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_notequal     [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_lessequal    [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_greatequal   [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_less         [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_great        [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_and          [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]
  ! TK_or           [ reduce using rule 118 (ARGS -> ARGS TK_comma EXP .) ]


state 268

    (67) ACTION -> RW_add RW_column . TK_field TYPE

    TK_field        shift and go to state 303


state 269

    (68) ACTION -> RW_drop TK_field .

    TK_semicolon    reduce using rule 68 (ACTION -> RW_drop TK_field .)


state 270

    (69) ACTION -> RW_rename RW_to . TK_field

    TK_field        shift and go to state 304


state 271

    (70) ACTION -> RW_rename RW_column . TK_field RW_to TK_field

    TK_field        shift and go to state 305


state 272

    (74) LIST_ATTRIBS -> TK_field .

    TK_rpar         reduce using rule 74 (LIST_ATTRIBS -> TK_field .)
    TK_comma        reduce using rule 74 (LIST_ATTRIBS -> TK_field .)


state 273

    (72) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS . TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (73) LIST_ATTRIBS -> LIST_ATTRIBS . TK_comma TK_field

    TK_rpar         shift and go to state 306
    TK_comma        shift and go to state 307


state 274

    (80) VALUETAB -> TK_field TK_equal . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 308
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 275

    (77) UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 309
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 276

    (78) VALUESTAB -> VALUESTAB TK_comma . VALUETAB
    (80) VALUETAB -> . TK_field TK_equal EXP

    TK_field        shift and go to state 231

    VALUETAB                       shift and go to state 310

state 277

    (82) DELETETAB -> RW_delete RW_from TK_field RW_where EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 82 (DELETETAB -> RW_delete RW_from TK_field RW_where EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 278

    (39) SELECT -> RW_select FIELDS RW_from TK_field RW_where . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 311
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 279

    (35) DECLID -> TK_id TYPE .
    (37) DECLID -> TK_id TYPE . TK_lpar TK_int TK_rpar

    TK_comma        reduce using rule 35 (DECLID -> TK_id TYPE .)
    TK_semicolon    reduce using rule 35 (DECLID -> TK_id TYPE .)
    TK_lpar         shift and go to state 243


state 280

    (32) DECLAREID -> RW_declare TK_id TYPE TK_equal EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 32 (DECLAREID -> RW_declare TK_id TYPE TK_equal EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 281

    (37) DECLID -> TK_id TYPE TK_lpar TK_int . TK_rpar

    TK_rpar         shift and go to state 312


state 282

    (83) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end . RW_else RW_begin INSTRUCTIONS RW_end
    (86) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end .

    RW_else         shift and go to state 313
    TK_semicolon    reduce using rule 86 (IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end .)


state 283

    (84) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else . INSTRUCTIONS RW_end RW_if
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTIONS                   shift and go to state 314
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 284

    (85) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end . RW_if

    RW_if           shift and go to state 315


state 285

    (87) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as . TK_field
    (88) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as . TK_nvarchar

    TK_field        shift and go to state 316
    TK_nvarchar     shift and go to state 317


state 286

    (90) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field .

    TK_semicolon    reduce using rule 90 (CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field .)


state 287

    (91) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar .

    TK_semicolon    reduce using rule 91 (CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar .)


state 288

    (98) WHEN -> RW_when EXP RW_then EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    RW_else         reduce using rule 98 (WHEN -> RW_when EXP RW_then EXP .)
    RW_when         reduce using rule 98 (WHEN -> RW_when EXP RW_then EXP .)
    RW_end          reduce using rule 98 (WHEN -> RW_when EXP RW_then EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 289

    (102) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot . EXP ENCAP RW_loop
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 318
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 290

    (154) CAST -> RW_cast TK_lpar EXP RW_as TYPE . TK_rpar

    TK_rpar         shift and go to state 319


state 291

    (155) NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP . TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 320
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 292

    (156) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP . TK_comma EXP TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 321
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 293

    (158) TERNARY -> RW_if TK_lpar EXP TK_comma EXP . TK_comma EXP TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 322
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 294

    (52) ATTRIBUTE -> TK_field TYPE . TK_lpar TK_int TK_rpar PROPS
    (53) ATTRIBUTE -> TK_field TYPE . PROPS
    (54) ATTRIBUTE -> TK_field TYPE . TK_lpar TK_int TK_rpar
    (55) ATTRIBUTE -> TK_field TYPE .
    (56) PROPS -> . RW_not RW_null RW_primary RW_key FKEY
    (57) PROPS -> . RW_not RW_null RW_primary RW_key
    (58) PROPS -> . RW_primary RW_key RW_not RW_null FKEY
    (59) PROPS -> . RW_primary RW_key RW_not RW_null
    (60) PROPS -> . RW_not RW_null FKEY
    (61) PROPS -> . RW_not RW_null
    (62) PROPS -> . RW_primary RW_key FKEY
    (63) PROPS -> . RW_primary RW_key
    (64) PROPS -> . FKEY
    (65) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_lpar         shift and go to state 323
    TK_rpar         reduce using rule 55 (ATTRIBUTE -> TK_field TYPE .)
    TK_comma        reduce using rule 55 (ATTRIBUTE -> TK_field TYPE .)
    RW_not          shift and go to state 325
    RW_primary      shift and go to state 326
    RW_ref          shift and go to state 328

    PROPS                          shift and go to state 324
    FKEY                           shift and go to state 327

state 295

    (49) CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar .

    TK_semicolon    reduce using rule 49 (CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar .)


state 296

    (50) ATTRIBUTES -> ATTRIBUTES TK_comma . ATTRIBUTE
    (52) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar PROPS
    (53) ATTRIBUTE -> . TK_field TYPE PROPS
    (54) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar
    (55) ATTRIBUTE -> . TK_field TYPE

    TK_field        shift and go to state 256

    ATTRIBUTE                      shift and go to state 329

state 297

    (103) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar . RW_returns TYPE RW_as ENCAP

    RW_returns      shift and go to state 330


state 298

    (104) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns . TYPE RW_as ENCAP
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 331

state 299

    (105) FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP .

    TK_semicolon    reduce using rule 105 (FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP .)


state 300

    (109) PARAMS -> PARAMS TK_comma PARAM .

    RW_as           reduce using rule 109 (PARAMS -> PARAMS TK_comma PARAM .)
    TK_comma        reduce using rule 109 (PARAMS -> PARAMS TK_comma PARAM .)
    TK_rpar         reduce using rule 109 (PARAMS -> PARAMS TK_comma PARAM .)


state 301

    (107) FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar . RW_as ENCAP

    RW_as           shift and go to state 332


state 302

    (112) PARAM -> TK_id RW_as TYPE .

    RW_as           reduce using rule 112 (PARAM -> TK_id RW_as TYPE .)
    TK_comma        reduce using rule 112 (PARAM -> TK_id RW_as TYPE .)
    TK_rpar         reduce using rule 112 (PARAM -> TK_id RW_as TYPE .)


state 303

    (67) ACTION -> RW_add RW_column TK_field . TYPE
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 333

state 304

    (69) ACTION -> RW_rename RW_to TK_field .

    TK_semicolon    reduce using rule 69 (ACTION -> RW_rename RW_to TK_field .)


state 305

    (70) ACTION -> RW_rename RW_column TK_field . RW_to TK_field

    RW_to           shift and go to state 334


state 306

    (72) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar . RW_values TK_lpar LIST_EXPS TK_rpar

    RW_values       shift and go to state 335


state 307

    (73) LIST_ATTRIBS -> LIST_ATTRIBS TK_comma . TK_field

    TK_field        shift and go to state 336


state 308

    (80) VALUETAB -> TK_field TK_equal EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    RW_where        reduce using rule 80 (VALUETAB -> TK_field TK_equal EXP .)
    TK_comma        reduce using rule 80 (VALUETAB -> TK_field TK_equal EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 309

    (77) UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 77 (UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 310

    (78) VALUESTAB -> VALUESTAB TK_comma VALUETAB .

    RW_where        reduce using rule 78 (VALUESTAB -> VALUESTAB TK_comma VALUETAB .)
    TK_comma        reduce using rule 78 (VALUESTAB -> VALUESTAB TK_comma VALUETAB .)


state 311

    (39) SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 39 (SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 312

    (37) DECLID -> TK_id TYPE TK_lpar TK_int TK_rpar .

    TK_comma        reduce using rule 37 (DECLID -> TK_id TYPE TK_lpar TK_int TK_rpar .)
    TK_semicolon    reduce using rule 37 (DECLID -> TK_id TYPE TK_lpar TK_int TK_rpar .)


state 313

    (83) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else . RW_begin INSTRUCTIONS RW_end

    RW_begin        shift and go to state 337


state 314

    (84) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS . RW_end RW_if
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_end          shift and go to state 338
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTION                    shift and go to state 46
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 315

    (85) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if .

    TK_semicolon    reduce using rule 85 (IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if .)


state 316

    (87) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field .

    TK_semicolon    reduce using rule 87 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field .)


state 317

    (88) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar .

    TK_semicolon    reduce using rule 88 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar .)


state 318

    (102) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP . ENCAP RW_loop
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end

    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143
    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 339

state 319

    (154) CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .

    TK_semicolon    reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_plus         reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_minus        reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_mult         reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_div          reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_mod          reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_equalequal   reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_equal        reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_notequal     reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_lessequal    reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_greatequal   reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_less         reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_great        reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_and          reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_or           reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_as           reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_comma        reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_from         reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_begin        reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_then         reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_else         reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_when         reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_rpar         reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_end          reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_dot          reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_where        reduce using rule 154 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)


state 320

    (155) NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_equalequal   reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 155 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)


state 321

    (156) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma . EXP TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 340
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 322

    (158) TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma . EXP TK_rpar
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 341
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 323

    (52) ATTRIBUTE -> TK_field TYPE TK_lpar . TK_int TK_rpar PROPS
    (54) ATTRIBUTE -> TK_field TYPE TK_lpar . TK_int TK_rpar

    TK_int          shift and go to state 342


state 324

    (53) ATTRIBUTE -> TK_field TYPE PROPS .

    TK_rpar         reduce using rule 53 (ATTRIBUTE -> TK_field TYPE PROPS .)
    TK_comma        reduce using rule 53 (ATTRIBUTE -> TK_field TYPE PROPS .)


state 325

    (56) PROPS -> RW_not . RW_null RW_primary RW_key FKEY
    (57) PROPS -> RW_not . RW_null RW_primary RW_key
    (60) PROPS -> RW_not . RW_null FKEY
    (61) PROPS -> RW_not . RW_null

    RW_null         shift and go to state 343


state 326

    (58) PROPS -> RW_primary . RW_key RW_not RW_null FKEY
    (59) PROPS -> RW_primary . RW_key RW_not RW_null
    (62) PROPS -> RW_primary . RW_key FKEY
    (63) PROPS -> RW_primary . RW_key

    RW_key          shift and go to state 344


state 327

    (64) PROPS -> FKEY .

    TK_rpar         reduce using rule 64 (PROPS -> FKEY .)
    TK_comma        reduce using rule 64 (PROPS -> FKEY .)


state 328

    (65) FKEY -> RW_ref . TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 345


state 329

    (50) ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .

    TK_rpar         reduce using rule 50 (ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .)
    TK_comma        reduce using rule 50 (ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .)


state 330

    (103) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns . TYPE RW_as ENCAP
    (159) TYPE -> . RW_int
    (160) TYPE -> . RW_bit
    (161) TYPE -> . RW_decimal
    (162) TYPE -> . RW_date
    (163) TYPE -> . RW_datetime
    (164) TYPE -> . RW_nchar
    (165) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 174
    RW_bit          shift and go to state 175
    RW_decimal      shift and go to state 176
    RW_date         shift and go to state 177
    RW_datetime     shift and go to state 178
    RW_nchar        shift and go to state 179
    RW_nvarchar     shift and go to state 180

    TYPE                           shift and go to state 346

state 331

    (104) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE . RW_as ENCAP

    RW_as           shift and go to state 347


state 332

    (107) FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as . ENCAP
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 348

state 333

    (67) ACTION -> RW_add RW_column TK_field TYPE .

    TK_semicolon    reduce using rule 67 (ACTION -> RW_add RW_column TK_field TYPE .)


state 334

    (70) ACTION -> RW_rename RW_column TK_field RW_to . TK_field

    TK_field        shift and go to state 349


state 335

    (72) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values . TK_lpar LIST_EXPS TK_rpar

    TK_lpar         shift and go to state 350


state 336

    (73) LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .

    TK_rpar         reduce using rule 73 (LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .)
    TK_comma        reduce using rule 73 (LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .)


state 337

    (83) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin . INSTRUCTIONS RW_end
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTIONS                   shift and go to state 351
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 338

    (84) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end . RW_if

    RW_if           shift and go to state 352


state 339

    (102) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP . RW_loop

    RW_loop         shift and go to state 353


state 340

    (156) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP . TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 354
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 341

    (158) TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP . TK_rpar
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 355
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 342

    (52) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int . TK_rpar PROPS
    (54) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int . TK_rpar

    TK_rpar         shift and go to state 356


state 343

    (56) PROPS -> RW_not RW_null . RW_primary RW_key FKEY
    (57) PROPS -> RW_not RW_null . RW_primary RW_key
    (60) PROPS -> RW_not RW_null . FKEY
    (61) PROPS -> RW_not RW_null .
    (65) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    RW_primary      shift and go to state 357
    TK_rpar         reduce using rule 61 (PROPS -> RW_not RW_null .)
    TK_comma        reduce using rule 61 (PROPS -> RW_not RW_null .)
    RW_ref          shift and go to state 328

    FKEY                           shift and go to state 358

state 344

    (58) PROPS -> RW_primary RW_key . RW_not RW_null FKEY
    (59) PROPS -> RW_primary RW_key . RW_not RW_null
    (62) PROPS -> RW_primary RW_key . FKEY
    (63) PROPS -> RW_primary RW_key .
    (65) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    RW_not          shift and go to state 359
    TK_rpar         reduce using rule 63 (PROPS -> RW_primary RW_key .)
    TK_comma        reduce using rule 63 (PROPS -> RW_primary RW_key .)
    RW_ref          shift and go to state 328

    FKEY                           shift and go to state 360

state 345

    (65) FKEY -> RW_ref TK_field . TK_lpar TK_field TK_rpar

    TK_lpar         shift and go to state 361


state 346

    (103) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE . RW_as ENCAP

    RW_as           shift and go to state 362


state 347

    (104) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as . ENCAP
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 363

state 348

    (107) FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP .

    TK_semicolon    reduce using rule 107 (FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP .)


state 349

    (70) ACTION -> RW_rename RW_column TK_field RW_to TK_field .

    TK_semicolon    reduce using rule 70 (ACTION -> RW_rename RW_column TK_field RW_to TK_field .)


state 350

    (72) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar . LIST_EXPS TK_rpar
    (75) LIST_EXPS -> . LIST_EXPS TK_comma EXP
    (76) LIST_EXPS -> . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    LIST_EXPS                      shift and go to state 364
    EXP                            shift and go to state 365
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 351

    (83) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS . RW_end
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (49) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (66) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (71) DROPTAB -> . RW_drop RW_table TK_field
    (72) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (77) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (81) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (82) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (39) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (40) SELECT -> . RW_select FIELDS RW_from TK_field
    (41) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (38) ASIGNID -> . RW_set TK_id TK_equal EXP
    (83) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end
    (84) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (85) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (86) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (88) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (89) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (91) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (92) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (101) WHILESTRUCT -> . RW_while EXP ENCAP
    (102) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (103) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (107) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar RW_as ENCAP
    (108) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end
    (100) PRINT -> . RW_print EXP

    RW_end          shift and go to state 366
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_exec         shift and go to state 44
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 45

    INSTRUCTION                    shift and go to state 46
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 352

    (84) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if .

    TK_semicolon    reduce using rule 84 (IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if .)


state 353

    (102) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop .

    TK_semicolon    reduce using rule 102 (FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop .)


state 354

    (156) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equalequal   reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 156 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)


state 355

    (158) TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equalequal   reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 158 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)


state 356

    (52) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar . PROPS
    (54) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar .
    (56) PROPS -> . RW_not RW_null RW_primary RW_key FKEY
    (57) PROPS -> . RW_not RW_null RW_primary RW_key
    (58) PROPS -> . RW_primary RW_key RW_not RW_null FKEY
    (59) PROPS -> . RW_primary RW_key RW_not RW_null
    (60) PROPS -> . RW_not RW_null FKEY
    (61) PROPS -> . RW_not RW_null
    (62) PROPS -> . RW_primary RW_key FKEY
    (63) PROPS -> . RW_primary RW_key
    (64) PROPS -> . FKEY
    (65) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_rpar         reduce using rule 54 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar .)
    TK_comma        reduce using rule 54 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar .)
    RW_not          shift and go to state 325
    RW_primary      shift and go to state 326
    RW_ref          shift and go to state 328

    PROPS                          shift and go to state 367
    FKEY                           shift and go to state 327

state 357

    (56) PROPS -> RW_not RW_null RW_primary . RW_key FKEY
    (57) PROPS -> RW_not RW_null RW_primary . RW_key

    RW_key          shift and go to state 368


state 358

    (60) PROPS -> RW_not RW_null FKEY .

    TK_rpar         reduce using rule 60 (PROPS -> RW_not RW_null FKEY .)
    TK_comma        reduce using rule 60 (PROPS -> RW_not RW_null FKEY .)


state 359

    (58) PROPS -> RW_primary RW_key RW_not . RW_null FKEY
    (59) PROPS -> RW_primary RW_key RW_not . RW_null

    RW_null         shift and go to state 369


state 360

    (62) PROPS -> RW_primary RW_key FKEY .

    TK_rpar         reduce using rule 62 (PROPS -> RW_primary RW_key FKEY .)
    TK_comma        reduce using rule 62 (PROPS -> RW_primary RW_key FKEY .)


state 361

    (65) FKEY -> RW_ref TK_field TK_lpar . TK_field TK_rpar

    TK_field        shift and go to state 370


state 362

    (103) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as . ENCAP
    (113) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (114) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 371

state 363

    (104) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP .

    TK_semicolon    reduce using rule 104 (FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE RW_as ENCAP .)


state 364

    (72) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS . TK_rpar
    (75) LIST_EXPS -> LIST_EXPS . TK_comma EXP

    TK_rpar         shift and go to state 372
    TK_comma        shift and go to state 373


state 365

    (76) LIST_EXPS -> EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 76 (LIST_EXPS -> EXP .)
    TK_comma        reduce using rule 76 (LIST_EXPS -> EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143


state 366

    (83) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end .

    TK_semicolon    reduce using rule 83 (IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end RW_else RW_begin INSTRUCTIONS RW_end .)


state 367

    (52) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS .

    TK_rpar         reduce using rule 52 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS .)
    TK_comma        reduce using rule 52 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS .)


state 368

    (56) PROPS -> RW_not RW_null RW_primary RW_key . FKEY
    (57) PROPS -> RW_not RW_null RW_primary RW_key .
    (65) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_rpar         reduce using rule 57 (PROPS -> RW_not RW_null RW_primary RW_key .)
    TK_comma        reduce using rule 57 (PROPS -> RW_not RW_null RW_primary RW_key .)
    RW_ref          shift and go to state 328

    FKEY                           shift and go to state 374

state 369

    (58) PROPS -> RW_primary RW_key RW_not RW_null . FKEY
    (59) PROPS -> RW_primary RW_key RW_not RW_null .
    (65) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_rpar         reduce using rule 59 (PROPS -> RW_primary RW_key RW_not RW_null .)
    TK_comma        reduce using rule 59 (PROPS -> RW_primary RW_key RW_not RW_null .)
    RW_ref          shift and go to state 328

    FKEY                           shift and go to state 375

state 370

    (65) FKEY -> RW_ref TK_field TK_lpar TK_field . TK_rpar

    TK_rpar         shift and go to state 376


state 371

    (103) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP .

    TK_semicolon    reduce using rule 103 (FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE RW_as ENCAP .)


state 372

    (72) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar .

    TK_semicolon    reduce using rule 72 (INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar .)


state 373

    (75) LIST_EXPS -> LIST_EXPS TK_comma . EXP
    (120) EXP -> . ARITHMETICS
    (121) EXP -> . RELATIONALS
    (122) EXP -> . LOGICS
    (123) EXP -> . CAST
    (124) EXP -> . NATIVEFUNC
    (125) EXP -> . CALLFUNC
    (126) EXP -> . TERNARY
    (127) EXP -> . TK_id
    (128) EXP -> . TK_id TK_point TK_id
    (129) EXP -> . TK_field
    (130) EXP -> . TK_field TK_point TK_field
    (131) EXP -> . TK_nvarchar
    (132) EXP -> . TK_int
    (133) EXP -> . TK_decimal
    (134) EXP -> . TK_date
    (135) EXP -> . TK_datetime
    (136) EXP -> . RW_null
    (137) EXP -> . TK_lpar EXP TK_rpar
    (138) ARITHMETICS -> . EXP TK_plus EXP
    (139) ARITHMETICS -> . EXP TK_minus EXP
    (140) ARITHMETICS -> . EXP TK_mult EXP
    (141) ARITHMETICS -> . EXP TK_div EXP
    (142) ARITHMETICS -> . EXP TK_mod EXP
    (143) ARITHMETICS -> . TK_minus EXP
    (144) RELATIONALS -> . EXP TK_equalequal EXP
    (145) RELATIONALS -> . EXP TK_equal EXP
    (146) RELATIONALS -> . EXP TK_notequal EXP
    (147) RELATIONALS -> . EXP TK_lessequal EXP
    (148) RELATIONALS -> . EXP TK_greatequal EXP
    (149) RELATIONALS -> . EXP TK_less EXP
    (150) RELATIONALS -> . EXP TK_great EXP
    (151) LOGICS -> . EXP TK_and EXP
    (152) LOGICS -> . EXP TK_or EXP
    (153) LOGICS -> . TK_not EXP
    (154) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (155) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (156) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (157) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (115) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (116) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (117) CALLFUNC -> . RW_exec TK_field ARGS
    (158) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 78
    TK_field        shift and go to state 79
    TK_nvarchar     shift and go to state 80
    TK_int          shift and go to state 81
    TK_decimal      shift and go to state 82
    TK_date         shift and go to state 83
    TK_datetime     shift and go to state 84
    RW_null         shift and go to state 85
    TK_lpar         shift and go to state 86
    TK_minus        shift and go to state 87
    TK_not          shift and go to state 88
    RW_cast         shift and go to state 89
    RW_concatenar   shift and go to state 90
    RW_substraer    shift and go to state 91
    RW_hoy          shift and go to state 92
    RW_exec         shift and go to state 44
    RW_if           shift and go to state 93

    EXP                            shift and go to state 377
    ARITHMETICS                    shift and go to state 71
    RELATIONALS                    shift and go to state 72
    LOGICS                         shift and go to state 73
    CAST                           shift and go to state 74
    NATIVEFUNC                     shift and go to state 75
    CALLFUNC                       shift and go to state 76
    TERNARY                        shift and go to state 77

state 374

    (56) PROPS -> RW_not RW_null RW_primary RW_key FKEY .

    TK_rpar         reduce using rule 56 (PROPS -> RW_not RW_null RW_primary RW_key FKEY .)
    TK_comma        reduce using rule 56 (PROPS -> RW_not RW_null RW_primary RW_key FKEY .)


state 375

    (58) PROPS -> RW_primary RW_key RW_not RW_null FKEY .

    TK_rpar         reduce using rule 58 (PROPS -> RW_primary RW_key RW_not RW_null FKEY .)
    TK_comma        reduce using rule 58 (PROPS -> RW_primary RW_key RW_not RW_null FKEY .)


state 376

    (65) FKEY -> RW_ref TK_field TK_lpar TK_field TK_rpar .

    TK_rpar         reduce using rule 65 (FKEY -> RW_ref TK_field TK_lpar TK_field TK_rpar .)
    TK_comma        reduce using rule 65 (FKEY -> RW_ref TK_field TK_lpar TK_field TK_rpar .)


state 377

    (75) LIST_EXPS -> LIST_EXPS TK_comma EXP .
    (138) ARITHMETICS -> EXP . TK_plus EXP
    (139) ARITHMETICS -> EXP . TK_minus EXP
    (140) ARITHMETICS -> EXP . TK_mult EXP
    (141) ARITHMETICS -> EXP . TK_div EXP
    (142) ARITHMETICS -> EXP . TK_mod EXP
    (144) RELATIONALS -> EXP . TK_equalequal EXP
    (145) RELATIONALS -> EXP . TK_equal EXP
    (146) RELATIONALS -> EXP . TK_notequal EXP
    (147) RELATIONALS -> EXP . TK_lessequal EXP
    (148) RELATIONALS -> EXP . TK_greatequal EXP
    (149) RELATIONALS -> EXP . TK_less EXP
    (150) RELATIONALS -> EXP . TK_great EXP
    (151) LOGICS -> EXP . TK_and EXP
    (152) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 75 (LIST_EXPS -> LIST_EXPS TK_comma EXP .)
    TK_comma        reduce using rule 75 (LIST_EXPS -> LIST_EXPS TK_comma EXP .)
    TK_plus         shift and go to state 130
    TK_minus        shift and go to state 131
    TK_mult         shift and go to state 132
    TK_div          shift and go to state 133
    TK_mod          shift and go to state 134
    TK_equalequal   shift and go to state 135
    TK_equal        shift and go to state 136
    TK_notequal     shift and go to state 137
    TK_lessequal    shift and go to state 138
    TK_greatequal   shift and go to state 139
    TK_less         shift and go to state 140
    TK_great        shift and go to state 141
    TK_and          shift and go to state 142
    TK_or           shift and go to state 143

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TK_plus in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_minus in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_mult in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_div in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_mod in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_equalequal in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_equal in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_notequal in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_lessequal in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_greatequal in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_less in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_great in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_and in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_or in state 160 resolved as shift
WARNING: shift/reduce conflict for TK_comma in state 192 resolved as shift
WARNING: shift/reduce conflict for TK_plus in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_minus in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_mult in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_div in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_mod in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_equalequal in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_equal in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_notequal in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_lessequal in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_greatequal in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_less in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_great in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_and in state 267 resolved as shift
WARNING: shift/reduce conflict for TK_or in state 267 resolved as shift
