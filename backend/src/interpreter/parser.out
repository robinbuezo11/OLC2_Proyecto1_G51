Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RW_contar

Grammar

Rule 0     S' -> INIT
Rule 1     INIT -> INSTRUCTIONS
Rule 2     INIT -> <empty>
Rule 3     INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION
Rule 4     INSTRUCTIONS -> INSTRUCTION
Rule 5     INSTRUCTION -> CREATEDB TK_semicolon
Rule 6     INSTRUCTION -> USEDB TK_semicolon
Rule 7     INSTRUCTION -> CREATETABLE TK_semicolon
Rule 8     INSTRUCTION -> ALTERTAB TK_semicolon
Rule 9     INSTRUCTION -> DROPTAB TK_semicolon
Rule 10    INSTRUCTION -> INSERTREG TK_semicolon
Rule 11    INSTRUCTION -> UPDATETAB TK_semicolon
Rule 12    INSTRUCTION -> TRUNCATETAB TK_semicolon
Rule 13    INSTRUCTION -> DELETETAB TK_semicolon
Rule 14    INSTRUCTION -> SELECT TK_semicolon
Rule 15    INSTRUCTION -> DECLAREID TK_semicolon
Rule 16    INSTRUCTION -> ASIGNID TK_semicolon
Rule 17    INSTRUCTION -> IFSTRUCT TK_semicolon
Rule 18    INSTRUCTION -> CASESTRUCT_S TK_semicolon
Rule 19    INSTRUCTION -> WHILESTRUCT TK_semicolon
Rule 20    INSTRUCTION -> FORSTRUCT TK_semicolon
Rule 21    INSTRUCTION -> FUNCDEC TK_semicolon
Rule 22    INSTRUCTION -> CALLFUNC TK_semicolon
Rule 23    INSTRUCTION -> ENCAP TK_semicolon
Rule 24    INSTRUCTION -> PRINT TK_semicolon
Rule 25    INSTRUCTION -> RW_break TK_semicolon
Rule 26    INSTRUCTION -> RW_continue TK_semicolon
Rule 27    INSTRUCTION -> RW_return EXP TK_semicolon
Rule 28    INSTRUCTION -> RW_return TK_semicolon
Rule 29    CREATEDB -> RW_create RW_data RW_base TK_field
Rule 30    USEDB -> RW_use TK_field
Rule 31    DECLAREID -> RW_declare DECLIDS
Rule 32    DECLAREID -> RW_declare TK_id TYPE TK_equal EXP
Rule 33    DECLIDS -> DECLIDS TK_comma DECLID
Rule 34    DECLIDS -> DECLID
Rule 35    DECLID -> TK_id TYPE
Rule 36    ASIGNID -> RW_set TK_id TK_equal EXP
Rule 37    SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP
Rule 38    SELECT -> RW_select FIELDS RW_from TK_field
Rule 39    SELECT -> RW_select LIST_IDS
Rule 40    FIELDS -> LIST_IDS
Rule 41    FIELDS -> TK_mult
Rule 42    LIST_IDS -> LIST_IDS TK_comma IDS
Rule 43    LIST_IDS -> IDS
Rule 44    IDS -> EXP RW_as TK_nvarchar
Rule 45    IDS -> EXP RW_as TK_field
Rule 46    IDS -> EXP
Rule 47    CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
Rule 48    ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE
Rule 49    ATTRIBUTES -> ATTRIBUTE
Rule 50    ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS
Rule 51    ATTRIBUTE -> TK_field TYPE PROPS
Rule 52    ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar
Rule 53    ATTRIBUTE -> TK_field TYPE
Rule 54    ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar
Rule 55    PROPS -> RW_not RW_null RW_primary RW_key FKEY
Rule 56    PROPS -> RW_not RW_null RW_primary RW_key
Rule 57    PROPS -> RW_primary RW_key RW_not RW_null FKEY
Rule 58    PROPS -> RW_primary RW_key RW_not RW_null
Rule 59    PROPS -> RW_not RW_null FKEY
Rule 60    PROPS -> RW_not RW_null
Rule 61    PROPS -> RW_primary RW_key FKEY
Rule 62    PROPS -> RW_primary RW_key
Rule 63    PROPS -> FKEY
Rule 64    FKEY -> RW_ref TK_field TK_lpar TK_field TK_rpar
Rule 65    ALTERTAB -> RW_alter RW_table TK_field ACTION
Rule 66    ACTION -> RW_add TK_field TYPE
Rule 67    ACTION -> RW_drop TK_field
Rule 68    ACTION -> RW_rename RW_to TK_field
Rule 69    ACTION -> RW_rename RW_column TK_field RW_to TK_field
Rule 70    DROPTAB -> RW_drop RW_table TK_field
Rule 71    INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
Rule 72    LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field
Rule 73    LIST_ATTRIBS -> TK_field
Rule 74    LIST_EXPS -> LIST_EXPS TK_comma EXP
Rule 75    LIST_EXPS -> EXP
Rule 76    UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP
Rule 77    VALUESTAB -> VALUESTAB TK_comma VALUETAB
Rule 78    VALUESTAB -> VALUETAB
Rule 79    VALUETAB -> TK_field TK_equal EXP
Rule 80    TRUNCATETAB -> RW_truncate RW_table TK_field
Rule 81    DELETETAB -> RW_delete RW_from TK_field RW_where EXP
Rule 82    IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
Rule 83    IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
Rule 84    IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end
Rule 85    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field
Rule 86    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
Rule 87    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end
Rule 88    CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field
Rule 89    CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar
Rule 90    CASESTRUCT_S -> RW_case WHENELSE RW_end
Rule 91    WHENELSE -> WHENS ELSE
Rule 92    WHENELSE -> WHENS
Rule 93    WHENELSE -> ELSE
Rule 94    WHENS -> WHENS WHEN
Rule 95    WHENS -> WHEN
Rule 96    WHEN -> RW_when EXP RW_then EXP
Rule 97    ELSE -> RW_else RW_then EXP
Rule 98    PRINT -> RW_print EXP
Rule 99    WHILESTRUCT -> RW_while EXP ENCAP
Rule 100   FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
Rule 101   FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
Rule 102   FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
Rule 103   FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP
Rule 104   FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP
Rule 105   FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
Rule 106   FUNCDEC -> RW_create RW_procedure TK_field ENCAP
Rule 107   PARAMS -> PARAMS TK_comma PARAM
Rule 108   PARAMS -> PARAM
Rule 109   PARAM -> TK_id RW_as TYPE
Rule 110   ENCAP -> RW_begin INSTRUCTIONS RW_end
Rule 111   ENCAP -> RW_begin RW_end
Rule 112   CALLFUNC -> TK_field TK_lpar ARGS TK_rpar
Rule 113   CALLFUNC -> TK_field TK_lpar TK_rpar
Rule 114   ARGS -> ARGS TK_comma EXP
Rule 115   ARGS -> EXP
Rule 116   EXP -> ARITHMETICS
Rule 117   EXP -> RELATIONALS
Rule 118   EXP -> LOGICS
Rule 119   EXP -> CAST
Rule 120   EXP -> NATIVEFUNC
Rule 121   EXP -> CALLFUNC
Rule 122   EXP -> TERNARY
Rule 123   EXP -> TK_id
Rule 124   EXP -> TK_field
Rule 125   EXP -> TK_nvarchar
Rule 126   EXP -> TK_int
Rule 127   EXP -> TK_decimal
Rule 128   EXP -> TK_date
Rule 129   EXP -> TK_datetime
Rule 130   EXP -> RW_null
Rule 131   EXP -> TK_lpar EXP TK_rpar
Rule 132   ARITHMETICS -> EXP TK_plus EXP
Rule 133   ARITHMETICS -> EXP TK_minus EXP
Rule 134   ARITHMETICS -> EXP TK_mult EXP
Rule 135   ARITHMETICS -> EXP TK_div EXP
Rule 136   ARITHMETICS -> EXP TK_mod EXP
Rule 137   ARITHMETICS -> TK_minus EXP
Rule 138   RELATIONALS -> EXP TK_equalequal EXP
Rule 139   RELATIONALS -> EXP TK_equal EXP
Rule 140   RELATIONALS -> EXP TK_notequal EXP
Rule 141   RELATIONALS -> EXP TK_lessequal EXP
Rule 142   RELATIONALS -> EXP TK_greatequal EXP
Rule 143   RELATIONALS -> EXP TK_less EXP
Rule 144   RELATIONALS -> EXP TK_great EXP
Rule 145   LOGICS -> EXP TK_and EXP
Rule 146   LOGICS -> EXP TK_or EXP
Rule 147   LOGICS -> TK_not EXP
Rule 148   CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar
Rule 149   NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
Rule 150   NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
Rule 151   NATIVEFUNC -> RW_hoy TK_lpar TK_rpar
Rule 152   TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
Rule 153   TYPE -> RW_int
Rule 154   TYPE -> RW_bit
Rule 155   TYPE -> RW_decimal
Rule 156   TYPE -> RW_date
Rule 157   TYPE -> RW_datetime
Rule 158   TYPE -> RW_nchar
Rule 159   TYPE -> RW_nvarchar

Terminals, with rules where they appear

RW_add               : 66
RW_alter             : 65
RW_as                : 44 45 85 86 88 89 103 104 109 148
RW_base              : 29
RW_begin             : 84 110 111
RW_bit               : 154
RW_break             : 25
RW_case              : 85 86 87 88 89 90
RW_cast              : 148
RW_column            : 69
RW_concatenar        : 149
RW_contar            : 
RW_continue          : 26
RW_create            : 29 47 101 102 103 104 105 106
RW_data              : 29
RW_date              : 156
RW_datetime          : 157
RW_decimal           : 155
RW_declare           : 31 32
RW_delete            : 81
RW_drop              : 67 70
RW_else              : 82 97
RW_end               : 82 83 84 85 86 87 88 89 90 110 111
RW_for               : 100
RW_foreing           : 54
RW_from              : 37 38 81
RW_function          : 101 102
RW_hoy               : 151
RW_if                : 82 82 83 83 84 152
RW_in                : 100
RW_insert            : 71
RW_int               : 153
RW_into              : 71
RW_key               : 54 55 56 57 58 61 62
RW_loop              : 100
RW_nchar             : 158
RW_not               : 55 56 57 58 59 60
RW_null              : 55 56 57 58 59 60 130
RW_nvarchar          : 159
RW_primary           : 55 56 57 58 61 62
RW_print             : 98
RW_procedure         : 103 104 105 106
RW_ref               : 54 64
RW_rename            : 68 69
RW_return            : 27 28
RW_returns           : 101 102
RW_select            : 37 38 39
RW_set               : 36 76
RW_substraer         : 150
RW_table             : 47 65 70 80
RW_then              : 82 83 96 97
RW_to                : 68 69
RW_truncate          : 80
RW_update            : 76
RW_use               : 30
RW_values            : 71
RW_when              : 96
RW_where             : 37 76 81
RW_while             : 99
TK_and               : 145
TK_comma             : 33 42 48 72 74 77 107 114 149 150 150 152 152
TK_date              : 128
TK_datetime          : 129
TK_decimal           : 127
TK_div               : 135
TK_dot               : 100
TK_equal             : 32 36 79 139
TK_equalequal        : 138
TK_field             : 29 30 37 38 45 47 50 51 52 53 54 54 54 64 64 65 66 67 68 69 69 70 71 72 73 76 79 80 81 85 88 101 102 103 104 105 106 112 113 124
TK_great             : 144
TK_greatequal        : 142
TK_id                : 32 35 36 100 109 123
TK_int               : 50 52 126
TK_less              : 143
TK_lessequal         : 141
TK_lpar              : 47 50 52 54 54 64 71 71 101 102 105 112 113 131 148 149 150 151 152
TK_minus             : 133 137
TK_mod               : 136
TK_mult              : 41 134
TK_not               : 147
TK_notequal          : 140
TK_nvarchar          : 44 86 89 125
TK_or                : 146
TK_plus              : 132
TK_rpar              : 47 50 52 54 54 64 71 71 101 102 105 112 113 131 148 149 150 151 152
TK_semicolon         : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
error                : 

Nonterminals, with rules where they appear

ACTION               : 65
ALTERTAB             : 8
ARGS                 : 112 114
ARITHMETICS          : 116
ASIGNID              : 16
ATTRIBUTE            : 48 49
ATTRIBUTES           : 47 48
CALLFUNC             : 22 121
CASESTRUCT_S         : 18
CAST                 : 119
CREATEDB             : 5
CREATETABLE          : 7
DECLAREID            : 15
DECLID               : 33 34
DECLIDS              : 31 33
DELETETAB            : 13
DROPTAB              : 9
ELSE                 : 91 93
ENCAP                : 23 99 100 101 102 103 104 105 106
EXP                  : 27 32 36 37 44 45 46 74 75 76 79 81 82 83 84 85 86 87 96 96 97 98 99 100 100 114 115 131 132 132 133 133 134 134 135 135 136 136 137 138 138 139 139 140 140 141 141 142 142 143 143 144 144 145 145 146 146 147 148 149 149 150 150 150 152 152 152
FIELDS               : 37 38
FKEY                 : 55 57 59 61 63
FORSTRUCT            : 20
FUNCDEC              : 21
IDS                  : 42 43
IFSTRUCT             : 17
INIT                 : 0
INSERTREG            : 10
INSTRUCTION          : 3 4
INSTRUCTIONS         : 1 3 82 82 83 84 110
LIST_ATTRIBS         : 71 72
LIST_EXPS            : 71 74
LIST_IDS             : 39 40 42
LOGICS               : 118
NATIVEFUNC           : 120
PARAM                : 107 108
PARAMS               : 101 103 105 107
PRINT                : 24
PROPS                : 50 51
RELATIONALS          : 117
SELECT               : 14
TERNARY              : 122
TRUNCATETAB          : 12
TYPE                 : 32 35 50 51 52 53 66 101 102 109 148
UPDATETAB            : 11
USEDB                : 6
VALUESTAB            : 76 77
VALUETAB             : 77 78
WHEN                 : 94 95
WHENELSE             : 85 86 87 88 89 90
WHENS                : 91 92 94
WHILESTRUCT          : 19

Parsing method: LALR

state 0

    (0) S' -> . INIT
    (1) INIT -> . INSTRUCTIONS
    (2) INIT -> .
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    $end            reduce using rule 2 (INIT -> .)
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INIT                           shift and go to state 1
    INSTRUCTIONS                   shift and go to state 2
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 1

    (0) S' -> INIT .



state 2

    (1) INIT -> INSTRUCTIONS .
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    $end            reduce using rule 1 (INIT -> INSTRUCTIONS .)
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INSTRUCTION                    shift and go to state 45
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 3

    (4) INSTRUCTIONS -> INSTRUCTION .

    RW_break        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_continue     reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_return       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_create       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_use          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_alter        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_drop         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_insert       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_update       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_truncate     reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_delete       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_select       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_declare      reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_set          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_if           reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_case         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_while        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_for          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    TK_field        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_begin        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_print        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    $end            reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_end          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_else         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)


state 4

    (5) INSTRUCTION -> CREATEDB . TK_semicolon

    TK_semicolon    shift and go to state 46


state 5

    (6) INSTRUCTION -> USEDB . TK_semicolon

    TK_semicolon    shift and go to state 47


state 6

    (7) INSTRUCTION -> CREATETABLE . TK_semicolon

    TK_semicolon    shift and go to state 48


state 7

    (8) INSTRUCTION -> ALTERTAB . TK_semicolon

    TK_semicolon    shift and go to state 49


state 8

    (9) INSTRUCTION -> DROPTAB . TK_semicolon

    TK_semicolon    shift and go to state 50


state 9

    (10) INSTRUCTION -> INSERTREG . TK_semicolon

    TK_semicolon    shift and go to state 51


state 10

    (11) INSTRUCTION -> UPDATETAB . TK_semicolon

    TK_semicolon    shift and go to state 52


state 11

    (12) INSTRUCTION -> TRUNCATETAB . TK_semicolon

    TK_semicolon    shift and go to state 53


state 12

    (13) INSTRUCTION -> DELETETAB . TK_semicolon

    TK_semicolon    shift and go to state 54


state 13

    (14) INSTRUCTION -> SELECT . TK_semicolon

    TK_semicolon    shift and go to state 55


state 14

    (15) INSTRUCTION -> DECLAREID . TK_semicolon

    TK_semicolon    shift and go to state 56


state 15

    (16) INSTRUCTION -> ASIGNID . TK_semicolon

    TK_semicolon    shift and go to state 57


state 16

    (17) INSTRUCTION -> IFSTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 58


state 17

    (18) INSTRUCTION -> CASESTRUCT_S . TK_semicolon

    TK_semicolon    shift and go to state 59


state 18

    (19) INSTRUCTION -> WHILESTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 60


state 19

    (20) INSTRUCTION -> FORSTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 61


state 20

    (21) INSTRUCTION -> FUNCDEC . TK_semicolon

    TK_semicolon    shift and go to state 62


state 21

    (22) INSTRUCTION -> CALLFUNC . TK_semicolon

    TK_semicolon    shift and go to state 63


state 22

    (23) INSTRUCTION -> ENCAP . TK_semicolon

    TK_semicolon    shift and go to state 64


state 23

    (24) INSTRUCTION -> PRINT . TK_semicolon

    TK_semicolon    shift and go to state 65


state 24

    (25) INSTRUCTION -> RW_break . TK_semicolon

    TK_semicolon    shift and go to state 66


state 25

    (26) INSTRUCTION -> RW_continue . TK_semicolon

    TK_semicolon    shift and go to state 67


state 26

    (27) INSTRUCTION -> RW_return . EXP TK_semicolon
    (28) INSTRUCTION -> RW_return . TK_semicolon
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_semicolon    shift and go to state 69
    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 68
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 27

    (29) CREATEDB -> RW_create . RW_data RW_base TK_field
    (47) CREATETABLE -> RW_create . RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (101) FUNCDEC -> RW_create . RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> RW_create . RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> RW_create . RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> RW_create . RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> RW_create . RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> RW_create . RW_procedure TK_field ENCAP

    RW_data         shift and go to state 93
    RW_table        shift and go to state 94
    RW_function     shift and go to state 95
    RW_procedure    shift and go to state 96


state 28

    (112) CALLFUNC -> TK_field . TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> TK_field . TK_lpar TK_rpar

    TK_lpar         shift and go to state 97


state 29

    (30) USEDB -> RW_use . TK_field

    TK_field        shift and go to state 98


state 30

    (65) ALTERTAB -> RW_alter . RW_table TK_field ACTION

    RW_table        shift and go to state 99


state 31

    (70) DROPTAB -> RW_drop . RW_table TK_field

    RW_table        shift and go to state 100


state 32

    (71) INSERTREG -> RW_insert . RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    RW_into         shift and go to state 101


state 33

    (76) UPDATETAB -> RW_update . TK_field RW_set VALUESTAB RW_where EXP

    TK_field        shift and go to state 102


state 34

    (36) ASIGNID -> RW_set . TK_id TK_equal EXP

    TK_id           shift and go to state 103


state 35

    (80) TRUNCATETAB -> RW_truncate . RW_table TK_field

    RW_table        shift and go to state 104


state 36

    (81) DELETETAB -> RW_delete . RW_from TK_field RW_where EXP

    RW_from         shift and go to state 105


state 37

    (37) SELECT -> RW_select . FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> RW_select . FIELDS RW_from TK_field
    (39) SELECT -> RW_select . LIST_IDS
    (40) FIELDS -> . LIST_IDS
    (41) FIELDS -> . TK_mult
    (42) LIST_IDS -> . LIST_IDS TK_comma IDS
    (43) LIST_IDS -> . IDS
    (44) IDS -> . EXP RW_as TK_nvarchar
    (45) IDS -> . EXP RW_as TK_field
    (46) IDS -> . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_mult         shift and go to state 109
    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    FIELDS                         shift and go to state 106
    EXP                            shift and go to state 107
    LIST_IDS                       shift and go to state 108
    IDS                            shift and go to state 110
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 38

    (31) DECLAREID -> RW_declare . DECLIDS
    (32) DECLAREID -> RW_declare . TK_id TYPE TK_equal EXP
    (33) DECLIDS -> . DECLIDS TK_comma DECLID
    (34) DECLIDS -> . DECLID
    (35) DECLID -> . TK_id TYPE

    TK_id           shift and go to state 112

    DECLIDS                        shift and go to state 111
    DECLID                         shift and go to state 113

state 39

    (82) IFSTRUCT -> RW_if . EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> RW_if . EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> RW_if . EXP RW_begin INSTRUCTIONS RW_end
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 114
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 40

    (110) ENCAP -> RW_begin . INSTRUCTIONS RW_end
    (111) ENCAP -> RW_begin . RW_end
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    RW_end          shift and go to state 116
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INSTRUCTIONS                   shift and go to state 115
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 41

    (85) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> RW_case . WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> RW_case . WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> RW_case . WHENELSE RW_end
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (91) WHENELSE -> . WHENS ELSE
    (92) WHENELSE -> . WHENS
    (93) WHENELSE -> . ELSE
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (94) WHENS -> . WHENS WHEN
    (95) WHENS -> . WHEN
    (97) ELSE -> . RW_else RW_then EXP
    (96) WHEN -> . RW_when EXP RW_then EXP

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92
    RW_else         shift and go to state 122
    RW_when         shift and go to state 123

    EXP                            shift and go to state 117
    WHENELSE                       shift and go to state 118
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76
    WHENS                          shift and go to state 119
    ELSE                           shift and go to state 120
    WHEN                           shift and go to state 121

state 42

    (99) WHILESTRUCT -> RW_while . EXP ENCAP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 124
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 43

    (100) FORSTRUCT -> RW_for . TK_id RW_in EXP TK_dot EXP ENCAP RW_loop

    TK_id           shift and go to state 125


state 44

    (98) PRINT -> RW_print . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 126
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 45

    (3) INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .

    RW_break        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_continue     reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_return       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_create       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_use          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_alter        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_drop         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_insert       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_update       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_truncate     reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_delete       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_select       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_declare      reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_set          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_if           reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_case         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_while        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_for          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    TK_field        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_begin        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_print        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    $end            reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_end          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_else         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)


state 46

    (5) INSTRUCTION -> CREATEDB TK_semicolon .

    RW_break        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_continue     reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_return       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_create       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_use          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_alter        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_drop         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_insert       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_update       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_truncate     reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_delete       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_select       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_declare      reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_set          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_if           reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_case         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_while        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_for          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    TK_field        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_begin        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_print        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    $end            reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_end          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_else         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)


state 47

    (6) INSTRUCTION -> USEDB TK_semicolon .

    RW_break        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_continue     reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_return       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_create       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_use          reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_alter        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_drop         reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_insert       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_update       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_truncate     reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_delete       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_select       reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_declare      reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_set          reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_if           reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_case         reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_while        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_for          reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    TK_field        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_begin        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_print        reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    $end            reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_end          reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)
    RW_else         reduce using rule 6 (INSTRUCTION -> USEDB TK_semicolon .)


state 48

    (7) INSTRUCTION -> CREATETABLE TK_semicolon .

    RW_break        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_continue     reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_return       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_create       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_use          reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_alter        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_drop         reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_insert       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_update       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_truncate     reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_delete       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_select       reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_declare      reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_set          reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_if           reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_case         reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_while        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_for          reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    TK_field        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_begin        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_print        reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    $end            reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_end          reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_else         reduce using rule 7 (INSTRUCTION -> CREATETABLE TK_semicolon .)


state 49

    (8) INSTRUCTION -> ALTERTAB TK_semicolon .

    RW_break        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_continue     reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_return       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_create       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_use          reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_alter        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_drop         reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_insert       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_update       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_truncate     reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_delete       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_select       reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_declare      reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_set          reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_if           reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_case         reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_while        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_for          reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    TK_field        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_begin        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_print        reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    $end            reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_end          reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_else         reduce using rule 8 (INSTRUCTION -> ALTERTAB TK_semicolon .)


state 50

    (9) INSTRUCTION -> DROPTAB TK_semicolon .

    RW_break        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_continue     reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_return       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_create       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_use          reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_alter        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_drop         reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_insert       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_update       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_truncate     reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_delete       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_select       reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_declare      reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_set          reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_if           reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_case         reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_while        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_for          reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    TK_field        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_begin        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_print        reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    $end            reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_end          reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_else         reduce using rule 9 (INSTRUCTION -> DROPTAB TK_semicolon .)


state 51

    (10) INSTRUCTION -> INSERTREG TK_semicolon .

    RW_break        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_continue     reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_return       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_create       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_use          reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_alter        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_drop         reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_insert       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_update       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_truncate     reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_delete       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_select       reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_declare      reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_set          reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_if           reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_case         reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_while        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_for          reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    TK_field        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_begin        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_print        reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    $end            reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_end          reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_else         reduce using rule 10 (INSTRUCTION -> INSERTREG TK_semicolon .)


state 52

    (11) INSTRUCTION -> UPDATETAB TK_semicolon .

    RW_break        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_continue     reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_return       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_create       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_use          reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_alter        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_drop         reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_insert       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_update       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_truncate     reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_delete       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_select       reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_declare      reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_set          reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_if           reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_case         reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_while        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_for          reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    TK_field        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_begin        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_print        reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    $end            reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_end          reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_else         reduce using rule 11 (INSTRUCTION -> UPDATETAB TK_semicolon .)


state 53

    (12) INSTRUCTION -> TRUNCATETAB TK_semicolon .

    RW_break        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_continue     reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_return       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_create       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_use          reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_alter        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_drop         reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_insert       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_update       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_truncate     reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_delete       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_select       reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_declare      reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_set          reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_if           reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_case         reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_while        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_for          reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    TK_field        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_begin        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_print        reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    $end            reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_end          reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_else         reduce using rule 12 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)


state 54

    (13) INSTRUCTION -> DELETETAB TK_semicolon .

    RW_break        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_continue     reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_return       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_create       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_use          reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_alter        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_drop         reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_insert       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_update       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_truncate     reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_delete       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_select       reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_declare      reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_set          reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_if           reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_case         reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_while        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_for          reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    TK_field        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_begin        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_print        reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    $end            reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_end          reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_else         reduce using rule 13 (INSTRUCTION -> DELETETAB TK_semicolon .)


state 55

    (14) INSTRUCTION -> SELECT TK_semicolon .

    RW_break        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_continue     reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_return       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_create       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_use          reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_alter        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_drop         reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_insert       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_update       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_truncate     reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_delete       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_select       reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_declare      reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_set          reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_if           reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_case         reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_while        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_for          reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    TK_field        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_begin        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_print        reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    $end            reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_end          reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_else         reduce using rule 14 (INSTRUCTION -> SELECT TK_semicolon .)


state 56

    (15) INSTRUCTION -> DECLAREID TK_semicolon .

    RW_break        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_continue     reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_return       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_create       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_use          reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_alter        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_drop         reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_insert       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_update       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_truncate     reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_delete       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_select       reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_declare      reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_set          reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_if           reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_case         reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_while        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_for          reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    TK_field        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_begin        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_print        reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    $end            reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_end          reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_else         reduce using rule 15 (INSTRUCTION -> DECLAREID TK_semicolon .)


state 57

    (16) INSTRUCTION -> ASIGNID TK_semicolon .

    RW_break        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_continue     reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_return       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_create       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_use          reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_alter        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_drop         reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_insert       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_update       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_truncate     reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_delete       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_select       reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_declare      reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_set          reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_if           reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_case         reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_while        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_for          reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    TK_field        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_begin        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_print        reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    $end            reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_end          reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_else         reduce using rule 16 (INSTRUCTION -> ASIGNID TK_semicolon .)


state 58

    (17) INSTRUCTION -> IFSTRUCT TK_semicolon .

    RW_break        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_continue     reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_return       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_create       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_use          reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_alter        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_drop         reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_insert       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_update       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_delete       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_select       reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_declare      reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_set          reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_if           reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_case         reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_while        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_for          reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    TK_field        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_begin        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_print        reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    $end            reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_end          reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_else         reduce using rule 17 (INSTRUCTION -> IFSTRUCT TK_semicolon .)


state 59

    (18) INSTRUCTION -> CASESTRUCT_S TK_semicolon .

    RW_break        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_continue     reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_return       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_create       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_use          reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_alter        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_drop         reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_insert       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_update       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_truncate     reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_delete       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_select       reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_declare      reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_set          reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_if           reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_case         reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_while        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_for          reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    TK_field        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_begin        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_print        reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    $end            reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_end          reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_else         reduce using rule 18 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)


state 60

    (19) INSTRUCTION -> WHILESTRUCT TK_semicolon .

    RW_break        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_continue     reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_return       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_create       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_use          reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_alter        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_drop         reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_insert       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_update       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_delete       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_select       reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_declare      reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_set          reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_if           reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_case         reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_while        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_for          reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    TK_field        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_begin        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_print        reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    $end            reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_end          reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_else         reduce using rule 19 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)


state 61

    (20) INSTRUCTION -> FORSTRUCT TK_semicolon .

    RW_break        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_continue     reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_return       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_create       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_use          reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_alter        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_drop         reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_insert       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_update       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_delete       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_select       reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_declare      reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_set          reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_if           reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_case         reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_while        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_for          reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    TK_field        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_begin        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_print        reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    $end            reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_end          reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_else         reduce using rule 20 (INSTRUCTION -> FORSTRUCT TK_semicolon .)


state 62

    (21) INSTRUCTION -> FUNCDEC TK_semicolon .

    RW_break        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_continue     reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_return       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_create       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_use          reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_alter        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_drop         reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_insert       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_update       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_truncate     reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_delete       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_select       reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_declare      reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_set          reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_if           reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_case         reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_while        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_for          reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    TK_field        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_begin        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_print        reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    $end            reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_end          reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_else         reduce using rule 21 (INSTRUCTION -> FUNCDEC TK_semicolon .)


state 63

    (22) INSTRUCTION -> CALLFUNC TK_semicolon .

    RW_break        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_continue     reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_return       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_create       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_use          reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_alter        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_drop         reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_insert       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_update       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_truncate     reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_delete       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_select       reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_declare      reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_set          reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_if           reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_case         reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_while        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_for          reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    TK_field        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_begin        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_print        reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    $end            reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_end          reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_else         reduce using rule 22 (INSTRUCTION -> CALLFUNC TK_semicolon .)


state 64

    (23) INSTRUCTION -> ENCAP TK_semicolon .

    RW_break        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_continue     reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_return       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_create       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_use          reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_alter        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_drop         reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_insert       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_update       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_truncate     reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_delete       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_select       reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_declare      reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_set          reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_if           reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_case         reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_while        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_for          reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    TK_field        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_begin        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_print        reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    $end            reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_end          reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_else         reduce using rule 23 (INSTRUCTION -> ENCAP TK_semicolon .)


state 65

    (24) INSTRUCTION -> PRINT TK_semicolon .

    RW_break        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_continue     reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_return       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_create       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_use          reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_alter        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_drop         reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_insert       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_update       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_truncate     reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_delete       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_select       reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_declare      reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_set          reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_if           reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_case         reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_while        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_for          reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    TK_field        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_begin        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_print        reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    $end            reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_end          reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_else         reduce using rule 24 (INSTRUCTION -> PRINT TK_semicolon .)


state 66

    (25) INSTRUCTION -> RW_break TK_semicolon .

    RW_break        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_continue     reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_return       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_create       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_use          reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_alter        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_drop         reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_insert       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_update       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_truncate     reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_delete       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_select       reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_declare      reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_set          reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_if           reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_case         reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_while        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_for          reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    TK_field        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_begin        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_print        reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    $end            reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_end          reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_else         reduce using rule 25 (INSTRUCTION -> RW_break TK_semicolon .)


state 67

    (26) INSTRUCTION -> RW_continue TK_semicolon .

    RW_break        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_continue     reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_return       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_create       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_use          reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_alter        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_drop         reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_insert       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_update       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_truncate     reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_delete       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_select       reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_declare      reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_set          reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_if           reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_case         reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_while        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_for          reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    TK_field        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_begin        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_print        reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    $end            reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_end          reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_else         reduce using rule 26 (INSTRUCTION -> RW_continue TK_semicolon .)


state 68

    (27) INSTRUCTION -> RW_return EXP . TK_semicolon
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    shift and go to state 127
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 69

    (28) INSTRUCTION -> RW_return TK_semicolon .

    RW_break        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_continue     reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_return       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_create       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_use          reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_alter        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_drop         reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_insert       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_update       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_truncate     reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_delete       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_select       reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_declare      reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_set          reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_if           reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_case         reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_while        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_for          reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    TK_field        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_begin        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_print        reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    $end            reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_end          reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_else         reduce using rule 28 (INSTRUCTION -> RW_return TK_semicolon .)


state 70

    (116) EXP -> ARITHMETICS .

    TK_semicolon    reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_plus         reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_minus        reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_mult         reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_div          reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_mod          reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_equalequal   reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_equal        reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_notequal     reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_lessequal    reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_greatequal   reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_less         reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_great        reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_and          reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_or           reduce using rule 116 (EXP -> ARITHMETICS .)
    RW_as           reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_comma        reduce using rule 116 (EXP -> ARITHMETICS .)
    RW_from         reduce using rule 116 (EXP -> ARITHMETICS .)
    RW_then         reduce using rule 116 (EXP -> ARITHMETICS .)
    RW_begin        reduce using rule 116 (EXP -> ARITHMETICS .)
    RW_else         reduce using rule 116 (EXP -> ARITHMETICS .)
    RW_when         reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_rpar         reduce using rule 116 (EXP -> ARITHMETICS .)
    RW_end          reduce using rule 116 (EXP -> ARITHMETICS .)
    TK_dot          reduce using rule 116 (EXP -> ARITHMETICS .)
    RW_where        reduce using rule 116 (EXP -> ARITHMETICS .)


state 71

    (117) EXP -> RELATIONALS .

    TK_semicolon    reduce using rule 117 (EXP -> RELATIONALS .)
    TK_plus         reduce using rule 117 (EXP -> RELATIONALS .)
    TK_minus        reduce using rule 117 (EXP -> RELATIONALS .)
    TK_mult         reduce using rule 117 (EXP -> RELATIONALS .)
    TK_div          reduce using rule 117 (EXP -> RELATIONALS .)
    TK_mod          reduce using rule 117 (EXP -> RELATIONALS .)
    TK_equalequal   reduce using rule 117 (EXP -> RELATIONALS .)
    TK_equal        reduce using rule 117 (EXP -> RELATIONALS .)
    TK_notequal     reduce using rule 117 (EXP -> RELATIONALS .)
    TK_lessequal    reduce using rule 117 (EXP -> RELATIONALS .)
    TK_greatequal   reduce using rule 117 (EXP -> RELATIONALS .)
    TK_less         reduce using rule 117 (EXP -> RELATIONALS .)
    TK_great        reduce using rule 117 (EXP -> RELATIONALS .)
    TK_and          reduce using rule 117 (EXP -> RELATIONALS .)
    TK_or           reduce using rule 117 (EXP -> RELATIONALS .)
    RW_as           reduce using rule 117 (EXP -> RELATIONALS .)
    TK_comma        reduce using rule 117 (EXP -> RELATIONALS .)
    RW_from         reduce using rule 117 (EXP -> RELATIONALS .)
    RW_then         reduce using rule 117 (EXP -> RELATIONALS .)
    RW_begin        reduce using rule 117 (EXP -> RELATIONALS .)
    RW_else         reduce using rule 117 (EXP -> RELATIONALS .)
    RW_when         reduce using rule 117 (EXP -> RELATIONALS .)
    TK_rpar         reduce using rule 117 (EXP -> RELATIONALS .)
    RW_end          reduce using rule 117 (EXP -> RELATIONALS .)
    TK_dot          reduce using rule 117 (EXP -> RELATIONALS .)
    RW_where        reduce using rule 117 (EXP -> RELATIONALS .)


state 72

    (118) EXP -> LOGICS .

    TK_semicolon    reduce using rule 118 (EXP -> LOGICS .)
    TK_plus         reduce using rule 118 (EXP -> LOGICS .)
    TK_minus        reduce using rule 118 (EXP -> LOGICS .)
    TK_mult         reduce using rule 118 (EXP -> LOGICS .)
    TK_div          reduce using rule 118 (EXP -> LOGICS .)
    TK_mod          reduce using rule 118 (EXP -> LOGICS .)
    TK_equalequal   reduce using rule 118 (EXP -> LOGICS .)
    TK_equal        reduce using rule 118 (EXP -> LOGICS .)
    TK_notequal     reduce using rule 118 (EXP -> LOGICS .)
    TK_lessequal    reduce using rule 118 (EXP -> LOGICS .)
    TK_greatequal   reduce using rule 118 (EXP -> LOGICS .)
    TK_less         reduce using rule 118 (EXP -> LOGICS .)
    TK_great        reduce using rule 118 (EXP -> LOGICS .)
    TK_and          reduce using rule 118 (EXP -> LOGICS .)
    TK_or           reduce using rule 118 (EXP -> LOGICS .)
    RW_as           reduce using rule 118 (EXP -> LOGICS .)
    TK_comma        reduce using rule 118 (EXP -> LOGICS .)
    RW_from         reduce using rule 118 (EXP -> LOGICS .)
    RW_then         reduce using rule 118 (EXP -> LOGICS .)
    RW_begin        reduce using rule 118 (EXP -> LOGICS .)
    RW_else         reduce using rule 118 (EXP -> LOGICS .)
    RW_when         reduce using rule 118 (EXP -> LOGICS .)
    TK_rpar         reduce using rule 118 (EXP -> LOGICS .)
    RW_end          reduce using rule 118 (EXP -> LOGICS .)
    TK_dot          reduce using rule 118 (EXP -> LOGICS .)
    RW_where        reduce using rule 118 (EXP -> LOGICS .)


state 73

    (119) EXP -> CAST .

    TK_semicolon    reduce using rule 119 (EXP -> CAST .)
    TK_plus         reduce using rule 119 (EXP -> CAST .)
    TK_minus        reduce using rule 119 (EXP -> CAST .)
    TK_mult         reduce using rule 119 (EXP -> CAST .)
    TK_div          reduce using rule 119 (EXP -> CAST .)
    TK_mod          reduce using rule 119 (EXP -> CAST .)
    TK_equalequal   reduce using rule 119 (EXP -> CAST .)
    TK_equal        reduce using rule 119 (EXP -> CAST .)
    TK_notequal     reduce using rule 119 (EXP -> CAST .)
    TK_lessequal    reduce using rule 119 (EXP -> CAST .)
    TK_greatequal   reduce using rule 119 (EXP -> CAST .)
    TK_less         reduce using rule 119 (EXP -> CAST .)
    TK_great        reduce using rule 119 (EXP -> CAST .)
    TK_and          reduce using rule 119 (EXP -> CAST .)
    TK_or           reduce using rule 119 (EXP -> CAST .)
    RW_as           reduce using rule 119 (EXP -> CAST .)
    TK_comma        reduce using rule 119 (EXP -> CAST .)
    RW_from         reduce using rule 119 (EXP -> CAST .)
    RW_then         reduce using rule 119 (EXP -> CAST .)
    RW_begin        reduce using rule 119 (EXP -> CAST .)
    RW_else         reduce using rule 119 (EXP -> CAST .)
    RW_when         reduce using rule 119 (EXP -> CAST .)
    TK_rpar         reduce using rule 119 (EXP -> CAST .)
    RW_end          reduce using rule 119 (EXP -> CAST .)
    TK_dot          reduce using rule 119 (EXP -> CAST .)
    RW_where        reduce using rule 119 (EXP -> CAST .)


state 74

    (120) EXP -> NATIVEFUNC .

    TK_semicolon    reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_plus         reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_minus        reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_mult         reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_div          reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_mod          reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_equalequal   reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_equal        reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_notequal     reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_lessequal    reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_greatequal   reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_less         reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_great        reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_and          reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_or           reduce using rule 120 (EXP -> NATIVEFUNC .)
    RW_as           reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_comma        reduce using rule 120 (EXP -> NATIVEFUNC .)
    RW_from         reduce using rule 120 (EXP -> NATIVEFUNC .)
    RW_then         reduce using rule 120 (EXP -> NATIVEFUNC .)
    RW_begin        reduce using rule 120 (EXP -> NATIVEFUNC .)
    RW_else         reduce using rule 120 (EXP -> NATIVEFUNC .)
    RW_when         reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_rpar         reduce using rule 120 (EXP -> NATIVEFUNC .)
    RW_end          reduce using rule 120 (EXP -> NATIVEFUNC .)
    TK_dot          reduce using rule 120 (EXP -> NATIVEFUNC .)
    RW_where        reduce using rule 120 (EXP -> NATIVEFUNC .)


state 75

    (121) EXP -> CALLFUNC .

    TK_semicolon    reduce using rule 121 (EXP -> CALLFUNC .)
    TK_plus         reduce using rule 121 (EXP -> CALLFUNC .)
    TK_minus        reduce using rule 121 (EXP -> CALLFUNC .)
    TK_mult         reduce using rule 121 (EXP -> CALLFUNC .)
    TK_div          reduce using rule 121 (EXP -> CALLFUNC .)
    TK_mod          reduce using rule 121 (EXP -> CALLFUNC .)
    TK_equalequal   reduce using rule 121 (EXP -> CALLFUNC .)
    TK_equal        reduce using rule 121 (EXP -> CALLFUNC .)
    TK_notequal     reduce using rule 121 (EXP -> CALLFUNC .)
    TK_lessequal    reduce using rule 121 (EXP -> CALLFUNC .)
    TK_greatequal   reduce using rule 121 (EXP -> CALLFUNC .)
    TK_less         reduce using rule 121 (EXP -> CALLFUNC .)
    TK_great        reduce using rule 121 (EXP -> CALLFUNC .)
    TK_and          reduce using rule 121 (EXP -> CALLFUNC .)
    TK_or           reduce using rule 121 (EXP -> CALLFUNC .)
    RW_as           reduce using rule 121 (EXP -> CALLFUNC .)
    TK_comma        reduce using rule 121 (EXP -> CALLFUNC .)
    RW_from         reduce using rule 121 (EXP -> CALLFUNC .)
    RW_then         reduce using rule 121 (EXP -> CALLFUNC .)
    RW_begin        reduce using rule 121 (EXP -> CALLFUNC .)
    RW_else         reduce using rule 121 (EXP -> CALLFUNC .)
    RW_when         reduce using rule 121 (EXP -> CALLFUNC .)
    TK_rpar         reduce using rule 121 (EXP -> CALLFUNC .)
    RW_end          reduce using rule 121 (EXP -> CALLFUNC .)
    TK_dot          reduce using rule 121 (EXP -> CALLFUNC .)
    RW_where        reduce using rule 121 (EXP -> CALLFUNC .)


state 76

    (122) EXP -> TERNARY .

    TK_semicolon    reduce using rule 122 (EXP -> TERNARY .)
    TK_plus         reduce using rule 122 (EXP -> TERNARY .)
    TK_minus        reduce using rule 122 (EXP -> TERNARY .)
    TK_mult         reduce using rule 122 (EXP -> TERNARY .)
    TK_div          reduce using rule 122 (EXP -> TERNARY .)
    TK_mod          reduce using rule 122 (EXP -> TERNARY .)
    TK_equalequal   reduce using rule 122 (EXP -> TERNARY .)
    TK_equal        reduce using rule 122 (EXP -> TERNARY .)
    TK_notequal     reduce using rule 122 (EXP -> TERNARY .)
    TK_lessequal    reduce using rule 122 (EXP -> TERNARY .)
    TK_greatequal   reduce using rule 122 (EXP -> TERNARY .)
    TK_less         reduce using rule 122 (EXP -> TERNARY .)
    TK_great        reduce using rule 122 (EXP -> TERNARY .)
    TK_and          reduce using rule 122 (EXP -> TERNARY .)
    TK_or           reduce using rule 122 (EXP -> TERNARY .)
    RW_as           reduce using rule 122 (EXP -> TERNARY .)
    TK_comma        reduce using rule 122 (EXP -> TERNARY .)
    RW_from         reduce using rule 122 (EXP -> TERNARY .)
    RW_then         reduce using rule 122 (EXP -> TERNARY .)
    RW_begin        reduce using rule 122 (EXP -> TERNARY .)
    RW_else         reduce using rule 122 (EXP -> TERNARY .)
    RW_when         reduce using rule 122 (EXP -> TERNARY .)
    TK_rpar         reduce using rule 122 (EXP -> TERNARY .)
    RW_end          reduce using rule 122 (EXP -> TERNARY .)
    TK_dot          reduce using rule 122 (EXP -> TERNARY .)
    RW_where        reduce using rule 122 (EXP -> TERNARY .)


state 77

    (123) EXP -> TK_id .

    TK_semicolon    reduce using rule 123 (EXP -> TK_id .)
    TK_plus         reduce using rule 123 (EXP -> TK_id .)
    TK_minus        reduce using rule 123 (EXP -> TK_id .)
    TK_mult         reduce using rule 123 (EXP -> TK_id .)
    TK_div          reduce using rule 123 (EXP -> TK_id .)
    TK_mod          reduce using rule 123 (EXP -> TK_id .)
    TK_equalequal   reduce using rule 123 (EXP -> TK_id .)
    TK_equal        reduce using rule 123 (EXP -> TK_id .)
    TK_notequal     reduce using rule 123 (EXP -> TK_id .)
    TK_lessequal    reduce using rule 123 (EXP -> TK_id .)
    TK_greatequal   reduce using rule 123 (EXP -> TK_id .)
    TK_less         reduce using rule 123 (EXP -> TK_id .)
    TK_great        reduce using rule 123 (EXP -> TK_id .)
    TK_and          reduce using rule 123 (EXP -> TK_id .)
    TK_or           reduce using rule 123 (EXP -> TK_id .)
    RW_as           reduce using rule 123 (EXP -> TK_id .)
    TK_comma        reduce using rule 123 (EXP -> TK_id .)
    RW_from         reduce using rule 123 (EXP -> TK_id .)
    RW_then         reduce using rule 123 (EXP -> TK_id .)
    RW_begin        reduce using rule 123 (EXP -> TK_id .)
    RW_else         reduce using rule 123 (EXP -> TK_id .)
    RW_when         reduce using rule 123 (EXP -> TK_id .)
    TK_rpar         reduce using rule 123 (EXP -> TK_id .)
    RW_end          reduce using rule 123 (EXP -> TK_id .)
    TK_dot          reduce using rule 123 (EXP -> TK_id .)
    RW_where        reduce using rule 123 (EXP -> TK_id .)


state 78

    (124) EXP -> TK_field .
    (112) CALLFUNC -> TK_field . TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> TK_field . TK_lpar TK_rpar

    TK_semicolon    reduce using rule 124 (EXP -> TK_field .)
    TK_plus         reduce using rule 124 (EXP -> TK_field .)
    TK_minus        reduce using rule 124 (EXP -> TK_field .)
    TK_mult         reduce using rule 124 (EXP -> TK_field .)
    TK_div          reduce using rule 124 (EXP -> TK_field .)
    TK_mod          reduce using rule 124 (EXP -> TK_field .)
    TK_equalequal   reduce using rule 124 (EXP -> TK_field .)
    TK_equal        reduce using rule 124 (EXP -> TK_field .)
    TK_notequal     reduce using rule 124 (EXP -> TK_field .)
    TK_lessequal    reduce using rule 124 (EXP -> TK_field .)
    TK_greatequal   reduce using rule 124 (EXP -> TK_field .)
    TK_less         reduce using rule 124 (EXP -> TK_field .)
    TK_great        reduce using rule 124 (EXP -> TK_field .)
    TK_and          reduce using rule 124 (EXP -> TK_field .)
    TK_or           reduce using rule 124 (EXP -> TK_field .)
    RW_as           reduce using rule 124 (EXP -> TK_field .)
    TK_comma        reduce using rule 124 (EXP -> TK_field .)
    RW_from         reduce using rule 124 (EXP -> TK_field .)
    RW_then         reduce using rule 124 (EXP -> TK_field .)
    RW_begin        reduce using rule 124 (EXP -> TK_field .)
    RW_else         reduce using rule 124 (EXP -> TK_field .)
    RW_when         reduce using rule 124 (EXP -> TK_field .)
    TK_rpar         reduce using rule 124 (EXP -> TK_field .)
    RW_end          reduce using rule 124 (EXP -> TK_field .)
    TK_dot          reduce using rule 124 (EXP -> TK_field .)
    RW_where        reduce using rule 124 (EXP -> TK_field .)
    TK_lpar         shift and go to state 97


state 79

    (125) EXP -> TK_nvarchar .

    TK_semicolon    reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_plus         reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_minus        reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_mult         reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_div          reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_mod          reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_equalequal   reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_equal        reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_notequal     reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_lessequal    reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_greatequal   reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_less         reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_great        reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_and          reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_or           reduce using rule 125 (EXP -> TK_nvarchar .)
    RW_as           reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_comma        reduce using rule 125 (EXP -> TK_nvarchar .)
    RW_from         reduce using rule 125 (EXP -> TK_nvarchar .)
    RW_then         reduce using rule 125 (EXP -> TK_nvarchar .)
    RW_begin        reduce using rule 125 (EXP -> TK_nvarchar .)
    RW_else         reduce using rule 125 (EXP -> TK_nvarchar .)
    RW_when         reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_rpar         reduce using rule 125 (EXP -> TK_nvarchar .)
    RW_end          reduce using rule 125 (EXP -> TK_nvarchar .)
    TK_dot          reduce using rule 125 (EXP -> TK_nvarchar .)
    RW_where        reduce using rule 125 (EXP -> TK_nvarchar .)


state 80

    (126) EXP -> TK_int .

    TK_semicolon    reduce using rule 126 (EXP -> TK_int .)
    TK_plus         reduce using rule 126 (EXP -> TK_int .)
    TK_minus        reduce using rule 126 (EXP -> TK_int .)
    TK_mult         reduce using rule 126 (EXP -> TK_int .)
    TK_div          reduce using rule 126 (EXP -> TK_int .)
    TK_mod          reduce using rule 126 (EXP -> TK_int .)
    TK_equalequal   reduce using rule 126 (EXP -> TK_int .)
    TK_equal        reduce using rule 126 (EXP -> TK_int .)
    TK_notequal     reduce using rule 126 (EXP -> TK_int .)
    TK_lessequal    reduce using rule 126 (EXP -> TK_int .)
    TK_greatequal   reduce using rule 126 (EXP -> TK_int .)
    TK_less         reduce using rule 126 (EXP -> TK_int .)
    TK_great        reduce using rule 126 (EXP -> TK_int .)
    TK_and          reduce using rule 126 (EXP -> TK_int .)
    TK_or           reduce using rule 126 (EXP -> TK_int .)
    RW_as           reduce using rule 126 (EXP -> TK_int .)
    TK_comma        reduce using rule 126 (EXP -> TK_int .)
    RW_from         reduce using rule 126 (EXP -> TK_int .)
    RW_then         reduce using rule 126 (EXP -> TK_int .)
    RW_begin        reduce using rule 126 (EXP -> TK_int .)
    RW_else         reduce using rule 126 (EXP -> TK_int .)
    RW_when         reduce using rule 126 (EXP -> TK_int .)
    TK_rpar         reduce using rule 126 (EXP -> TK_int .)
    RW_end          reduce using rule 126 (EXP -> TK_int .)
    TK_dot          reduce using rule 126 (EXP -> TK_int .)
    RW_where        reduce using rule 126 (EXP -> TK_int .)


state 81

    (127) EXP -> TK_decimal .

    TK_semicolon    reduce using rule 127 (EXP -> TK_decimal .)
    TK_plus         reduce using rule 127 (EXP -> TK_decimal .)
    TK_minus        reduce using rule 127 (EXP -> TK_decimal .)
    TK_mult         reduce using rule 127 (EXP -> TK_decimal .)
    TK_div          reduce using rule 127 (EXP -> TK_decimal .)
    TK_mod          reduce using rule 127 (EXP -> TK_decimal .)
    TK_equalequal   reduce using rule 127 (EXP -> TK_decimal .)
    TK_equal        reduce using rule 127 (EXP -> TK_decimal .)
    TK_notequal     reduce using rule 127 (EXP -> TK_decimal .)
    TK_lessequal    reduce using rule 127 (EXP -> TK_decimal .)
    TK_greatequal   reduce using rule 127 (EXP -> TK_decimal .)
    TK_less         reduce using rule 127 (EXP -> TK_decimal .)
    TK_great        reduce using rule 127 (EXP -> TK_decimal .)
    TK_and          reduce using rule 127 (EXP -> TK_decimal .)
    TK_or           reduce using rule 127 (EXP -> TK_decimal .)
    RW_as           reduce using rule 127 (EXP -> TK_decimal .)
    TK_comma        reduce using rule 127 (EXP -> TK_decimal .)
    RW_from         reduce using rule 127 (EXP -> TK_decimal .)
    RW_then         reduce using rule 127 (EXP -> TK_decimal .)
    RW_begin        reduce using rule 127 (EXP -> TK_decimal .)
    RW_else         reduce using rule 127 (EXP -> TK_decimal .)
    RW_when         reduce using rule 127 (EXP -> TK_decimal .)
    TK_rpar         reduce using rule 127 (EXP -> TK_decimal .)
    RW_end          reduce using rule 127 (EXP -> TK_decimal .)
    TK_dot          reduce using rule 127 (EXP -> TK_decimal .)
    RW_where        reduce using rule 127 (EXP -> TK_decimal .)


state 82

    (128) EXP -> TK_date .

    TK_semicolon    reduce using rule 128 (EXP -> TK_date .)
    TK_plus         reduce using rule 128 (EXP -> TK_date .)
    TK_minus        reduce using rule 128 (EXP -> TK_date .)
    TK_mult         reduce using rule 128 (EXP -> TK_date .)
    TK_div          reduce using rule 128 (EXP -> TK_date .)
    TK_mod          reduce using rule 128 (EXP -> TK_date .)
    TK_equalequal   reduce using rule 128 (EXP -> TK_date .)
    TK_equal        reduce using rule 128 (EXP -> TK_date .)
    TK_notequal     reduce using rule 128 (EXP -> TK_date .)
    TK_lessequal    reduce using rule 128 (EXP -> TK_date .)
    TK_greatequal   reduce using rule 128 (EXP -> TK_date .)
    TK_less         reduce using rule 128 (EXP -> TK_date .)
    TK_great        reduce using rule 128 (EXP -> TK_date .)
    TK_and          reduce using rule 128 (EXP -> TK_date .)
    TK_or           reduce using rule 128 (EXP -> TK_date .)
    RW_as           reduce using rule 128 (EXP -> TK_date .)
    TK_comma        reduce using rule 128 (EXP -> TK_date .)
    RW_from         reduce using rule 128 (EXP -> TK_date .)
    RW_then         reduce using rule 128 (EXP -> TK_date .)
    RW_begin        reduce using rule 128 (EXP -> TK_date .)
    RW_else         reduce using rule 128 (EXP -> TK_date .)
    RW_when         reduce using rule 128 (EXP -> TK_date .)
    TK_rpar         reduce using rule 128 (EXP -> TK_date .)
    RW_end          reduce using rule 128 (EXP -> TK_date .)
    TK_dot          reduce using rule 128 (EXP -> TK_date .)
    RW_where        reduce using rule 128 (EXP -> TK_date .)


state 83

    (129) EXP -> TK_datetime .

    TK_semicolon    reduce using rule 129 (EXP -> TK_datetime .)
    TK_plus         reduce using rule 129 (EXP -> TK_datetime .)
    TK_minus        reduce using rule 129 (EXP -> TK_datetime .)
    TK_mult         reduce using rule 129 (EXP -> TK_datetime .)
    TK_div          reduce using rule 129 (EXP -> TK_datetime .)
    TK_mod          reduce using rule 129 (EXP -> TK_datetime .)
    TK_equalequal   reduce using rule 129 (EXP -> TK_datetime .)
    TK_equal        reduce using rule 129 (EXP -> TK_datetime .)
    TK_notequal     reduce using rule 129 (EXP -> TK_datetime .)
    TK_lessequal    reduce using rule 129 (EXP -> TK_datetime .)
    TK_greatequal   reduce using rule 129 (EXP -> TK_datetime .)
    TK_less         reduce using rule 129 (EXP -> TK_datetime .)
    TK_great        reduce using rule 129 (EXP -> TK_datetime .)
    TK_and          reduce using rule 129 (EXP -> TK_datetime .)
    TK_or           reduce using rule 129 (EXP -> TK_datetime .)
    RW_as           reduce using rule 129 (EXP -> TK_datetime .)
    TK_comma        reduce using rule 129 (EXP -> TK_datetime .)
    RW_from         reduce using rule 129 (EXP -> TK_datetime .)
    RW_then         reduce using rule 129 (EXP -> TK_datetime .)
    RW_begin        reduce using rule 129 (EXP -> TK_datetime .)
    RW_else         reduce using rule 129 (EXP -> TK_datetime .)
    RW_when         reduce using rule 129 (EXP -> TK_datetime .)
    TK_rpar         reduce using rule 129 (EXP -> TK_datetime .)
    RW_end          reduce using rule 129 (EXP -> TK_datetime .)
    TK_dot          reduce using rule 129 (EXP -> TK_datetime .)
    RW_where        reduce using rule 129 (EXP -> TK_datetime .)


state 84

    (130) EXP -> RW_null .

    TK_semicolon    reduce using rule 130 (EXP -> RW_null .)
    TK_plus         reduce using rule 130 (EXP -> RW_null .)
    TK_minus        reduce using rule 130 (EXP -> RW_null .)
    TK_mult         reduce using rule 130 (EXP -> RW_null .)
    TK_div          reduce using rule 130 (EXP -> RW_null .)
    TK_mod          reduce using rule 130 (EXP -> RW_null .)
    TK_equalequal   reduce using rule 130 (EXP -> RW_null .)
    TK_equal        reduce using rule 130 (EXP -> RW_null .)
    TK_notequal     reduce using rule 130 (EXP -> RW_null .)
    TK_lessequal    reduce using rule 130 (EXP -> RW_null .)
    TK_greatequal   reduce using rule 130 (EXP -> RW_null .)
    TK_less         reduce using rule 130 (EXP -> RW_null .)
    TK_great        reduce using rule 130 (EXP -> RW_null .)
    TK_and          reduce using rule 130 (EXP -> RW_null .)
    TK_or           reduce using rule 130 (EXP -> RW_null .)
    RW_as           reduce using rule 130 (EXP -> RW_null .)
    TK_comma        reduce using rule 130 (EXP -> RW_null .)
    RW_from         reduce using rule 130 (EXP -> RW_null .)
    RW_then         reduce using rule 130 (EXP -> RW_null .)
    RW_begin        reduce using rule 130 (EXP -> RW_null .)
    RW_else         reduce using rule 130 (EXP -> RW_null .)
    RW_when         reduce using rule 130 (EXP -> RW_null .)
    TK_rpar         reduce using rule 130 (EXP -> RW_null .)
    RW_end          reduce using rule 130 (EXP -> RW_null .)
    TK_dot          reduce using rule 130 (EXP -> RW_null .)
    RW_where        reduce using rule 130 (EXP -> RW_null .)


state 85

    (131) EXP -> TK_lpar . EXP TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 142
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 86

    (137) ARITHMETICS -> TK_minus . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 143
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 87

    (147) LOGICS -> TK_not . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 144
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 88

    (148) CAST -> RW_cast . TK_lpar EXP RW_as TYPE TK_rpar

    TK_lpar         shift and go to state 145


state 89

    (149) NATIVEFUNC -> RW_concatenar . TK_lpar EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 146


state 90

    (150) NATIVEFUNC -> RW_substraer . TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 147


state 91

    (151) NATIVEFUNC -> RW_hoy . TK_lpar TK_rpar

    TK_lpar         shift and go to state 148


state 92

    (152) TERNARY -> RW_if . TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 149


state 93

    (29) CREATEDB -> RW_create RW_data . RW_base TK_field

    RW_base         shift and go to state 150


state 94

    (47) CREATETABLE -> RW_create RW_table . TK_field TK_lpar ATTRIBUTES TK_rpar

    TK_field        shift and go to state 151


state 95

    (101) FUNCDEC -> RW_create RW_function . TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> RW_create RW_function . TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP

    TK_field        shift and go to state 152


state 96

    (103) FUNCDEC -> RW_create RW_procedure . TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> RW_create RW_procedure . TK_field RW_as ENCAP
    (105) FUNCDEC -> RW_create RW_procedure . TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> RW_create RW_procedure . TK_field ENCAP

    TK_field        shift and go to state 153


state 97

    (112) CALLFUNC -> TK_field TK_lpar . ARGS TK_rpar
    (113) CALLFUNC -> TK_field TK_lpar . TK_rpar
    (114) ARGS -> . ARGS TK_comma EXP
    (115) ARGS -> . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_rpar         shift and go to state 155
    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    ARGS                           shift and go to state 154
    EXP                            shift and go to state 156
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 98

    (30) USEDB -> RW_use TK_field .

    TK_semicolon    reduce using rule 30 (USEDB -> RW_use TK_field .)


state 99

    (65) ALTERTAB -> RW_alter RW_table . TK_field ACTION

    TK_field        shift and go to state 157


state 100

    (70) DROPTAB -> RW_drop RW_table . TK_field

    TK_field        shift and go to state 158


state 101

    (71) INSERTREG -> RW_insert RW_into . TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    TK_field        shift and go to state 159


state 102

    (76) UPDATETAB -> RW_update TK_field . RW_set VALUESTAB RW_where EXP

    RW_set          shift and go to state 160


state 103

    (36) ASIGNID -> RW_set TK_id . TK_equal EXP

    TK_equal        shift and go to state 161


state 104

    (80) TRUNCATETAB -> RW_truncate RW_table . TK_field

    TK_field        shift and go to state 162


state 105

    (81) DELETETAB -> RW_delete RW_from . TK_field RW_where EXP

    TK_field        shift and go to state 163


state 106

    (37) SELECT -> RW_select FIELDS . RW_from TK_field RW_where EXP
    (38) SELECT -> RW_select FIELDS . RW_from TK_field

    RW_from         shift and go to state 164


state 107

    (44) IDS -> EXP . RW_as TK_nvarchar
    (45) IDS -> EXP . RW_as TK_field
    (46) IDS -> EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    RW_as           shift and go to state 165
    TK_comma        reduce using rule 46 (IDS -> EXP .)
    TK_semicolon    reduce using rule 46 (IDS -> EXP .)
    RW_from         reduce using rule 46 (IDS -> EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 108

    (39) SELECT -> RW_select LIST_IDS .
    (40) FIELDS -> LIST_IDS .
    (42) LIST_IDS -> LIST_IDS . TK_comma IDS

    TK_semicolon    reduce using rule 39 (SELECT -> RW_select LIST_IDS .)
    RW_from         reduce using rule 40 (FIELDS -> LIST_IDS .)
    TK_comma        shift and go to state 166


state 109

    (41) FIELDS -> TK_mult .

    RW_from         reduce using rule 41 (FIELDS -> TK_mult .)


state 110

    (43) LIST_IDS -> IDS .

    TK_comma        reduce using rule 43 (LIST_IDS -> IDS .)
    TK_semicolon    reduce using rule 43 (LIST_IDS -> IDS .)
    RW_from         reduce using rule 43 (LIST_IDS -> IDS .)


state 111

    (31) DECLAREID -> RW_declare DECLIDS .
    (33) DECLIDS -> DECLIDS . TK_comma DECLID

    TK_semicolon    reduce using rule 31 (DECLAREID -> RW_declare DECLIDS .)
    TK_comma        shift and go to state 167


state 112

    (32) DECLAREID -> RW_declare TK_id . TYPE TK_equal EXP
    (35) DECLID -> TK_id . TYPE
    (153) TYPE -> . RW_int
    (154) TYPE -> . RW_bit
    (155) TYPE -> . RW_decimal
    (156) TYPE -> . RW_date
    (157) TYPE -> . RW_datetime
    (158) TYPE -> . RW_nchar
    (159) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 169
    RW_bit          shift and go to state 170
    RW_decimal      shift and go to state 171
    RW_date         shift and go to state 172
    RW_datetime     shift and go to state 173
    RW_nchar        shift and go to state 174
    RW_nvarchar     shift and go to state 175

    TYPE                           shift and go to state 168

state 113

    (34) DECLIDS -> DECLID .

    TK_comma        reduce using rule 34 (DECLIDS -> DECLID .)
    TK_semicolon    reduce using rule 34 (DECLIDS -> DECLID .)


state 114

    (82) IFSTRUCT -> RW_if EXP . RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> RW_if EXP . RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> RW_if EXP . RW_begin INSTRUCTIONS RW_end
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    RW_then         shift and go to state 176
    RW_begin        shift and go to state 177
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 115

    (110) ENCAP -> RW_begin INSTRUCTIONS . RW_end
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    RW_end          shift and go to state 178
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INSTRUCTION                    shift and go to state 45
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 116

    (111) ENCAP -> RW_begin RW_end .

    TK_semicolon    reduce using rule 111 (ENCAP -> RW_begin RW_end .)
    RW_loop         reduce using rule 111 (ENCAP -> RW_begin RW_end .)


state 117

    (85) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP
    (91) WHENELSE -> . WHENS ELSE
    (92) WHENELSE -> . WHENS
    (93) WHENELSE -> . ELSE
    (94) WHENS -> . WHENS WHEN
    (95) WHENS -> . WHEN
    (97) ELSE -> . RW_else RW_then EXP
    (96) WHEN -> . RW_when EXP RW_then EXP

    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141
    RW_else         shift and go to state 122
    RW_when         shift and go to state 123

    WHENELSE                       shift and go to state 179
    WHENS                          shift and go to state 119
    ELSE                           shift and go to state 120
    WHEN                           shift and go to state 121

state 118

    (88) CASESTRUCT_S -> RW_case WHENELSE . RW_end RW_as TK_field
    (89) CASESTRUCT_S -> RW_case WHENELSE . RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> RW_case WHENELSE . RW_end

    RW_end          shift and go to state 180


state 119

    (91) WHENELSE -> WHENS . ELSE
    (92) WHENELSE -> WHENS .
    (94) WHENS -> WHENS . WHEN
    (97) ELSE -> . RW_else RW_then EXP
    (96) WHEN -> . RW_when EXP RW_then EXP

    RW_end          reduce using rule 92 (WHENELSE -> WHENS .)
    RW_else         shift and go to state 122
    RW_when         shift and go to state 123

    ELSE                           shift and go to state 181
    WHEN                           shift and go to state 182

state 120

    (93) WHENELSE -> ELSE .

    RW_end          reduce using rule 93 (WHENELSE -> ELSE .)


state 121

    (95) WHENS -> WHEN .

    RW_else         reduce using rule 95 (WHENS -> WHEN .)
    RW_when         reduce using rule 95 (WHENS -> WHEN .)
    RW_end          reduce using rule 95 (WHENS -> WHEN .)


state 122

    (97) ELSE -> RW_else . RW_then EXP

    RW_then         shift and go to state 183


state 123

    (96) WHEN -> RW_when . EXP RW_then EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 184
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 124

    (99) WHILESTRUCT -> RW_while EXP . ENCAP
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end

    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141
    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 185

state 125

    (100) FORSTRUCT -> RW_for TK_id . RW_in EXP TK_dot EXP ENCAP RW_loop

    RW_in           shift and go to state 186


state 126

    (98) PRINT -> RW_print EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 98 (PRINT -> RW_print EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 127

    (27) INSTRUCTION -> RW_return EXP TK_semicolon .

    RW_break        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_continue     reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_return       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_create       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_use          reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_alter        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_drop         reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_insert       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_update       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_truncate     reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_delete       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_select       reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_declare      reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_set          reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_if           reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_case         reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_while        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_for          reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    TK_field        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_begin        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_print        reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    $end            reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_end          reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_else         reduce using rule 27 (INSTRUCTION -> RW_return EXP TK_semicolon .)


state 128

    (132) ARITHMETICS -> EXP TK_plus . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 187
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 129

    (133) ARITHMETICS -> EXP TK_minus . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 188
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 130

    (134) ARITHMETICS -> EXP TK_mult . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 189
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 131

    (135) ARITHMETICS -> EXP TK_div . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 190
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 132

    (136) ARITHMETICS -> EXP TK_mod . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 191
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 133

    (138) RELATIONALS -> EXP TK_equalequal . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 192
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 134

    (139) RELATIONALS -> EXP TK_equal . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 193
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 135

    (140) RELATIONALS -> EXP TK_notequal . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 194
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 136

    (141) RELATIONALS -> EXP TK_lessequal . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 195
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 137

    (142) RELATIONALS -> EXP TK_greatequal . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 196
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 138

    (143) RELATIONALS -> EXP TK_less . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 197
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 139

    (144) RELATIONALS -> EXP TK_great . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 198
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 140

    (145) LOGICS -> EXP TK_and . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 199
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 141

    (146) LOGICS -> EXP TK_or . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 200
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 142

    (131) EXP -> TK_lpar EXP . TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 201
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 143

    (137) ARITHMETICS -> TK_minus EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_plus         reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_minus        reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_mult         reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_div          reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_mod          reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_equalequal   reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_equal        reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_notequal     reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_lessequal    reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_greatequal   reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_less         reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_great        reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_and          reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_or           reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    RW_as           reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_comma        reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    RW_from         reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    RW_then         reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    RW_begin        reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    RW_else         reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    RW_when         reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_rpar         reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    RW_end          reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    TK_dot          reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)
    RW_where        reduce using rule 137 (ARITHMETICS -> TK_minus EXP .)

  ! TK_plus         [ shift and go to state 128 ]
  ! TK_minus        [ shift and go to state 129 ]
  ! TK_mult         [ shift and go to state 130 ]
  ! TK_div          [ shift and go to state 131 ]
  ! TK_mod          [ shift and go to state 132 ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 144

    (147) LOGICS -> TK_not EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 147 (LOGICS -> TK_not EXP .)
    TK_equal        reduce using rule 147 (LOGICS -> TK_not EXP .)
    TK_and          reduce using rule 147 (LOGICS -> TK_not EXP .)
    TK_or           reduce using rule 147 (LOGICS -> TK_not EXP .)
    RW_as           reduce using rule 147 (LOGICS -> TK_not EXP .)
    TK_comma        reduce using rule 147 (LOGICS -> TK_not EXP .)
    RW_from         reduce using rule 147 (LOGICS -> TK_not EXP .)
    RW_then         reduce using rule 147 (LOGICS -> TK_not EXP .)
    RW_begin        reduce using rule 147 (LOGICS -> TK_not EXP .)
    RW_else         reduce using rule 147 (LOGICS -> TK_not EXP .)
    RW_when         reduce using rule 147 (LOGICS -> TK_not EXP .)
    TK_rpar         reduce using rule 147 (LOGICS -> TK_not EXP .)
    RW_end          reduce using rule 147 (LOGICS -> TK_not EXP .)
    TK_dot          reduce using rule 147 (LOGICS -> TK_not EXP .)
    RW_where        reduce using rule 147 (LOGICS -> TK_not EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139

  ! TK_plus         [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_minus        [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_mult         [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_div          [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_mod          [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_equalequal   [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_notequal     [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_lessequal    [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_greatequal   [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_less         [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_great        [ reduce using rule 147 (LOGICS -> TK_not EXP .) ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 145

    (148) CAST -> RW_cast TK_lpar . EXP RW_as TYPE TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 202
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 146

    (149) NATIVEFUNC -> RW_concatenar TK_lpar . EXP TK_comma EXP TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 203
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 147

    (150) NATIVEFUNC -> RW_substraer TK_lpar . EXP TK_comma EXP TK_comma EXP TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 204
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 148

    (151) NATIVEFUNC -> RW_hoy TK_lpar . TK_rpar

    TK_rpar         shift and go to state 205


state 149

    (152) TERNARY -> RW_if TK_lpar . EXP TK_comma EXP TK_comma EXP TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 206
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 150

    (29) CREATEDB -> RW_create RW_data RW_base . TK_field

    TK_field        shift and go to state 207


state 151

    (47) CREATETABLE -> RW_create RW_table TK_field . TK_lpar ATTRIBUTES TK_rpar

    TK_lpar         shift and go to state 208


state 152

    (101) FUNCDEC -> RW_create RW_function TK_field . TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> RW_create RW_function TK_field . TK_lpar TK_rpar RW_returns TYPE ENCAP

    TK_lpar         shift and go to state 209


state 153

    (103) FUNCDEC -> RW_create RW_procedure TK_field . PARAMS RW_as ENCAP
    (104) FUNCDEC -> RW_create RW_procedure TK_field . RW_as ENCAP
    (105) FUNCDEC -> RW_create RW_procedure TK_field . TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> RW_create RW_procedure TK_field . ENCAP
    (107) PARAMS -> . PARAMS TK_comma PARAM
    (108) PARAMS -> . PARAM
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (109) PARAM -> . TK_id RW_as TYPE

    RW_as           shift and go to state 211
    TK_lpar         shift and go to state 213
    RW_begin        shift and go to state 40
    TK_id           shift and go to state 215

    PARAMS                         shift and go to state 210
    ENCAP                          shift and go to state 212
    PARAM                          shift and go to state 214

state 154

    (112) CALLFUNC -> TK_field TK_lpar ARGS . TK_rpar
    (114) ARGS -> ARGS . TK_comma EXP

    TK_rpar         shift and go to state 216
    TK_comma        shift and go to state 217


state 155

    (113) CALLFUNC -> TK_field TK_lpar TK_rpar .

    TK_semicolon    reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_plus         reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_minus        reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_mult         reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_div          reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_mod          reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_equalequal   reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_equal        reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_notequal     reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_lessequal    reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_greatequal   reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_less         reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_great        reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_and          reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_or           reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_as           reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_comma        reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_from         reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_then         reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_begin        reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_else         reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_when         reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_rpar         reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_end          reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_dot          reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_where        reduce using rule 113 (CALLFUNC -> TK_field TK_lpar TK_rpar .)


state 156

    (115) ARGS -> EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 115 (ARGS -> EXP .)
    TK_comma        reduce using rule 115 (ARGS -> EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 157

    (65) ALTERTAB -> RW_alter RW_table TK_field . ACTION
    (66) ACTION -> . RW_add TK_field TYPE
    (67) ACTION -> . RW_drop TK_field
    (68) ACTION -> . RW_rename RW_to TK_field
    (69) ACTION -> . RW_rename RW_column TK_field RW_to TK_field

    RW_add          shift and go to state 219
    RW_drop         shift and go to state 220
    RW_rename       shift and go to state 221

    ACTION                         shift and go to state 218

state 158

    (70) DROPTAB -> RW_drop RW_table TK_field .

    TK_semicolon    reduce using rule 70 (DROPTAB -> RW_drop RW_table TK_field .)


state 159

    (71) INSERTREG -> RW_insert RW_into TK_field . TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    TK_lpar         shift and go to state 222


state 160

    (76) UPDATETAB -> RW_update TK_field RW_set . VALUESTAB RW_where EXP
    (77) VALUESTAB -> . VALUESTAB TK_comma VALUETAB
    (78) VALUESTAB -> . VALUETAB
    (79) VALUETAB -> . TK_field TK_equal EXP

    TK_field        shift and go to state 223

    VALUESTAB                      shift and go to state 224
    VALUETAB                       shift and go to state 225

state 161

    (36) ASIGNID -> RW_set TK_id TK_equal . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 226
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 162

    (80) TRUNCATETAB -> RW_truncate RW_table TK_field .

    TK_semicolon    reduce using rule 80 (TRUNCATETAB -> RW_truncate RW_table TK_field .)


state 163

    (81) DELETETAB -> RW_delete RW_from TK_field . RW_where EXP

    RW_where        shift and go to state 227


state 164

    (37) SELECT -> RW_select FIELDS RW_from . TK_field RW_where EXP
    (38) SELECT -> RW_select FIELDS RW_from . TK_field

    TK_field        shift and go to state 228


state 165

    (44) IDS -> EXP RW_as . TK_nvarchar
    (45) IDS -> EXP RW_as . TK_field

    TK_nvarchar     shift and go to state 229
    TK_field        shift and go to state 230


state 166

    (42) LIST_IDS -> LIST_IDS TK_comma . IDS
    (44) IDS -> . EXP RW_as TK_nvarchar
    (45) IDS -> . EXP RW_as TK_field
    (46) IDS -> . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    IDS                            shift and go to state 231
    EXP                            shift and go to state 107
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 167

    (33) DECLIDS -> DECLIDS TK_comma . DECLID
    (35) DECLID -> . TK_id TYPE

    TK_id           shift and go to state 233

    DECLID                         shift and go to state 232

state 168

    (32) DECLAREID -> RW_declare TK_id TYPE . TK_equal EXP
    (35) DECLID -> TK_id TYPE .

    TK_equal        shift and go to state 234
    TK_comma        reduce using rule 35 (DECLID -> TK_id TYPE .)
    TK_semicolon    reduce using rule 35 (DECLID -> TK_id TYPE .)


state 169

    (153) TYPE -> RW_int .

    TK_equal        reduce using rule 153 (TYPE -> RW_int .)
    TK_comma        reduce using rule 153 (TYPE -> RW_int .)
    TK_semicolon    reduce using rule 153 (TYPE -> RW_int .)
    TK_rpar         reduce using rule 153 (TYPE -> RW_int .)
    TK_lpar         reduce using rule 153 (TYPE -> RW_int .)
    RW_not          reduce using rule 153 (TYPE -> RW_int .)
    RW_primary      reduce using rule 153 (TYPE -> RW_int .)
    RW_ref          reduce using rule 153 (TYPE -> RW_int .)
    RW_as           reduce using rule 153 (TYPE -> RW_int .)
    RW_begin        reduce using rule 153 (TYPE -> RW_int .)


state 170

    (154) TYPE -> RW_bit .

    TK_equal        reduce using rule 154 (TYPE -> RW_bit .)
    TK_comma        reduce using rule 154 (TYPE -> RW_bit .)
    TK_semicolon    reduce using rule 154 (TYPE -> RW_bit .)
    TK_rpar         reduce using rule 154 (TYPE -> RW_bit .)
    TK_lpar         reduce using rule 154 (TYPE -> RW_bit .)
    RW_not          reduce using rule 154 (TYPE -> RW_bit .)
    RW_primary      reduce using rule 154 (TYPE -> RW_bit .)
    RW_ref          reduce using rule 154 (TYPE -> RW_bit .)
    RW_as           reduce using rule 154 (TYPE -> RW_bit .)
    RW_begin        reduce using rule 154 (TYPE -> RW_bit .)


state 171

    (155) TYPE -> RW_decimal .

    TK_equal        reduce using rule 155 (TYPE -> RW_decimal .)
    TK_comma        reduce using rule 155 (TYPE -> RW_decimal .)
    TK_semicolon    reduce using rule 155 (TYPE -> RW_decimal .)
    TK_rpar         reduce using rule 155 (TYPE -> RW_decimal .)
    TK_lpar         reduce using rule 155 (TYPE -> RW_decimal .)
    RW_not          reduce using rule 155 (TYPE -> RW_decimal .)
    RW_primary      reduce using rule 155 (TYPE -> RW_decimal .)
    RW_ref          reduce using rule 155 (TYPE -> RW_decimal .)
    RW_as           reduce using rule 155 (TYPE -> RW_decimal .)
    RW_begin        reduce using rule 155 (TYPE -> RW_decimal .)


state 172

    (156) TYPE -> RW_date .

    TK_equal        reduce using rule 156 (TYPE -> RW_date .)
    TK_comma        reduce using rule 156 (TYPE -> RW_date .)
    TK_semicolon    reduce using rule 156 (TYPE -> RW_date .)
    TK_rpar         reduce using rule 156 (TYPE -> RW_date .)
    TK_lpar         reduce using rule 156 (TYPE -> RW_date .)
    RW_not          reduce using rule 156 (TYPE -> RW_date .)
    RW_primary      reduce using rule 156 (TYPE -> RW_date .)
    RW_ref          reduce using rule 156 (TYPE -> RW_date .)
    RW_as           reduce using rule 156 (TYPE -> RW_date .)
    RW_begin        reduce using rule 156 (TYPE -> RW_date .)


state 173

    (157) TYPE -> RW_datetime .

    TK_equal        reduce using rule 157 (TYPE -> RW_datetime .)
    TK_comma        reduce using rule 157 (TYPE -> RW_datetime .)
    TK_semicolon    reduce using rule 157 (TYPE -> RW_datetime .)
    TK_rpar         reduce using rule 157 (TYPE -> RW_datetime .)
    TK_lpar         reduce using rule 157 (TYPE -> RW_datetime .)
    RW_not          reduce using rule 157 (TYPE -> RW_datetime .)
    RW_primary      reduce using rule 157 (TYPE -> RW_datetime .)
    RW_ref          reduce using rule 157 (TYPE -> RW_datetime .)
    RW_as           reduce using rule 157 (TYPE -> RW_datetime .)
    RW_begin        reduce using rule 157 (TYPE -> RW_datetime .)


state 174

    (158) TYPE -> RW_nchar .

    TK_equal        reduce using rule 158 (TYPE -> RW_nchar .)
    TK_comma        reduce using rule 158 (TYPE -> RW_nchar .)
    TK_semicolon    reduce using rule 158 (TYPE -> RW_nchar .)
    TK_rpar         reduce using rule 158 (TYPE -> RW_nchar .)
    TK_lpar         reduce using rule 158 (TYPE -> RW_nchar .)
    RW_not          reduce using rule 158 (TYPE -> RW_nchar .)
    RW_primary      reduce using rule 158 (TYPE -> RW_nchar .)
    RW_ref          reduce using rule 158 (TYPE -> RW_nchar .)
    RW_as           reduce using rule 158 (TYPE -> RW_nchar .)
    RW_begin        reduce using rule 158 (TYPE -> RW_nchar .)


state 175

    (159) TYPE -> RW_nvarchar .

    TK_equal        reduce using rule 159 (TYPE -> RW_nvarchar .)
    TK_comma        reduce using rule 159 (TYPE -> RW_nvarchar .)
    TK_semicolon    reduce using rule 159 (TYPE -> RW_nvarchar .)
    TK_rpar         reduce using rule 159 (TYPE -> RW_nvarchar .)
    TK_lpar         reduce using rule 159 (TYPE -> RW_nvarchar .)
    RW_not          reduce using rule 159 (TYPE -> RW_nvarchar .)
    RW_primary      reduce using rule 159 (TYPE -> RW_nvarchar .)
    RW_ref          reduce using rule 159 (TYPE -> RW_nvarchar .)
    RW_as           reduce using rule 159 (TYPE -> RW_nvarchar .)
    RW_begin        reduce using rule 159 (TYPE -> RW_nvarchar .)


state 176

    (82) IFSTRUCT -> RW_if EXP RW_then . INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> RW_if EXP RW_then . INSTRUCTIONS RW_end RW_if
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INSTRUCTIONS                   shift and go to state 235
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 177

    (84) IFSTRUCT -> RW_if EXP RW_begin . INSTRUCTIONS RW_end
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INSTRUCTIONS                   shift and go to state 236
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 178

    (110) ENCAP -> RW_begin INSTRUCTIONS RW_end .

    TK_semicolon    reduce using rule 110 (ENCAP -> RW_begin INSTRUCTIONS RW_end .)
    RW_loop         reduce using rule 110 (ENCAP -> RW_begin INSTRUCTIONS RW_end .)


state 179

    (85) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end RW_as TK_field
    (86) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end

    RW_end          shift and go to state 237


state 180

    (88) CASESTRUCT_S -> RW_case WHENELSE RW_end . RW_as TK_field
    (89) CASESTRUCT_S -> RW_case WHENELSE RW_end . RW_as TK_nvarchar
    (90) CASESTRUCT_S -> RW_case WHENELSE RW_end .

    RW_as           shift and go to state 238
    TK_semicolon    reduce using rule 90 (CASESTRUCT_S -> RW_case WHENELSE RW_end .)


state 181

    (91) WHENELSE -> WHENS ELSE .

    RW_end          reduce using rule 91 (WHENELSE -> WHENS ELSE .)


state 182

    (94) WHENS -> WHENS WHEN .

    RW_else         reduce using rule 94 (WHENS -> WHENS WHEN .)
    RW_when         reduce using rule 94 (WHENS -> WHENS WHEN .)
    RW_end          reduce using rule 94 (WHENS -> WHENS WHEN .)


state 183

    (97) ELSE -> RW_else RW_then . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 239
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 184

    (96) WHEN -> RW_when EXP . RW_then EXP
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    RW_then         shift and go to state 240
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 185

    (99) WHILESTRUCT -> RW_while EXP ENCAP .

    TK_semicolon    reduce using rule 99 (WHILESTRUCT -> RW_while EXP ENCAP .)


state 186

    (100) FORSTRUCT -> RW_for TK_id RW_in . EXP TK_dot EXP ENCAP RW_loop
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 241
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 187

    (132) ARITHMETICS -> EXP TK_plus EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_plus         reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_minus        reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_equalequal   reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_equal        reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_notequal     reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_lessequal    reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_greatequal   reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_less         reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_great        reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_and          reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_or           reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_as           reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_comma        reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_from         reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_then         reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_begin        reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_else         reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_when         reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_rpar         reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_end          reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_dot          reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_where        reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132

  ! TK_mult         [ reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_div          [ reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_mod          [ reduce using rule 132 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_plus         [ shift and go to state 128 ]
  ! TK_minus        [ shift and go to state 129 ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 188

    (133) ARITHMETICS -> EXP TK_minus EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_plus         reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_minus        reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_equalequal   reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_equal        reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_notequal     reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_lessequal    reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_greatequal   reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_less         reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_great        reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_and          reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_or           reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_as           reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_comma        reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_from         reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_then         reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_begin        reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_else         reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_when         reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_rpar         reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_end          reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_dot          reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_where        reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132

  ! TK_mult         [ reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_div          [ reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_mod          [ reduce using rule 133 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_plus         [ shift and go to state 128 ]
  ! TK_minus        [ shift and go to state 129 ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 189

    (134) ARITHMETICS -> EXP TK_mult EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_plus         reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_minus        reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_mult         reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_div          reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_mod          reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_equalequal   reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_equal        reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_notequal     reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_lessequal    reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_greatequal   reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_less         reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_great        reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_and          reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_or           reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_as           reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_comma        reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_from         reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_then         reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_begin        reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_else         reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_when         reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_rpar         reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_end          reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_dot          reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_where        reduce using rule 134 (ARITHMETICS -> EXP TK_mult EXP .)

  ! TK_plus         [ shift and go to state 128 ]
  ! TK_minus        [ shift and go to state 129 ]
  ! TK_mult         [ shift and go to state 130 ]
  ! TK_div          [ shift and go to state 131 ]
  ! TK_mod          [ shift and go to state 132 ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 190

    (135) ARITHMETICS -> EXP TK_div EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_plus         reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_minus        reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_mult         reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_div          reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_mod          reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_equalequal   reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_equal        reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_notequal     reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_lessequal    reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_greatequal   reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_less         reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_great        reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_and          reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_or           reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    RW_as           reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_comma        reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    RW_from         reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    RW_then         reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    RW_begin        reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    RW_else         reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    RW_when         reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_rpar         reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    RW_end          reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    TK_dot          reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)
    RW_where        reduce using rule 135 (ARITHMETICS -> EXP TK_div EXP .)

  ! TK_plus         [ shift and go to state 128 ]
  ! TK_minus        [ shift and go to state 129 ]
  ! TK_mult         [ shift and go to state 130 ]
  ! TK_div          [ shift and go to state 131 ]
  ! TK_mod          [ shift and go to state 132 ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 191

    (136) ARITHMETICS -> EXP TK_mod EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_plus         reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_minus        reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_mult         reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_div          reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_mod          reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_equalequal   reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_equal        reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_notequal     reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_lessequal    reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_greatequal   reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_less         reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_great        reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_and          reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_or           reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_as           reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_comma        reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_from         reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_then         reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_begin        reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_else         reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_when         reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_rpar         reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_end          reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_dot          reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_where        reduce using rule 136 (ARITHMETICS -> EXP TK_mod EXP .)

  ! TK_plus         [ shift and go to state 128 ]
  ! TK_minus        [ shift and go to state 129 ]
  ! TK_mult         [ shift and go to state 130 ]
  ! TK_div          [ shift and go to state 131 ]
  ! TK_mod          [ shift and go to state 132 ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 192

    (138) RELATIONALS -> EXP TK_equalequal EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_equalequal   reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_equal        reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_notequal     reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_and          reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_or           reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_as           reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_comma        reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_from         reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_then         reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_begin        reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_else         reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_when         reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_rpar         reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_end          reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_dot          reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_where        reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139

  ! TK_plus         [ reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_minus        [ reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_mult         [ reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_div          [ reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_mod          [ reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_lessequal    [ reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_greatequal   [ reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_less         [ reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_great        [ reduce using rule 138 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 193

    (139) RELATIONALS -> EXP TK_equal EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

  ! shift/reduce conflict for TK_plus resolved as shift
  ! shift/reduce conflict for TK_minus resolved as shift
  ! shift/reduce conflict for TK_mult resolved as shift
  ! shift/reduce conflict for TK_div resolved as shift
  ! shift/reduce conflict for TK_mod resolved as shift
  ! shift/reduce conflict for TK_equalequal resolved as shift
  ! shift/reduce conflict for TK_equal resolved as shift
  ! shift/reduce conflict for TK_notequal resolved as shift
  ! shift/reduce conflict for TK_lessequal resolved as shift
  ! shift/reduce conflict for TK_greatequal resolved as shift
  ! shift/reduce conflict for TK_less resolved as shift
  ! shift/reduce conflict for TK_great resolved as shift
  ! shift/reduce conflict for TK_and resolved as shift
  ! shift/reduce conflict for TK_or resolved as shift
    TK_semicolon    reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    RW_as           reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    TK_comma        reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    RW_from         reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    RW_then         reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    RW_begin        reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    RW_else         reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    RW_when         reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    TK_rpar         reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    RW_end          reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    TK_dot          reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    RW_where        reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141

  ! TK_plus         [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_minus        [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_mult         [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_div          [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_mod          [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_equalequal   [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_equal        [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_notequal     [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_lessequal    [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_greatequal   [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_less         [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_great        [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_and          [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_or           [ reduce using rule 139 (RELATIONALS -> EXP TK_equal EXP .) ]


state 194

    (140) RELATIONALS -> EXP TK_notequal EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_equalequal   reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_equal        reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_notequal     reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_and          reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_or           reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_as           reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_comma        reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_from         reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_then         reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_begin        reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_else         reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_when         reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_rpar         reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_end          reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_dot          reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_where        reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139

  ! TK_plus         [ reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_minus        [ reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_mult         [ reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_div          [ reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_mod          [ reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_lessequal    [ reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_greatequal   [ reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_less         [ reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_great        [ reduce using rule 140 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 195

    (141) RELATIONALS -> EXP TK_lessequal EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_equalequal   reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_equal        reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_notequal     reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_lessequal    reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_greatequal   reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_less         reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_great        reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_and          reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_or           reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_as           reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_comma        reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_from         reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_then         reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_begin        reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_else         reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_when         reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_rpar         reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_end          reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_dot          reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_where        reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132

  ! TK_plus         [ reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_minus        [ reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_mult         [ reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_div          [ reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_mod          [ reduce using rule 141 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 196

    (142) RELATIONALS -> EXP TK_greatequal EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_equalequal   reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_equal        reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_notequal     reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_lessequal    reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_greatequal   reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_less         reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_great        reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_and          reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_or           reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_as           reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_comma        reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_from         reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_then         reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_begin        reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_else         reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_when         reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_rpar         reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_end          reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_dot          reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_where        reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132

  ! TK_plus         [ reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_minus        [ reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_mult         [ reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_div          [ reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_mod          [ reduce using rule 142 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 197

    (143) RELATIONALS -> EXP TK_less EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_equalequal   reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_equal        reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_notequal     reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_lessequal    reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_greatequal   reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_less         reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_great        reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_and          reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_or           reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    RW_as           reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_comma        reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    RW_from         reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    RW_then         reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    RW_begin        reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    RW_else         reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    RW_when         reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_rpar         reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    RW_end          reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_dot          reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    RW_where        reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132

  ! TK_plus         [ reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_minus        [ reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_mult         [ reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_div          [ reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_mod          [ reduce using rule 143 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 198

    (144) RELATIONALS -> EXP TK_great EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_equalequal   reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_equal        reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_notequal     reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_lessequal    reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_greatequal   reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_less         reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_great        reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_and          reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_or           reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    RW_as           reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_comma        reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    RW_from         reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    RW_then         reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    RW_begin        reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    RW_else         reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    RW_when         reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_rpar         reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    RW_end          reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_dot          reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    RW_where        reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132

  ! TK_plus         [ reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_minus        [ reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_mult         [ reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_div          [ reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_mod          [ reduce using rule 144 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_equalequal   [ shift and go to state 133 ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_notequal     [ shift and go to state 135 ]
  ! TK_lessequal    [ shift and go to state 136 ]
  ! TK_greatequal   [ shift and go to state 137 ]
  ! TK_less         [ shift and go to state 138 ]
  ! TK_great        [ shift and go to state 139 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 199

    (145) LOGICS -> EXP TK_and EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    TK_equal        reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    TK_and          reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    TK_or           reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    RW_as           reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    TK_comma        reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    RW_from         reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    RW_then         reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    RW_begin        reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    RW_else         reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    RW_when         reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    TK_rpar         reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    RW_end          reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    TK_dot          reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    RW_where        reduce using rule 145 (LOGICS -> EXP TK_and EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139

  ! TK_plus         [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_minus        [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_mult         [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_div          [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_mod          [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_equalequal   [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_notequal     [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_lessequal    [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_greatequal   [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_less         [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_great        [ reduce using rule 145 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_and          [ shift and go to state 140 ]
  ! TK_or           [ shift and go to state 141 ]


state 200

    (146) LOGICS -> EXP TK_or EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    TK_equal        reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    TK_or           reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    RW_as           reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    TK_comma        reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    RW_from         reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    RW_then         reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    RW_begin        reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    RW_else         reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    RW_when         reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    TK_rpar         reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    RW_end          reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    TK_dot          reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    RW_where        reduce using rule 146 (LOGICS -> EXP TK_or EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140

  ! TK_plus         [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_minus        [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_mult         [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_div          [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_mod          [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_equalequal   [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_notequal     [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_lessequal    [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_greatequal   [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_less         [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_great        [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_and          [ reduce using rule 146 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_equal        [ shift and go to state 134 ]
  ! TK_or           [ shift and go to state 141 ]


state 201

    (131) EXP -> TK_lpar EXP TK_rpar .

    TK_semicolon    reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_plus         reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_minus        reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_mult         reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_div          reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_mod          reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_equalequal   reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_equal        reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_notequal     reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_lessequal    reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_greatequal   reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_less         reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_great        reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_and          reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_or           reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    RW_as           reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_comma        reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    RW_from         reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    RW_then         reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    RW_begin        reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    RW_else         reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    RW_when         reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_rpar         reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    RW_end          reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    TK_dot          reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)
    RW_where        reduce using rule 131 (EXP -> TK_lpar EXP TK_rpar .)


state 202

    (148) CAST -> RW_cast TK_lpar EXP . RW_as TYPE TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    RW_as           shift and go to state 242
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 203

    (149) NATIVEFUNC -> RW_concatenar TK_lpar EXP . TK_comma EXP TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 243
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 204

    (150) NATIVEFUNC -> RW_substraer TK_lpar EXP . TK_comma EXP TK_comma EXP TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 244
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 205

    (151) NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .

    TK_semicolon    reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_plus         reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_minus        reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_mult         reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_div          reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_mod          reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_equalequal   reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_equal        reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_notequal     reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_lessequal    reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_greatequal   reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_less         reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_great        reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_and          reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_or           reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_as           reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_comma        reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_from         reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_then         reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_begin        reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_else         reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_when         reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_rpar         reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_end          reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_dot          reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_where        reduce using rule 151 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)


state 206

    (152) TERNARY -> RW_if TK_lpar EXP . TK_comma EXP TK_comma EXP TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 245
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 207

    (29) CREATEDB -> RW_create RW_data RW_base TK_field .

    TK_semicolon    reduce using rule 29 (CREATEDB -> RW_create RW_data RW_base TK_field .)


state 208

    (47) CREATETABLE -> RW_create RW_table TK_field TK_lpar . ATTRIBUTES TK_rpar
    (48) ATTRIBUTES -> . ATTRIBUTES TK_comma ATTRIBUTE
    (49) ATTRIBUTES -> . ATTRIBUTE
    (50) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar PROPS
    (51) ATTRIBUTE -> . TK_field TYPE PROPS
    (52) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar
    (53) ATTRIBUTE -> . TK_field TYPE
    (54) ATTRIBUTE -> . RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 246
    RW_foreing      shift and go to state 249

    ATTRIBUTES                     shift and go to state 247
    ATTRIBUTE                      shift and go to state 248

state 209

    (101) FUNCDEC -> RW_create RW_function TK_field TK_lpar . PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> RW_create RW_function TK_field TK_lpar . TK_rpar RW_returns TYPE ENCAP
    (107) PARAMS -> . PARAMS TK_comma PARAM
    (108) PARAMS -> . PARAM
    (109) PARAM -> . TK_id RW_as TYPE

    TK_rpar         shift and go to state 251
    TK_id           shift and go to state 215

    PARAMS                         shift and go to state 250
    PARAM                          shift and go to state 214

state 210

    (103) FUNCDEC -> RW_create RW_procedure TK_field PARAMS . RW_as ENCAP
    (107) PARAMS -> PARAMS . TK_comma PARAM

    RW_as           shift and go to state 252
    TK_comma        shift and go to state 253


state 211

    (104) FUNCDEC -> RW_create RW_procedure TK_field RW_as . ENCAP
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 254

state 212

    (106) FUNCDEC -> RW_create RW_procedure TK_field ENCAP .

    TK_semicolon    reduce using rule 106 (FUNCDEC -> RW_create RW_procedure TK_field ENCAP .)


state 213

    (105) FUNCDEC -> RW_create RW_procedure TK_field TK_lpar . PARAMS TK_rpar ENCAP
    (107) PARAMS -> . PARAMS TK_comma PARAM
    (108) PARAMS -> . PARAM
    (109) PARAM -> . TK_id RW_as TYPE

    TK_id           shift and go to state 215

    PARAMS                         shift and go to state 255
    PARAM                          shift and go to state 214

state 214

    (108) PARAMS -> PARAM .

    RW_as           reduce using rule 108 (PARAMS -> PARAM .)
    TK_comma        reduce using rule 108 (PARAMS -> PARAM .)
    TK_rpar         reduce using rule 108 (PARAMS -> PARAM .)


state 215

    (109) PARAM -> TK_id . RW_as TYPE

    RW_as           shift and go to state 256


state 216

    (112) CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .

    TK_semicolon    reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_plus         reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_minus        reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_mult         reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_div          reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_mod          reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_equalequal   reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_equal        reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_notequal     reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_lessequal    reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_greatequal   reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_less         reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_great        reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_and          reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_or           reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_as           reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_comma        reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_from         reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_then         reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_begin        reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_else         reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_when         reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_rpar         reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_end          reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_dot          reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_where        reduce using rule 112 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)


state 217

    (114) ARGS -> ARGS TK_comma . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 257
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 218

    (65) ALTERTAB -> RW_alter RW_table TK_field ACTION .

    TK_semicolon    reduce using rule 65 (ALTERTAB -> RW_alter RW_table TK_field ACTION .)


state 219

    (66) ACTION -> RW_add . TK_field TYPE

    TK_field        shift and go to state 258


state 220

    (67) ACTION -> RW_drop . TK_field

    TK_field        shift and go to state 259


state 221

    (68) ACTION -> RW_rename . RW_to TK_field
    (69) ACTION -> RW_rename . RW_column TK_field RW_to TK_field

    RW_to           shift and go to state 260
    RW_column       shift and go to state 261


state 222

    (71) INSERTREG -> RW_insert RW_into TK_field TK_lpar . LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (72) LIST_ATTRIBS -> . LIST_ATTRIBS TK_comma TK_field
    (73) LIST_ATTRIBS -> . TK_field

    TK_field        shift and go to state 262

    LIST_ATTRIBS                   shift and go to state 263

state 223

    (79) VALUETAB -> TK_field . TK_equal EXP

    TK_equal        shift and go to state 264


state 224

    (76) UPDATETAB -> RW_update TK_field RW_set VALUESTAB . RW_where EXP
    (77) VALUESTAB -> VALUESTAB . TK_comma VALUETAB

    RW_where        shift and go to state 265
    TK_comma        shift and go to state 266


state 225

    (78) VALUESTAB -> VALUETAB .

    RW_where        reduce using rule 78 (VALUESTAB -> VALUETAB .)
    TK_comma        reduce using rule 78 (VALUESTAB -> VALUETAB .)


state 226

    (36) ASIGNID -> RW_set TK_id TK_equal EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 36 (ASIGNID -> RW_set TK_id TK_equal EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 227

    (81) DELETETAB -> RW_delete RW_from TK_field RW_where . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 267
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 228

    (37) SELECT -> RW_select FIELDS RW_from TK_field . RW_where EXP
    (38) SELECT -> RW_select FIELDS RW_from TK_field .

    RW_where        shift and go to state 268
    TK_semicolon    reduce using rule 38 (SELECT -> RW_select FIELDS RW_from TK_field .)


state 229

    (44) IDS -> EXP RW_as TK_nvarchar .

    TK_comma        reduce using rule 44 (IDS -> EXP RW_as TK_nvarchar .)
    TK_semicolon    reduce using rule 44 (IDS -> EXP RW_as TK_nvarchar .)
    RW_from         reduce using rule 44 (IDS -> EXP RW_as TK_nvarchar .)


state 230

    (45) IDS -> EXP RW_as TK_field .

    TK_comma        reduce using rule 45 (IDS -> EXP RW_as TK_field .)
    TK_semicolon    reduce using rule 45 (IDS -> EXP RW_as TK_field .)
    RW_from         reduce using rule 45 (IDS -> EXP RW_as TK_field .)


state 231

    (42) LIST_IDS -> LIST_IDS TK_comma IDS .

    TK_comma        reduce using rule 42 (LIST_IDS -> LIST_IDS TK_comma IDS .)
    TK_semicolon    reduce using rule 42 (LIST_IDS -> LIST_IDS TK_comma IDS .)
    RW_from         reduce using rule 42 (LIST_IDS -> LIST_IDS TK_comma IDS .)


state 232

    (33) DECLIDS -> DECLIDS TK_comma DECLID .

    TK_comma        reduce using rule 33 (DECLIDS -> DECLIDS TK_comma DECLID .)
    TK_semicolon    reduce using rule 33 (DECLIDS -> DECLIDS TK_comma DECLID .)


state 233

    (35) DECLID -> TK_id . TYPE
    (153) TYPE -> . RW_int
    (154) TYPE -> . RW_bit
    (155) TYPE -> . RW_decimal
    (156) TYPE -> . RW_date
    (157) TYPE -> . RW_datetime
    (158) TYPE -> . RW_nchar
    (159) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 169
    RW_bit          shift and go to state 170
    RW_decimal      shift and go to state 171
    RW_date         shift and go to state 172
    RW_datetime     shift and go to state 173
    RW_nchar        shift and go to state 174
    RW_nvarchar     shift and go to state 175

    TYPE                           shift and go to state 269

state 234

    (32) DECLAREID -> RW_declare TK_id TYPE TK_equal . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 270
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 235

    (82) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS . RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS . RW_end RW_if
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    RW_else         shift and go to state 271
    RW_end          shift and go to state 272
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INSTRUCTION                    shift and go to state 45
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 236

    (84) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS . RW_end
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    RW_end          shift and go to state 273
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INSTRUCTION                    shift and go to state 45
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 237

    (85) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end . RW_as TK_field
    (86) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end . RW_as TK_nvarchar
    (87) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end .

    RW_as           shift and go to state 274
    TK_semicolon    reduce using rule 87 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end .)


state 238

    (88) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as . TK_field
    (89) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as . TK_nvarchar

    TK_field        shift and go to state 275
    TK_nvarchar     shift and go to state 276


state 239

    (97) ELSE -> RW_else RW_then EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    RW_end          reduce using rule 97 (ELSE -> RW_else RW_then EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 240

    (96) WHEN -> RW_when EXP RW_then . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 277
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 241

    (100) FORSTRUCT -> RW_for TK_id RW_in EXP . TK_dot EXP ENCAP RW_loop
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_dot          shift and go to state 278
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 242

    (148) CAST -> RW_cast TK_lpar EXP RW_as . TYPE TK_rpar
    (153) TYPE -> . RW_int
    (154) TYPE -> . RW_bit
    (155) TYPE -> . RW_decimal
    (156) TYPE -> . RW_date
    (157) TYPE -> . RW_datetime
    (158) TYPE -> . RW_nchar
    (159) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 169
    RW_bit          shift and go to state 170
    RW_decimal      shift and go to state 171
    RW_date         shift and go to state 172
    RW_datetime     shift and go to state 173
    RW_nchar        shift and go to state 174
    RW_nvarchar     shift and go to state 175

    TYPE                           shift and go to state 279

state 243

    (149) NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma . EXP TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 280
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 244

    (150) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma . EXP TK_comma EXP TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 281
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 245

    (152) TERNARY -> RW_if TK_lpar EXP TK_comma . EXP TK_comma EXP TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 282
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 246

    (50) ATTRIBUTE -> TK_field . TYPE TK_lpar TK_int TK_rpar PROPS
    (51) ATTRIBUTE -> TK_field . TYPE PROPS
    (52) ATTRIBUTE -> TK_field . TYPE TK_lpar TK_int TK_rpar
    (53) ATTRIBUTE -> TK_field . TYPE
    (153) TYPE -> . RW_int
    (154) TYPE -> . RW_bit
    (155) TYPE -> . RW_decimal
    (156) TYPE -> . RW_date
    (157) TYPE -> . RW_datetime
    (158) TYPE -> . RW_nchar
    (159) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 169
    RW_bit          shift and go to state 170
    RW_decimal      shift and go to state 171
    RW_date         shift and go to state 172
    RW_datetime     shift and go to state 173
    RW_nchar        shift and go to state 174
    RW_nvarchar     shift and go to state 175

    TYPE                           shift and go to state 283

state 247

    (47) CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES . TK_rpar
    (48) ATTRIBUTES -> ATTRIBUTES . TK_comma ATTRIBUTE

    TK_rpar         shift and go to state 284
    TK_comma        shift and go to state 285


state 248

    (49) ATTRIBUTES -> ATTRIBUTE .

    TK_rpar         reduce using rule 49 (ATTRIBUTES -> ATTRIBUTE .)
    TK_comma        reduce using rule 49 (ATTRIBUTES -> ATTRIBUTE .)


state 249

    (54) ATTRIBUTE -> RW_foreing . RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    RW_key          shift and go to state 286


state 250

    (101) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS . TK_rpar RW_returns TYPE ENCAP
    (107) PARAMS -> PARAMS . TK_comma PARAM

    TK_rpar         shift and go to state 287
    TK_comma        shift and go to state 253


state 251

    (102) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar . RW_returns TYPE ENCAP

    RW_returns      shift and go to state 288


state 252

    (103) FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as . ENCAP
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 289

state 253

    (107) PARAMS -> PARAMS TK_comma . PARAM
    (109) PARAM -> . TK_id RW_as TYPE

    TK_id           shift and go to state 215

    PARAM                          shift and go to state 290

state 254

    (104) FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP .

    TK_semicolon    reduce using rule 104 (FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP .)


state 255

    (105) FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS . TK_rpar ENCAP
    (107) PARAMS -> PARAMS . TK_comma PARAM

    TK_rpar         shift and go to state 291
    TK_comma        shift and go to state 253


state 256

    (109) PARAM -> TK_id RW_as . TYPE
    (153) TYPE -> . RW_int
    (154) TYPE -> . RW_bit
    (155) TYPE -> . RW_decimal
    (156) TYPE -> . RW_date
    (157) TYPE -> . RW_datetime
    (158) TYPE -> . RW_nchar
    (159) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 169
    RW_bit          shift and go to state 170
    RW_decimal      shift and go to state 171
    RW_date         shift and go to state 172
    RW_datetime     shift and go to state 173
    RW_nchar        shift and go to state 174
    RW_nvarchar     shift and go to state 175

    TYPE                           shift and go to state 292

state 257

    (114) ARGS -> ARGS TK_comma EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 114 (ARGS -> ARGS TK_comma EXP .)
    TK_comma        reduce using rule 114 (ARGS -> ARGS TK_comma EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 258

    (66) ACTION -> RW_add TK_field . TYPE
    (153) TYPE -> . RW_int
    (154) TYPE -> . RW_bit
    (155) TYPE -> . RW_decimal
    (156) TYPE -> . RW_date
    (157) TYPE -> . RW_datetime
    (158) TYPE -> . RW_nchar
    (159) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 169
    RW_bit          shift and go to state 170
    RW_decimal      shift and go to state 171
    RW_date         shift and go to state 172
    RW_datetime     shift and go to state 173
    RW_nchar        shift and go to state 174
    RW_nvarchar     shift and go to state 175

    TYPE                           shift and go to state 293

state 259

    (67) ACTION -> RW_drop TK_field .

    TK_semicolon    reduce using rule 67 (ACTION -> RW_drop TK_field .)


state 260

    (68) ACTION -> RW_rename RW_to . TK_field

    TK_field        shift and go to state 294


state 261

    (69) ACTION -> RW_rename RW_column . TK_field RW_to TK_field

    TK_field        shift and go to state 295


state 262

    (73) LIST_ATTRIBS -> TK_field .

    TK_rpar         reduce using rule 73 (LIST_ATTRIBS -> TK_field .)
    TK_comma        reduce using rule 73 (LIST_ATTRIBS -> TK_field .)


state 263

    (71) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS . TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (72) LIST_ATTRIBS -> LIST_ATTRIBS . TK_comma TK_field

    TK_rpar         shift and go to state 296
    TK_comma        shift and go to state 297


state 264

    (79) VALUETAB -> TK_field TK_equal . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 298
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 265

    (76) UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 299
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 266

    (77) VALUESTAB -> VALUESTAB TK_comma . VALUETAB
    (79) VALUETAB -> . TK_field TK_equal EXP

    TK_field        shift and go to state 223

    VALUETAB                       shift and go to state 300

state 267

    (81) DELETETAB -> RW_delete RW_from TK_field RW_where EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 81 (DELETETAB -> RW_delete RW_from TK_field RW_where EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 268

    (37) SELECT -> RW_select FIELDS RW_from TK_field RW_where . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 301
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 269

    (35) DECLID -> TK_id TYPE .

    TK_comma        reduce using rule 35 (DECLID -> TK_id TYPE .)
    TK_semicolon    reduce using rule 35 (DECLID -> TK_id TYPE .)


state 270

    (32) DECLAREID -> RW_declare TK_id TYPE TK_equal EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 32 (DECLAREID -> RW_declare TK_id TYPE TK_equal EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 271

    (82) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else . INSTRUCTIONS RW_end RW_if
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INSTRUCTIONS                   shift and go to state 302
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 272

    (83) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end . RW_if

    RW_if           shift and go to state 303


state 273

    (84) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end .

    TK_semicolon    reduce using rule 84 (IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end .)


state 274

    (85) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as . TK_field
    (86) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as . TK_nvarchar

    TK_field        shift and go to state 304
    TK_nvarchar     shift and go to state 305


state 275

    (88) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field .

    TK_semicolon    reduce using rule 88 (CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field .)


state 276

    (89) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar .

    TK_semicolon    reduce using rule 89 (CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar .)


state 277

    (96) WHEN -> RW_when EXP RW_then EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    RW_else         reduce using rule 96 (WHEN -> RW_when EXP RW_then EXP .)
    RW_when         reduce using rule 96 (WHEN -> RW_when EXP RW_then EXP .)
    RW_end          reduce using rule 96 (WHEN -> RW_when EXP RW_then EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 278

    (100) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot . EXP ENCAP RW_loop
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 306
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 279

    (148) CAST -> RW_cast TK_lpar EXP RW_as TYPE . TK_rpar

    TK_rpar         shift and go to state 307


state 280

    (149) NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP . TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 308
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 281

    (150) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP . TK_comma EXP TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 309
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 282

    (152) TERNARY -> RW_if TK_lpar EXP TK_comma EXP . TK_comma EXP TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 310
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 283

    (50) ATTRIBUTE -> TK_field TYPE . TK_lpar TK_int TK_rpar PROPS
    (51) ATTRIBUTE -> TK_field TYPE . PROPS
    (52) ATTRIBUTE -> TK_field TYPE . TK_lpar TK_int TK_rpar
    (53) ATTRIBUTE -> TK_field TYPE .
    (55) PROPS -> . RW_not RW_null RW_primary RW_key FKEY
    (56) PROPS -> . RW_not RW_null RW_primary RW_key
    (57) PROPS -> . RW_primary RW_key RW_not RW_null FKEY
    (58) PROPS -> . RW_primary RW_key RW_not RW_null
    (59) PROPS -> . RW_not RW_null FKEY
    (60) PROPS -> . RW_not RW_null
    (61) PROPS -> . RW_primary RW_key FKEY
    (62) PROPS -> . RW_primary RW_key
    (63) PROPS -> . FKEY
    (64) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_lpar         shift and go to state 311
    TK_rpar         reduce using rule 53 (ATTRIBUTE -> TK_field TYPE .)
    TK_comma        reduce using rule 53 (ATTRIBUTE -> TK_field TYPE .)
    RW_not          shift and go to state 313
    RW_primary      shift and go to state 314
    RW_ref          shift and go to state 316

    PROPS                          shift and go to state 312
    FKEY                           shift and go to state 315

state 284

    (47) CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar .

    TK_semicolon    reduce using rule 47 (CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar .)


state 285

    (48) ATTRIBUTES -> ATTRIBUTES TK_comma . ATTRIBUTE
    (50) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar PROPS
    (51) ATTRIBUTE -> . TK_field TYPE PROPS
    (52) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar
    (53) ATTRIBUTE -> . TK_field TYPE
    (54) ATTRIBUTE -> . RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 246
    RW_foreing      shift and go to state 249

    ATTRIBUTE                      shift and go to state 317

state 286

    (54) ATTRIBUTE -> RW_foreing RW_key . TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_lpar         shift and go to state 318


state 287

    (101) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar . RW_returns TYPE ENCAP

    RW_returns      shift and go to state 319


state 288

    (102) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns . TYPE ENCAP
    (153) TYPE -> . RW_int
    (154) TYPE -> . RW_bit
    (155) TYPE -> . RW_decimal
    (156) TYPE -> . RW_date
    (157) TYPE -> . RW_datetime
    (158) TYPE -> . RW_nchar
    (159) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 169
    RW_bit          shift and go to state 170
    RW_decimal      shift and go to state 171
    RW_date         shift and go to state 172
    RW_datetime     shift and go to state 173
    RW_nchar        shift and go to state 174
    RW_nvarchar     shift and go to state 175

    TYPE                           shift and go to state 320

state 289

    (103) FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP .

    TK_semicolon    reduce using rule 103 (FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP .)


state 290

    (107) PARAMS -> PARAMS TK_comma PARAM .

    RW_as           reduce using rule 107 (PARAMS -> PARAMS TK_comma PARAM .)
    TK_comma        reduce using rule 107 (PARAMS -> PARAMS TK_comma PARAM .)
    TK_rpar         reduce using rule 107 (PARAMS -> PARAMS TK_comma PARAM .)


state 291

    (105) FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar . ENCAP
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 321

state 292

    (109) PARAM -> TK_id RW_as TYPE .

    RW_as           reduce using rule 109 (PARAM -> TK_id RW_as TYPE .)
    TK_comma        reduce using rule 109 (PARAM -> TK_id RW_as TYPE .)
    TK_rpar         reduce using rule 109 (PARAM -> TK_id RW_as TYPE .)


state 293

    (66) ACTION -> RW_add TK_field TYPE .

    TK_semicolon    reduce using rule 66 (ACTION -> RW_add TK_field TYPE .)


state 294

    (68) ACTION -> RW_rename RW_to TK_field .

    TK_semicolon    reduce using rule 68 (ACTION -> RW_rename RW_to TK_field .)


state 295

    (69) ACTION -> RW_rename RW_column TK_field . RW_to TK_field

    RW_to           shift and go to state 322


state 296

    (71) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar . RW_values TK_lpar LIST_EXPS TK_rpar

    RW_values       shift and go to state 323


state 297

    (72) LIST_ATTRIBS -> LIST_ATTRIBS TK_comma . TK_field

    TK_field        shift and go to state 324


state 298

    (79) VALUETAB -> TK_field TK_equal EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    RW_where        reduce using rule 79 (VALUETAB -> TK_field TK_equal EXP .)
    TK_comma        reduce using rule 79 (VALUETAB -> TK_field TK_equal EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 299

    (76) UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 76 (UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 300

    (77) VALUESTAB -> VALUESTAB TK_comma VALUETAB .

    RW_where        reduce using rule 77 (VALUESTAB -> VALUESTAB TK_comma VALUETAB .)
    TK_comma        reduce using rule 77 (VALUESTAB -> VALUESTAB TK_comma VALUETAB .)


state 301

    (37) SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 37 (SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 302

    (82) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS . RW_end RW_if
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . USEDB TK_semicolon
    (7) INSTRUCTION -> . CREATETABLE TK_semicolon
    (8) INSTRUCTION -> . ALTERTAB TK_semicolon
    (9) INSTRUCTION -> . DROPTAB TK_semicolon
    (10) INSTRUCTION -> . INSERTREG TK_semicolon
    (11) INSTRUCTION -> . UPDATETAB TK_semicolon
    (12) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (13) INSTRUCTION -> . DELETETAB TK_semicolon
    (14) INSTRUCTION -> . SELECT TK_semicolon
    (15) INSTRUCTION -> . DECLAREID TK_semicolon
    (16) INSTRUCTION -> . ASIGNID TK_semicolon
    (17) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (18) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (19) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (20) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (21) INSTRUCTION -> . FUNCDEC TK_semicolon
    (22) INSTRUCTION -> . CALLFUNC TK_semicolon
    (23) INSTRUCTION -> . ENCAP TK_semicolon
    (24) INSTRUCTION -> . PRINT TK_semicolon
    (25) INSTRUCTION -> . RW_break TK_semicolon
    (26) INSTRUCTION -> . RW_continue TK_semicolon
    (27) INSTRUCTION -> . RW_return EXP TK_semicolon
    (28) INSTRUCTION -> . RW_return TK_semicolon
    (29) CREATEDB -> . RW_create RW_data RW_base TK_field
    (30) USEDB -> . RW_use TK_field
    (47) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (65) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (70) DROPTAB -> . RW_drop RW_table TK_field
    (71) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (76) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (80) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (81) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (37) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (38) SELECT -> . RW_select FIELDS RW_from TK_field
    (39) SELECT -> . RW_select LIST_IDS
    (31) DECLAREID -> . RW_declare DECLIDS
    (32) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (36) ASIGNID -> . RW_set TK_id TK_equal EXP
    (82) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (83) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (84) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (85) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (86) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (87) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (88) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (89) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (90) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (99) WHILESTRUCT -> . RW_while EXP ENCAP
    (100) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (101) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (102) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (103) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (104) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (105) FUNCDEC -> . RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP
    (106) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end
    (98) PRINT -> . RW_print EXP

    RW_end          shift and go to state 325
    RW_break        shift and go to state 24
    RW_continue     shift and go to state 25
    RW_return       shift and go to state 26
    RW_create       shift and go to state 27
    RW_use          shift and go to state 29
    RW_alter        shift and go to state 30
    RW_drop         shift and go to state 31
    RW_insert       shift and go to state 32
    RW_update       shift and go to state 33
    RW_truncate     shift and go to state 35
    RW_delete       shift and go to state 36
    RW_select       shift and go to state 37
    RW_declare      shift and go to state 38
    RW_set          shift and go to state 34
    RW_if           shift and go to state 39
    RW_case         shift and go to state 41
    RW_while        shift and go to state 42
    RW_for          shift and go to state 43
    TK_field        shift and go to state 28
    RW_begin        shift and go to state 40
    RW_print        shift and go to state 44

    INSTRUCTION                    shift and go to state 45
    CREATEDB                       shift and go to state 4
    USEDB                          shift and go to state 5
    CREATETABLE                    shift and go to state 6
    ALTERTAB                       shift and go to state 7
    DROPTAB                        shift and go to state 8
    INSERTREG                      shift and go to state 9
    UPDATETAB                      shift and go to state 10
    TRUNCATETAB                    shift and go to state 11
    DELETETAB                      shift and go to state 12
    SELECT                         shift and go to state 13
    DECLAREID                      shift and go to state 14
    ASIGNID                        shift and go to state 15
    IFSTRUCT                       shift and go to state 16
    CASESTRUCT_S                   shift and go to state 17
    WHILESTRUCT                    shift and go to state 18
    FORSTRUCT                      shift and go to state 19
    FUNCDEC                        shift and go to state 20
    CALLFUNC                       shift and go to state 21
    ENCAP                          shift and go to state 22
    PRINT                          shift and go to state 23

state 303

    (83) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if .

    TK_semicolon    reduce using rule 83 (IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if .)


state 304

    (85) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field .

    TK_semicolon    reduce using rule 85 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field .)


state 305

    (86) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar .

    TK_semicolon    reduce using rule 86 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar .)


state 306

    (100) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP . ENCAP RW_loop
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end

    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141
    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 326

state 307

    (148) CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .

    TK_semicolon    reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_plus         reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_minus        reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_mult         reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_div          reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_mod          reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_equalequal   reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_equal        reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_notequal     reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_lessequal    reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_greatequal   reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_less         reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_great        reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_and          reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_or           reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_as           reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_comma        reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_from         reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_then         reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_begin        reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_else         reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_when         reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_rpar         reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_end          reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_dot          reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_where        reduce using rule 148 (CAST -> RW_cast TK_lpar EXP RW_as TYPE TK_rpar .)


state 308

    (149) NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_equalequal   reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 149 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)


state 309

    (150) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma . EXP TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 327
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 310

    (152) TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma . EXP TK_rpar
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 328
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 311

    (50) ATTRIBUTE -> TK_field TYPE TK_lpar . TK_int TK_rpar PROPS
    (52) ATTRIBUTE -> TK_field TYPE TK_lpar . TK_int TK_rpar

    TK_int          shift and go to state 329


state 312

    (51) ATTRIBUTE -> TK_field TYPE PROPS .

    TK_rpar         reduce using rule 51 (ATTRIBUTE -> TK_field TYPE PROPS .)
    TK_comma        reduce using rule 51 (ATTRIBUTE -> TK_field TYPE PROPS .)


state 313

    (55) PROPS -> RW_not . RW_null RW_primary RW_key FKEY
    (56) PROPS -> RW_not . RW_null RW_primary RW_key
    (59) PROPS -> RW_not . RW_null FKEY
    (60) PROPS -> RW_not . RW_null

    RW_null         shift and go to state 330


state 314

    (57) PROPS -> RW_primary . RW_key RW_not RW_null FKEY
    (58) PROPS -> RW_primary . RW_key RW_not RW_null
    (61) PROPS -> RW_primary . RW_key FKEY
    (62) PROPS -> RW_primary . RW_key

    RW_key          shift and go to state 331


state 315

    (63) PROPS -> FKEY .

    TK_rpar         reduce using rule 63 (PROPS -> FKEY .)
    TK_comma        reduce using rule 63 (PROPS -> FKEY .)


state 316

    (64) FKEY -> RW_ref . TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 332


state 317

    (48) ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .

    TK_rpar         reduce using rule 48 (ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .)
    TK_comma        reduce using rule 48 (ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .)


state 318

    (54) ATTRIBUTE -> RW_foreing RW_key TK_lpar . TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 333


state 319

    (101) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns . TYPE ENCAP
    (153) TYPE -> . RW_int
    (154) TYPE -> . RW_bit
    (155) TYPE -> . RW_decimal
    (156) TYPE -> . RW_date
    (157) TYPE -> . RW_datetime
    (158) TYPE -> . RW_nchar
    (159) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 169
    RW_bit          shift and go to state 170
    RW_decimal      shift and go to state 171
    RW_date         shift and go to state 172
    RW_datetime     shift and go to state 173
    RW_nchar        shift and go to state 174
    RW_nvarchar     shift and go to state 175

    TYPE                           shift and go to state 334

state 320

    (102) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE . ENCAP
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 335

state 321

    (105) FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP .

    TK_semicolon    reduce using rule 105 (FUNCDEC -> RW_create RW_procedure TK_field TK_lpar PARAMS TK_rpar ENCAP .)


state 322

    (69) ACTION -> RW_rename RW_column TK_field RW_to . TK_field

    TK_field        shift and go to state 336


state 323

    (71) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values . TK_lpar LIST_EXPS TK_rpar

    TK_lpar         shift and go to state 337


state 324

    (72) LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .

    TK_rpar         reduce using rule 72 (LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .)
    TK_comma        reduce using rule 72 (LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .)


state 325

    (82) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end . RW_if

    RW_if           shift and go to state 338


state 326

    (100) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP . RW_loop

    RW_loop         shift and go to state 339


state 327

    (150) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP . TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 340
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 328

    (152) TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP . TK_rpar
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 341
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 329

    (50) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int . TK_rpar PROPS
    (52) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int . TK_rpar

    TK_rpar         shift and go to state 342


state 330

    (55) PROPS -> RW_not RW_null . RW_primary RW_key FKEY
    (56) PROPS -> RW_not RW_null . RW_primary RW_key
    (59) PROPS -> RW_not RW_null . FKEY
    (60) PROPS -> RW_not RW_null .
    (64) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    RW_primary      shift and go to state 343
    TK_rpar         reduce using rule 60 (PROPS -> RW_not RW_null .)
    TK_comma        reduce using rule 60 (PROPS -> RW_not RW_null .)
    RW_ref          shift and go to state 316

    FKEY                           shift and go to state 344

state 331

    (57) PROPS -> RW_primary RW_key . RW_not RW_null FKEY
    (58) PROPS -> RW_primary RW_key . RW_not RW_null
    (61) PROPS -> RW_primary RW_key . FKEY
    (62) PROPS -> RW_primary RW_key .
    (64) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    RW_not          shift and go to state 345
    TK_rpar         reduce using rule 62 (PROPS -> RW_primary RW_key .)
    TK_comma        reduce using rule 62 (PROPS -> RW_primary RW_key .)
    RW_ref          shift and go to state 316

    FKEY                           shift and go to state 346

state 332

    (64) FKEY -> RW_ref TK_field . TK_lpar TK_field TK_rpar

    TK_lpar         shift and go to state 347


state 333

    (54) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field . TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_rpar         shift and go to state 348


state 334

    (101) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE . ENCAP
    (110) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (111) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 40

    ENCAP                          shift and go to state 349

state 335

    (102) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP .

    TK_semicolon    reduce using rule 102 (FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP .)


state 336

    (69) ACTION -> RW_rename RW_column TK_field RW_to TK_field .

    TK_semicolon    reduce using rule 69 (ACTION -> RW_rename RW_column TK_field RW_to TK_field .)


state 337

    (71) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar . LIST_EXPS TK_rpar
    (74) LIST_EXPS -> . LIST_EXPS TK_comma EXP
    (75) LIST_EXPS -> . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    LIST_EXPS                      shift and go to state 350
    EXP                            shift and go to state 351
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 338

    (82) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if .

    TK_semicolon    reduce using rule 82 (IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if .)


state 339

    (100) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop .

    TK_semicolon    reduce using rule 100 (FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop .)


state 340

    (150) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equalequal   reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 150 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)


state 341

    (152) TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equalequal   reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 152 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)


state 342

    (50) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar . PROPS
    (52) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar .
    (55) PROPS -> . RW_not RW_null RW_primary RW_key FKEY
    (56) PROPS -> . RW_not RW_null RW_primary RW_key
    (57) PROPS -> . RW_primary RW_key RW_not RW_null FKEY
    (58) PROPS -> . RW_primary RW_key RW_not RW_null
    (59) PROPS -> . RW_not RW_null FKEY
    (60) PROPS -> . RW_not RW_null
    (61) PROPS -> . RW_primary RW_key FKEY
    (62) PROPS -> . RW_primary RW_key
    (63) PROPS -> . FKEY
    (64) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_rpar         reduce using rule 52 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar .)
    TK_comma        reduce using rule 52 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar .)
    RW_not          shift and go to state 313
    RW_primary      shift and go to state 314
    RW_ref          shift and go to state 316

    PROPS                          shift and go to state 352
    FKEY                           shift and go to state 315

state 343

    (55) PROPS -> RW_not RW_null RW_primary . RW_key FKEY
    (56) PROPS -> RW_not RW_null RW_primary . RW_key

    RW_key          shift and go to state 353


state 344

    (59) PROPS -> RW_not RW_null FKEY .

    TK_rpar         reduce using rule 59 (PROPS -> RW_not RW_null FKEY .)
    TK_comma        reduce using rule 59 (PROPS -> RW_not RW_null FKEY .)


state 345

    (57) PROPS -> RW_primary RW_key RW_not . RW_null FKEY
    (58) PROPS -> RW_primary RW_key RW_not . RW_null

    RW_null         shift and go to state 354


state 346

    (61) PROPS -> RW_primary RW_key FKEY .

    TK_rpar         reduce using rule 61 (PROPS -> RW_primary RW_key FKEY .)
    TK_comma        reduce using rule 61 (PROPS -> RW_primary RW_key FKEY .)


state 347

    (64) FKEY -> RW_ref TK_field TK_lpar . TK_field TK_rpar

    TK_field        shift and go to state 355


state 348

    (54) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar . RW_ref TK_field TK_lpar TK_field TK_rpar

    RW_ref          shift and go to state 356


state 349

    (101) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP .

    TK_semicolon    reduce using rule 101 (FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP .)


state 350

    (71) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS . TK_rpar
    (74) LIST_EXPS -> LIST_EXPS . TK_comma EXP

    TK_rpar         shift and go to state 357
    TK_comma        shift and go to state 358


state 351

    (75) LIST_EXPS -> EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 75 (LIST_EXPS -> EXP .)
    TK_comma        reduce using rule 75 (LIST_EXPS -> EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 352

    (50) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS .

    TK_rpar         reduce using rule 50 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS .)
    TK_comma        reduce using rule 50 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS .)


state 353

    (55) PROPS -> RW_not RW_null RW_primary RW_key . FKEY
    (56) PROPS -> RW_not RW_null RW_primary RW_key .
    (64) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_rpar         reduce using rule 56 (PROPS -> RW_not RW_null RW_primary RW_key .)
    TK_comma        reduce using rule 56 (PROPS -> RW_not RW_null RW_primary RW_key .)
    RW_ref          shift and go to state 316

    FKEY                           shift and go to state 359

state 354

    (57) PROPS -> RW_primary RW_key RW_not RW_null . FKEY
    (58) PROPS -> RW_primary RW_key RW_not RW_null .
    (64) FKEY -> . RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_rpar         reduce using rule 58 (PROPS -> RW_primary RW_key RW_not RW_null .)
    TK_comma        reduce using rule 58 (PROPS -> RW_primary RW_key RW_not RW_null .)
    RW_ref          shift and go to state 316

    FKEY                           shift and go to state 360

state 355

    (64) FKEY -> RW_ref TK_field TK_lpar TK_field . TK_rpar

    TK_rpar         shift and go to state 361


state 356

    (54) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref . TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 362


state 357

    (71) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar .

    TK_semicolon    reduce using rule 71 (INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar .)


state 358

    (74) LIST_EXPS -> LIST_EXPS TK_comma . EXP
    (116) EXP -> . ARITHMETICS
    (117) EXP -> . RELATIONALS
    (118) EXP -> . LOGICS
    (119) EXP -> . CAST
    (120) EXP -> . NATIVEFUNC
    (121) EXP -> . CALLFUNC
    (122) EXP -> . TERNARY
    (123) EXP -> . TK_id
    (124) EXP -> . TK_field
    (125) EXP -> . TK_nvarchar
    (126) EXP -> . TK_int
    (127) EXP -> . TK_decimal
    (128) EXP -> . TK_date
    (129) EXP -> . TK_datetime
    (130) EXP -> . RW_null
    (131) EXP -> . TK_lpar EXP TK_rpar
    (132) ARITHMETICS -> . EXP TK_plus EXP
    (133) ARITHMETICS -> . EXP TK_minus EXP
    (134) ARITHMETICS -> . EXP TK_mult EXP
    (135) ARITHMETICS -> . EXP TK_div EXP
    (136) ARITHMETICS -> . EXP TK_mod EXP
    (137) ARITHMETICS -> . TK_minus EXP
    (138) RELATIONALS -> . EXP TK_equalequal EXP
    (139) RELATIONALS -> . EXP TK_equal EXP
    (140) RELATIONALS -> . EXP TK_notequal EXP
    (141) RELATIONALS -> . EXP TK_lessequal EXP
    (142) RELATIONALS -> . EXP TK_greatequal EXP
    (143) RELATIONALS -> . EXP TK_less EXP
    (144) RELATIONALS -> . EXP TK_great EXP
    (145) LOGICS -> . EXP TK_and EXP
    (146) LOGICS -> . EXP TK_or EXP
    (147) LOGICS -> . TK_not EXP
    (148) CAST -> . RW_cast TK_lpar EXP RW_as TYPE TK_rpar
    (149) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (150) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (151) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (112) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (113) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (152) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 77
    TK_field        shift and go to state 78
    TK_nvarchar     shift and go to state 79
    TK_int          shift and go to state 80
    TK_decimal      shift and go to state 81
    TK_date         shift and go to state 82
    TK_datetime     shift and go to state 83
    RW_null         shift and go to state 84
    TK_lpar         shift and go to state 85
    TK_minus        shift and go to state 86
    TK_not          shift and go to state 87
    RW_cast         shift and go to state 88
    RW_concatenar   shift and go to state 89
    RW_substraer    shift and go to state 90
    RW_hoy          shift and go to state 91
    RW_if           shift and go to state 92

    EXP                            shift and go to state 363
    ARITHMETICS                    shift and go to state 70
    RELATIONALS                    shift and go to state 71
    LOGICS                         shift and go to state 72
    CAST                           shift and go to state 73
    NATIVEFUNC                     shift and go to state 74
    CALLFUNC                       shift and go to state 75
    TERNARY                        shift and go to state 76

state 359

    (55) PROPS -> RW_not RW_null RW_primary RW_key FKEY .

    TK_rpar         reduce using rule 55 (PROPS -> RW_not RW_null RW_primary RW_key FKEY .)
    TK_comma        reduce using rule 55 (PROPS -> RW_not RW_null RW_primary RW_key FKEY .)


state 360

    (57) PROPS -> RW_primary RW_key RW_not RW_null FKEY .

    TK_rpar         reduce using rule 57 (PROPS -> RW_primary RW_key RW_not RW_null FKEY .)
    TK_comma        reduce using rule 57 (PROPS -> RW_primary RW_key RW_not RW_null FKEY .)


state 361

    (64) FKEY -> RW_ref TK_field TK_lpar TK_field TK_rpar .

    TK_rpar         reduce using rule 64 (FKEY -> RW_ref TK_field TK_lpar TK_field TK_rpar .)
    TK_comma        reduce using rule 64 (FKEY -> RW_ref TK_field TK_lpar TK_field TK_rpar .)


state 362

    (54) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field . TK_lpar TK_field TK_rpar

    TK_lpar         shift and go to state 364


state 363

    (74) LIST_EXPS -> LIST_EXPS TK_comma EXP .
    (132) ARITHMETICS -> EXP . TK_plus EXP
    (133) ARITHMETICS -> EXP . TK_minus EXP
    (134) ARITHMETICS -> EXP . TK_mult EXP
    (135) ARITHMETICS -> EXP . TK_div EXP
    (136) ARITHMETICS -> EXP . TK_mod EXP
    (138) RELATIONALS -> EXP . TK_equalequal EXP
    (139) RELATIONALS -> EXP . TK_equal EXP
    (140) RELATIONALS -> EXP . TK_notequal EXP
    (141) RELATIONALS -> EXP . TK_lessequal EXP
    (142) RELATIONALS -> EXP . TK_greatequal EXP
    (143) RELATIONALS -> EXP . TK_less EXP
    (144) RELATIONALS -> EXP . TK_great EXP
    (145) LOGICS -> EXP . TK_and EXP
    (146) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 74 (LIST_EXPS -> LIST_EXPS TK_comma EXP .)
    TK_comma        reduce using rule 74 (LIST_EXPS -> LIST_EXPS TK_comma EXP .)
    TK_plus         shift and go to state 128
    TK_minus        shift and go to state 129
    TK_mult         shift and go to state 130
    TK_div          shift and go to state 131
    TK_mod          shift and go to state 132
    TK_equalequal   shift and go to state 133
    TK_equal        shift and go to state 134
    TK_notequal     shift and go to state 135
    TK_lessequal    shift and go to state 136
    TK_greatequal   shift and go to state 137
    TK_less         shift and go to state 138
    TK_great        shift and go to state 139
    TK_and          shift and go to state 140
    TK_or           shift and go to state 141


state 364

    (54) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar . TK_field TK_rpar

    TK_field        shift and go to state 365


state 365

    (54) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field . TK_rpar

    TK_rpar         shift and go to state 366


state 366

    (54) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar .

    TK_rpar         reduce using rule 54 (ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar .)
    TK_comma        reduce using rule 54 (ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TK_plus in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_minus in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_mult in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_div in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_mod in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_equalequal in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_equal in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_notequal in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_lessequal in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_greatequal in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_less in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_great in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_and in state 193 resolved as shift
WARNING: shift/reduce conflict for TK_or in state 193 resolved as shift
