Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RW_concatena
    RW_contar
    RW_datetime
    RW_hoy
    RW_substraer
    TK_datetime
    TK_equalequal

Grammar

Rule 0     S' -> INIT
Rule 1     INIT -> INSTRUCTIONS
Rule 2     INIT -> <empty>
Rule 3     INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION
Rule 4     INSTRUCTIONS -> INSTRUCTION
Rule 5     INSTRUCTION -> CREATETABLE TK_semicolon
Rule 6     INSTRUCTION -> ALTERTAB TK_semicolon
Rule 7     INSTRUCTION -> DROPTAB TK_semicolon
Rule 8     INSTRUCTION -> INSERTREG TK_semicolon
Rule 9     INSTRUCTION -> UPDATETAB TK_semicolon
Rule 10    INSTRUCTION -> TRUNCATETAB TK_semicolon
Rule 11    INSTRUCTION -> DELETETAB TK_semicolon
Rule 12    INSTRUCTION -> SELECT TK_semicolon
Rule 13    INSTRUCTION -> DECLAREID TK_semicolon
Rule 14    INSTRUCTION -> ASIGNID TK_semicolon
Rule 15    INSTRUCTION -> IFSTRUCT TK_semicolon
Rule 16    INSTRUCTION -> CASESTRUCT_S TK_semicolon
Rule 17    INSTRUCTION -> WHILESTRUCT TK_semicolon
Rule 18    INSTRUCTION -> FORSTRUCT TK_semicolon
Rule 19    INSTRUCTION -> FUNCDEC TK_semicolon
Rule 20    INSTRUCTION -> CALLFUNC TK_semicolon
Rule 21    INSTRUCTION -> ENCAP TK_semicolon
Rule 22    INSTRUCTION -> PRINT TK_semicolon
Rule 23    INSTRUCTION -> RW_break TK_semicolon
Rule 24    INSTRUCTION -> RW_continue TK_semicolon
Rule 25    INSTRUCTION -> RW_return EXP TK_semicolon
Rule 26    INSTRUCTION -> RW_return TK_semicolon
Rule 27    DECLAREID -> RW_declare DECLIDS
Rule 28    DECLAREID -> RW_declare TK_id TYPE TK_equal EXP
Rule 29    DECLIDS -> DECLIDS TK_comma DECLID
Rule 30    DECLIDS -> DECLID
Rule 31    DECLID -> TK_id TYPE
Rule 32    ASIGNID -> RW_set TK_id TK_equal EXP
Rule 33    SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP
Rule 34    SELECT -> RW_select FIELDS RW_from TK_field
Rule 35    SELECT -> RW_select LIST_IDS
Rule 36    FIELDS -> LIST_IDS
Rule 37    FIELDS -> TK_mult
Rule 38    LIST_IDS -> LIST_IDS TK_comma IDS
Rule 39    LIST_IDS -> IDS
Rule 40    IDS -> EXP RW_as TK_nvarchar
Rule 41    IDS -> EXP RW_as TK_field
Rule 42    IDS -> EXP
Rule 43    CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
Rule 44    ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE
Rule 45    ATTRIBUTES -> ATTRIBUTE
Rule 46    ATTRIBUTE -> TK_field TYPE
Rule 47    ALTERTAB -> RW_alter RW_table TK_field ACTION
Rule 48    ACTION -> RW_add TK_field TYPE
Rule 49    ACTION -> RW_drop RW_column TK_field
Rule 50    ACTION -> RW_rename RW_to TK_field
Rule 51    ACTION -> RW_rename RW_column TK_field RW_to TK_field
Rule 52    DROPTAB -> RW_drop RW_table TK_field
Rule 53    INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
Rule 54    LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field
Rule 55    LIST_ATTRIBS -> TK_field
Rule 56    LIST_EXPS -> LIST_EXPS TK_comma EXP
Rule 57    LIST_EXPS -> EXP
Rule 58    UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP
Rule 59    VALUESTAB -> VALUESTAB TK_comma VALUETAB
Rule 60    VALUESTAB -> VALUETAB
Rule 61    VALUETAB -> TK_field TK_equal EXP
Rule 62    TRUNCATETAB -> RW_truncate RW_table TK_field
Rule 63    DELETETAB -> RW_delete RW_from TK_field RW_where EXP
Rule 64    IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
Rule 65    IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
Rule 66    IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end
Rule 67    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field
Rule 68    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
Rule 69    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end
Rule 70    CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field
Rule 71    CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar
Rule 72    CASESTRUCT_S -> RW_case WHENELSE RW_end
Rule 73    WHENELSE -> WHENS ELSE
Rule 74    WHENELSE -> WHENS
Rule 75    WHENELSE -> ELSE
Rule 76    WHENS -> WHENS WHEN
Rule 77    WHENS -> WHEN
Rule 78    WHEN -> RW_when EXP RW_then EXP
Rule 79    ELSE -> RW_else EXP
Rule 80    PRINT -> RW_print EXP
Rule 81    WHILESTRUCT -> RW_while EXP ENCAP
Rule 82    FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
Rule 83    FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
Rule 84    FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
Rule 85    FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP
Rule 86    FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP
Rule 87    FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP
Rule 88    FUNCDEC -> RW_create RW_procedure TK_field ENCAP
Rule 89    PARAMS -> PARAMS TK_comma PARAM
Rule 90    PARAMS -> PARAM
Rule 91    PARAM -> TK_id TYPE
Rule 92    ENCAP -> RW_begin INSTRUCTIONS RW_end
Rule 93    ENCAP -> RW_begin RW_end
Rule 94    CALLFUNC -> TK_field TK_lpar ARGS TK_rpar
Rule 95    CALLFUNC -> TK_field TK_lpar TK_rpar
Rule 96    ARGS -> ARGS TK_comma EXP
Rule 97    ARGS -> EXP
Rule 98    EXP -> ARITHMETICS
Rule 99    EXP -> RELATIONALS
Rule 100   EXP -> LOGICS
Rule 101   EXP -> CAST
Rule 102   EXP -> NATIVEFUNC
Rule 103   EXP -> CALLFUNC
Rule 104   EXP -> TK_id
Rule 105   EXP -> TK_field
Rule 106   EXP -> TK_nvarchar
Rule 107   EXP -> TK_int
Rule 108   EXP -> TK_decimal
Rule 109   EXP -> TK_date
Rule 110   EXP -> RW_null
Rule 111   EXP -> TK_lpar EXP TK_rpar
Rule 112   ARITHMETICS -> EXP TK_plus EXP
Rule 113   ARITHMETICS -> EXP TK_minus EXP
Rule 114   ARITHMETICS -> EXP TK_mult EXP
Rule 115   ARITHMETICS -> EXP TK_div EXP
Rule 116   ARITHMETICS -> EXP TK_mod EXP
Rule 117   ARITHMETICS -> TK_minus EXP
Rule 118   RELATIONALS -> EXP TK_equal EXP
Rule 119   RELATIONALS -> EXP TK_notequal EXP
Rule 120   RELATIONALS -> EXP TK_lessequal EXP
Rule 121   RELATIONALS -> EXP TK_greatequal EXP
Rule 122   RELATIONALS -> EXP TK_less EXP
Rule 123   RELATIONALS -> EXP TK_great EXP
Rule 124   LOGICS -> EXP TK_and EXP
Rule 125   LOGICS -> EXP TK_or EXP
Rule 126   LOGICS -> TK_not EXP
Rule 127   CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar
Rule 128   NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
Rule 129   TYPE -> RW_int
Rule 130   TYPE -> RW_bit
Rule 131   TYPE -> RW_decimal
Rule 132   TYPE -> RW_date
Rule 133   TYPE -> RW_nchar
Rule 134   TYPE -> RW_nvarchar

Terminals, with rules where they appear

RW_add               : 48
RW_alter             : 47
RW_as                : 40 41 67 68 70 71 85 86 127
RW_begin             : 66 92 93
RW_bit               : 130
RW_break             : 23
RW_cas               : 127
RW_case              : 67 68 69 70 71 72
RW_column            : 49 51
RW_concatena         : 
RW_contar            : 
RW_continue          : 24
RW_create            : 43 83 84 85 86 87 88
RW_date              : 132
RW_datetime          : 
RW_decimal           : 131
RW_declare           : 27 28
RW_delete            : 63
RW_drop              : 49 52
RW_else              : 64 79
RW_end               : 64 65 66 67 68 69 70 71 72 92 93
RW_for               : 82
RW_from              : 33 34 63
RW_function          : 83 84
RW_hoy               : 
RW_if                : 64 64 65 65 66
RW_in                : 82
RW_insert            : 53
RW_int               : 129
RW_into              : 53
RW_loop              : 82
RW_nchar             : 133
RW_null              : 110
RW_nvarchar          : 134
RW_print             : 80
RW_procedure         : 85 86 87 88
RW_rename            : 50 51
RW_return            : 25 26
RW_returns           : 83 84
RW_select            : 33 34 35
RW_set               : 32 58
RW_substraer         : 
RW_table             : 43 47 52 62
RW_then              : 64 65 78
RW_to                : 50 51
RW_truncate          : 62 128
RW_update            : 58
RW_values            : 53
RW_when              : 78
RW_where             : 33 58 63
RW_while             : 81
TK_and               : 124
TK_comma             : 29 38 44 54 56 59 89 96 128
TK_date              : 109
TK_datetime          : 
TK_decimal           : 108
TK_div               : 115
TK_dot               : 82
TK_equal             : 28 32 61 118
TK_equalequal        : 
TK_field             : 33 34 41 43 46 47 48 49 50 51 51 52 53 54 55 58 61 62 63 67 70 83 84 85 86 87 88 94 95 105
TK_great             : 123
TK_greatequal        : 121
TK_id                : 28 31 32 82 91 104
TK_int               : 107
TK_less              : 122
TK_lessequal         : 120
TK_lpar              : 43 53 53 83 84 94 95 111 127 128
TK_minus             : 113 117
TK_mod               : 116
TK_mult              : 37 114
TK_not               : 126
TK_notequal          : 119
TK_nvarchar          : 40 68 71 106
TK_or                : 125
TK_plus              : 112
TK_rpar              : 43 53 53 83 84 94 95 111 127 128
TK_semicolon         : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
error                : 

Nonterminals, with rules where they appear

ACTION               : 47
ALTERTAB             : 6
ARGS                 : 94 96
ARITHMETICS          : 98
ASIGNID              : 14
ATTRIBUTE            : 44 45
ATTRIBUTES           : 43 44
CALLFUNC             : 20 103
CASESTRUCT_S         : 16
CAST                 : 101
CREATETABLE          : 5
DECLAREID            : 13
DECLID               : 29 30
DECLIDS              : 27 29
DELETETAB            : 11
DROPTAB              : 7
ELSE                 : 73 75
ENCAP                : 21 81 82 83 84 85 86 87 88
EXP                  : 25 28 32 33 40 41 42 56 57 58 61 63 64 65 66 67 68 69 78 78 79 80 81 82 82 96 97 111 112 112 113 113 114 114 115 115 116 116 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 127 128 128
FIELDS               : 33 34
FORSTRUCT            : 18
FUNCDEC              : 19
IDS                  : 38 39
IFSTRUCT             : 15
INIT                 : 0
INSERTREG            : 8
INSTRUCTION          : 3 4
INSTRUCTIONS         : 1 3 64 64 65 66 92
LIST_ATTRIBS         : 53 54
LIST_EXPS            : 53 56
LIST_IDS             : 35 36 38
LOGICS               : 100
NATIVEFUNC           : 102
PARAM                : 89 90
PARAMS               : 83 85 87 89
PRINT                : 22
RELATIONALS          : 99
SELECT               : 12
TRUNCATETAB          : 10
TYPE                 : 28 31 46 48 83 84 91 127
UPDATETAB            : 9
VALUESTAB            : 58 59
VALUETAB             : 59 60
WHEN                 : 76 77
WHENELSE             : 67 68 69 70 71 72
WHENS                : 73 74 76
WHILESTRUCT          : 17

Parsing method: LALR

state 0

    (0) S' -> . INIT
    (1) INIT -> . INSTRUCTIONS
    (2) INIT -> .
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    $end            reduce using rule 2 (INIT -> .)
    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INIT                           shift and go to state 1
    INSTRUCTIONS                   shift and go to state 2
    INSTRUCTION                    shift and go to state 3
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 1

    (0) S' -> INIT .



state 2

    (1) INIT -> INSTRUCTIONS .
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    $end            reduce using rule 1 (INIT -> INSTRUCTIONS .)
    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INSTRUCTION                    shift and go to state 42
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 3

    (4) INSTRUCTIONS -> INSTRUCTION .

    RW_break        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_continue     reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_return       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_create       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_alter        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_drop         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_insert       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_update       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_truncate     reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_delete       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_select       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_declare      reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_set          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_if           reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_case         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_while        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_for          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    TK_field        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_begin        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_print        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    $end            reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_end          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_else         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)


state 4

    (5) INSTRUCTION -> CREATETABLE . TK_semicolon

    TK_semicolon    shift and go to state 43


state 5

    (6) INSTRUCTION -> ALTERTAB . TK_semicolon

    TK_semicolon    shift and go to state 44


state 6

    (7) INSTRUCTION -> DROPTAB . TK_semicolon

    TK_semicolon    shift and go to state 45


state 7

    (8) INSTRUCTION -> INSERTREG . TK_semicolon

    TK_semicolon    shift and go to state 46


state 8

    (9) INSTRUCTION -> UPDATETAB . TK_semicolon

    TK_semicolon    shift and go to state 47


state 9

    (10) INSTRUCTION -> TRUNCATETAB . TK_semicolon

    TK_semicolon    shift and go to state 48


state 10

    (11) INSTRUCTION -> DELETETAB . TK_semicolon

    TK_semicolon    shift and go to state 49


state 11

    (12) INSTRUCTION -> SELECT . TK_semicolon

    TK_semicolon    shift and go to state 50


state 12

    (13) INSTRUCTION -> DECLAREID . TK_semicolon

    TK_semicolon    shift and go to state 51


state 13

    (14) INSTRUCTION -> ASIGNID . TK_semicolon

    TK_semicolon    shift and go to state 52


state 14

    (15) INSTRUCTION -> IFSTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 53


state 15

    (16) INSTRUCTION -> CASESTRUCT_S . TK_semicolon

    TK_semicolon    shift and go to state 54


state 16

    (17) INSTRUCTION -> WHILESTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 55


state 17

    (18) INSTRUCTION -> FORSTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 56


state 18

    (19) INSTRUCTION -> FUNCDEC . TK_semicolon

    TK_semicolon    shift and go to state 57


state 19

    (20) INSTRUCTION -> CALLFUNC . TK_semicolon

    TK_semicolon    shift and go to state 58


state 20

    (21) INSTRUCTION -> ENCAP . TK_semicolon

    TK_semicolon    shift and go to state 59


state 21

    (22) INSTRUCTION -> PRINT . TK_semicolon

    TK_semicolon    shift and go to state 60


state 22

    (23) INSTRUCTION -> RW_break . TK_semicolon

    TK_semicolon    shift and go to state 61


state 23

    (24) INSTRUCTION -> RW_continue . TK_semicolon

    TK_semicolon    shift and go to state 62


state 24

    (25) INSTRUCTION -> RW_return . EXP TK_semicolon
    (26) INSTRUCTION -> RW_return . TK_semicolon
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_semicolon    shift and go to state 64
    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 63
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 25

    (43) CREATETABLE -> RW_create . RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (83) FUNCDEC -> RW_create . RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> RW_create . RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> RW_create . RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> RW_create . RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> RW_create . RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> RW_create . RW_procedure TK_field ENCAP

    RW_table        shift and go to state 83
    RW_function     shift and go to state 84
    RW_procedure    shift and go to state 85


state 26

    (94) CALLFUNC -> TK_field . TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> TK_field . TK_lpar TK_rpar

    TK_lpar         shift and go to state 86


state 27

    (47) ALTERTAB -> RW_alter . RW_table TK_field ACTION

    RW_table        shift and go to state 87


state 28

    (52) DROPTAB -> RW_drop . RW_table TK_field

    RW_table        shift and go to state 88


state 29

    (53) INSERTREG -> RW_insert . RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    RW_into         shift and go to state 89


state 30

    (58) UPDATETAB -> RW_update . TK_field RW_set VALUESTAB RW_where EXP

    TK_field        shift and go to state 90


state 31

    (32) ASIGNID -> RW_set . TK_id TK_equal EXP

    TK_id           shift and go to state 91


state 32

    (62) TRUNCATETAB -> RW_truncate . RW_table TK_field

    RW_table        shift and go to state 92


state 33

    (63) DELETETAB -> RW_delete . RW_from TK_field RW_where EXP

    RW_from         shift and go to state 93


state 34

    (33) SELECT -> RW_select . FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> RW_select . FIELDS RW_from TK_field
    (35) SELECT -> RW_select . LIST_IDS
    (36) FIELDS -> . LIST_IDS
    (37) FIELDS -> . TK_mult
    (38) LIST_IDS -> . LIST_IDS TK_comma IDS
    (39) LIST_IDS -> . IDS
    (40) IDS -> . EXP RW_as TK_nvarchar
    (41) IDS -> . EXP RW_as TK_field
    (42) IDS -> . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_mult         shift and go to state 97
    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    FIELDS                         shift and go to state 94
    EXP                            shift and go to state 95
    LIST_IDS                       shift and go to state 96
    IDS                            shift and go to state 98
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 35

    (27) DECLAREID -> RW_declare . DECLIDS
    (28) DECLAREID -> RW_declare . TK_id TYPE TK_equal EXP
    (29) DECLIDS -> . DECLIDS TK_comma DECLID
    (30) DECLIDS -> . DECLID
    (31) DECLID -> . TK_id TYPE

    TK_id           shift and go to state 100

    DECLIDS                        shift and go to state 99
    DECLID                         shift and go to state 101

state 36

    (64) IFSTRUCT -> RW_if . EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> RW_if . EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> RW_if . EXP RW_begin INSTRUCTIONS RW_end
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 102
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 37

    (92) ENCAP -> RW_begin . INSTRUCTIONS RW_end
    (93) ENCAP -> RW_begin . RW_end
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    RW_end          shift and go to state 104
    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INSTRUCTIONS                   shift and go to state 103
    INSTRUCTION                    shift and go to state 3
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 38

    (67) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> RW_case . WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> RW_case . WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> RW_case . WHENELSE RW_end
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (73) WHENELSE -> . WHENS ELSE
    (74) WHENELSE -> . WHENS
    (75) WHENELSE -> . ELSE
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (76) WHENS -> . WHENS WHEN
    (77) WHENS -> . WHEN
    (79) ELSE -> . RW_else EXP
    (78) WHEN -> . RW_when EXP RW_then EXP

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82
    RW_else         shift and go to state 110
    RW_when         shift and go to state 111

    EXP                            shift and go to state 105
    WHENELSE                       shift and go to state 106
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70
    WHENS                          shift and go to state 107
    ELSE                           shift and go to state 108
    WHEN                           shift and go to state 109

state 39

    (81) WHILESTRUCT -> RW_while . EXP ENCAP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 112
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 40

    (82) FORSTRUCT -> RW_for . TK_id RW_in EXP TK_dot EXP ENCAP RW_loop

    TK_id           shift and go to state 113


state 41

    (80) PRINT -> RW_print . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 114
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 42

    (3) INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .

    RW_break        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_continue     reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_return       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_create       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_alter        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_drop         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_insert       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_update       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_truncate     reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_delete       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_select       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_declare      reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_set          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_if           reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_case         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_while        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_for          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    TK_field        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_begin        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_print        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    $end            reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_end          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_else         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)


state 43

    (5) INSTRUCTION -> CREATETABLE TK_semicolon .

    RW_break        reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_continue     reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_return       reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_create       reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_alter        reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_drop         reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_insert       reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_update       reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_truncate     reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_delete       reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_select       reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_declare      reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_set          reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_if           reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_case         reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_while        reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_for          reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    TK_field        reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_begin        reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_print        reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    $end            reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_end          reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_else         reduce using rule 5 (INSTRUCTION -> CREATETABLE TK_semicolon .)


state 44

    (6) INSTRUCTION -> ALTERTAB TK_semicolon .

    RW_break        reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_continue     reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_return       reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_create       reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_alter        reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_drop         reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_insert       reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_update       reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_truncate     reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_delete       reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_select       reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_declare      reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_set          reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_if           reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_case         reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_while        reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_for          reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    TK_field        reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_begin        reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_print        reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    $end            reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_end          reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_else         reduce using rule 6 (INSTRUCTION -> ALTERTAB TK_semicolon .)


state 45

    (7) INSTRUCTION -> DROPTAB TK_semicolon .

    RW_break        reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_continue     reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_return       reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_create       reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_alter        reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_drop         reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_insert       reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_update       reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_truncate     reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_delete       reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_select       reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_declare      reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_set          reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_if           reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_case         reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_while        reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_for          reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    TK_field        reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_begin        reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_print        reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    $end            reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_end          reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_else         reduce using rule 7 (INSTRUCTION -> DROPTAB TK_semicolon .)


state 46

    (8) INSTRUCTION -> INSERTREG TK_semicolon .

    RW_break        reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_continue     reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_return       reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_create       reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_alter        reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_drop         reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_insert       reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_update       reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_truncate     reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_delete       reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_select       reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_declare      reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_set          reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_if           reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_case         reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_while        reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_for          reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    TK_field        reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_begin        reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_print        reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    $end            reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_end          reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_else         reduce using rule 8 (INSTRUCTION -> INSERTREG TK_semicolon .)


state 47

    (9) INSTRUCTION -> UPDATETAB TK_semicolon .

    RW_break        reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_continue     reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_return       reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_create       reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_alter        reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_drop         reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_insert       reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_update       reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_truncate     reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_delete       reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_select       reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_declare      reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_set          reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_if           reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_case         reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_while        reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_for          reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    TK_field        reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_begin        reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_print        reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    $end            reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_end          reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_else         reduce using rule 9 (INSTRUCTION -> UPDATETAB TK_semicolon .)


state 48

    (10) INSTRUCTION -> TRUNCATETAB TK_semicolon .

    RW_break        reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_continue     reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_return       reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_create       reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_alter        reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_drop         reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_insert       reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_update       reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_truncate     reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_delete       reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_select       reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_declare      reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_set          reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_if           reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_case         reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_while        reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_for          reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    TK_field        reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_begin        reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_print        reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    $end            reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_end          reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_else         reduce using rule 10 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)


state 49

    (11) INSTRUCTION -> DELETETAB TK_semicolon .

    RW_break        reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_continue     reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_return       reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_create       reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_alter        reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_drop         reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_insert       reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_update       reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_truncate     reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_delete       reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_select       reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_declare      reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_set          reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_if           reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_case         reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_while        reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_for          reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    TK_field        reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_begin        reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_print        reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    $end            reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_end          reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_else         reduce using rule 11 (INSTRUCTION -> DELETETAB TK_semicolon .)


state 50

    (12) INSTRUCTION -> SELECT TK_semicolon .

    RW_break        reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_continue     reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_return       reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_create       reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_alter        reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_drop         reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_insert       reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_update       reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_truncate     reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_delete       reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_select       reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_declare      reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_set          reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_if           reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_case         reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_while        reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_for          reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    TK_field        reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_begin        reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_print        reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    $end            reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_end          reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_else         reduce using rule 12 (INSTRUCTION -> SELECT TK_semicolon .)


state 51

    (13) INSTRUCTION -> DECLAREID TK_semicolon .

    RW_break        reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_continue     reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_return       reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_create       reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_alter        reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_drop         reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_insert       reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_update       reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_truncate     reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_delete       reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_select       reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_declare      reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_set          reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_if           reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_case         reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_while        reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_for          reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    TK_field        reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_begin        reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_print        reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    $end            reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_end          reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_else         reduce using rule 13 (INSTRUCTION -> DECLAREID TK_semicolon .)


state 52

    (14) INSTRUCTION -> ASIGNID TK_semicolon .

    RW_break        reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_continue     reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_return       reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_create       reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_alter        reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_drop         reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_insert       reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_update       reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_truncate     reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_delete       reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_select       reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_declare      reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_set          reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_if           reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_case         reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_while        reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_for          reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    TK_field        reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_begin        reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_print        reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    $end            reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_end          reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_else         reduce using rule 14 (INSTRUCTION -> ASIGNID TK_semicolon .)


state 53

    (15) INSTRUCTION -> IFSTRUCT TK_semicolon .

    RW_break        reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_continue     reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_return       reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_create       reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_alter        reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_drop         reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_insert       reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_update       reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_delete       reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_select       reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_declare      reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_set          reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_if           reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_case         reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_while        reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_for          reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    TK_field        reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_begin        reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_print        reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    $end            reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_end          reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_else         reduce using rule 15 (INSTRUCTION -> IFSTRUCT TK_semicolon .)


state 54

    (16) INSTRUCTION -> CASESTRUCT_S TK_semicolon .

    RW_break        reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_continue     reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_return       reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_create       reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_alter        reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_drop         reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_insert       reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_update       reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_truncate     reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_delete       reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_select       reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_declare      reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_set          reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_if           reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_case         reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_while        reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_for          reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    TK_field        reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_begin        reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_print        reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    $end            reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_end          reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_else         reduce using rule 16 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)


state 55

    (17) INSTRUCTION -> WHILESTRUCT TK_semicolon .

    RW_break        reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_continue     reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_return       reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_create       reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_alter        reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_drop         reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_insert       reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_update       reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_delete       reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_select       reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_declare      reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_set          reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_if           reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_case         reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_while        reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_for          reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    TK_field        reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_begin        reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_print        reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    $end            reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_end          reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_else         reduce using rule 17 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)


state 56

    (18) INSTRUCTION -> FORSTRUCT TK_semicolon .

    RW_break        reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_continue     reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_return       reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_create       reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_alter        reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_drop         reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_insert       reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_update       reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_delete       reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_select       reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_declare      reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_set          reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_if           reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_case         reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_while        reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_for          reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    TK_field        reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_begin        reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_print        reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    $end            reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_end          reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_else         reduce using rule 18 (INSTRUCTION -> FORSTRUCT TK_semicolon .)


state 57

    (19) INSTRUCTION -> FUNCDEC TK_semicolon .

    RW_break        reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_continue     reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_return       reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_create       reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_alter        reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_drop         reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_insert       reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_update       reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_truncate     reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_delete       reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_select       reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_declare      reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_set          reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_if           reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_case         reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_while        reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_for          reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    TK_field        reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_begin        reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_print        reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    $end            reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_end          reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_else         reduce using rule 19 (INSTRUCTION -> FUNCDEC TK_semicolon .)


state 58

    (20) INSTRUCTION -> CALLFUNC TK_semicolon .

    RW_break        reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_continue     reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_return       reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_create       reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_alter        reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_drop         reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_insert       reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_update       reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_truncate     reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_delete       reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_select       reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_declare      reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_set          reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_if           reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_case         reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_while        reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_for          reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    TK_field        reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_begin        reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_print        reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    $end            reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_end          reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_else         reduce using rule 20 (INSTRUCTION -> CALLFUNC TK_semicolon .)


state 59

    (21) INSTRUCTION -> ENCAP TK_semicolon .

    RW_break        reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_continue     reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_return       reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_create       reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_alter        reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_drop         reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_insert       reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_update       reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_truncate     reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_delete       reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_select       reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_declare      reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_set          reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_if           reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_case         reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_while        reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_for          reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    TK_field        reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_begin        reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_print        reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    $end            reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_end          reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_else         reduce using rule 21 (INSTRUCTION -> ENCAP TK_semicolon .)


state 60

    (22) INSTRUCTION -> PRINT TK_semicolon .

    RW_break        reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_continue     reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_return       reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_create       reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_alter        reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_drop         reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_insert       reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_update       reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_truncate     reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_delete       reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_select       reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_declare      reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_set          reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_if           reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_case         reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_while        reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_for          reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    TK_field        reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_begin        reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_print        reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    $end            reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_end          reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_else         reduce using rule 22 (INSTRUCTION -> PRINT TK_semicolon .)


state 61

    (23) INSTRUCTION -> RW_break TK_semicolon .

    RW_break        reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_continue     reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_return       reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_create       reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_alter        reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_drop         reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_insert       reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_update       reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_truncate     reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_delete       reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_select       reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_declare      reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_set          reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_if           reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_case         reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_while        reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_for          reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    TK_field        reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_begin        reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_print        reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    $end            reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_end          reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_else         reduce using rule 23 (INSTRUCTION -> RW_break TK_semicolon .)


state 62

    (24) INSTRUCTION -> RW_continue TK_semicolon .

    RW_break        reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_continue     reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_return       reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_create       reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_alter        reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_drop         reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_insert       reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_update       reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_truncate     reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_delete       reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_select       reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_declare      reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_set          reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_if           reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_case         reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_while        reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_for          reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    TK_field        reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_begin        reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_print        reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    $end            reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_end          reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_else         reduce using rule 24 (INSTRUCTION -> RW_continue TK_semicolon .)


state 63

    (25) INSTRUCTION -> RW_return EXP . TK_semicolon
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    shift and go to state 115
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 64

    (26) INSTRUCTION -> RW_return TK_semicolon .

    RW_break        reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_continue     reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_return       reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_create       reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_alter        reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_drop         reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_insert       reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_update       reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_truncate     reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_delete       reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_select       reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_declare      reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_set          reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_if           reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_case         reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_while        reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_for          reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    TK_field        reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_begin        reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_print        reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    $end            reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_end          reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_else         reduce using rule 26 (INSTRUCTION -> RW_return TK_semicolon .)


state 65

    (98) EXP -> ARITHMETICS .

    TK_semicolon    reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_plus         reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_minus        reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_mult         reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_div          reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_mod          reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_equal        reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_notequal     reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_lessequal    reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_greatequal   reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_less         reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_great        reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_and          reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_or           reduce using rule 98 (EXP -> ARITHMETICS .)
    RW_as           reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_comma        reduce using rule 98 (EXP -> ARITHMETICS .)
    RW_from         reduce using rule 98 (EXP -> ARITHMETICS .)
    RW_then         reduce using rule 98 (EXP -> ARITHMETICS .)
    RW_begin        reduce using rule 98 (EXP -> ARITHMETICS .)
    RW_else         reduce using rule 98 (EXP -> ARITHMETICS .)
    RW_when         reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_rpar         reduce using rule 98 (EXP -> ARITHMETICS .)
    RW_end          reduce using rule 98 (EXP -> ARITHMETICS .)
    TK_dot          reduce using rule 98 (EXP -> ARITHMETICS .)
    RW_where        reduce using rule 98 (EXP -> ARITHMETICS .)


state 66

    (99) EXP -> RELATIONALS .

    TK_semicolon    reduce using rule 99 (EXP -> RELATIONALS .)
    TK_plus         reduce using rule 99 (EXP -> RELATIONALS .)
    TK_minus        reduce using rule 99 (EXP -> RELATIONALS .)
    TK_mult         reduce using rule 99 (EXP -> RELATIONALS .)
    TK_div          reduce using rule 99 (EXP -> RELATIONALS .)
    TK_mod          reduce using rule 99 (EXP -> RELATIONALS .)
    TK_equal        reduce using rule 99 (EXP -> RELATIONALS .)
    TK_notequal     reduce using rule 99 (EXP -> RELATIONALS .)
    TK_lessequal    reduce using rule 99 (EXP -> RELATIONALS .)
    TK_greatequal   reduce using rule 99 (EXP -> RELATIONALS .)
    TK_less         reduce using rule 99 (EXP -> RELATIONALS .)
    TK_great        reduce using rule 99 (EXP -> RELATIONALS .)
    TK_and          reduce using rule 99 (EXP -> RELATIONALS .)
    TK_or           reduce using rule 99 (EXP -> RELATIONALS .)
    RW_as           reduce using rule 99 (EXP -> RELATIONALS .)
    TK_comma        reduce using rule 99 (EXP -> RELATIONALS .)
    RW_from         reduce using rule 99 (EXP -> RELATIONALS .)
    RW_then         reduce using rule 99 (EXP -> RELATIONALS .)
    RW_begin        reduce using rule 99 (EXP -> RELATIONALS .)
    RW_else         reduce using rule 99 (EXP -> RELATIONALS .)
    RW_when         reduce using rule 99 (EXP -> RELATIONALS .)
    TK_rpar         reduce using rule 99 (EXP -> RELATIONALS .)
    RW_end          reduce using rule 99 (EXP -> RELATIONALS .)
    TK_dot          reduce using rule 99 (EXP -> RELATIONALS .)
    RW_where        reduce using rule 99 (EXP -> RELATIONALS .)


state 67

    (100) EXP -> LOGICS .

    TK_semicolon    reduce using rule 100 (EXP -> LOGICS .)
    TK_plus         reduce using rule 100 (EXP -> LOGICS .)
    TK_minus        reduce using rule 100 (EXP -> LOGICS .)
    TK_mult         reduce using rule 100 (EXP -> LOGICS .)
    TK_div          reduce using rule 100 (EXP -> LOGICS .)
    TK_mod          reduce using rule 100 (EXP -> LOGICS .)
    TK_equal        reduce using rule 100 (EXP -> LOGICS .)
    TK_notequal     reduce using rule 100 (EXP -> LOGICS .)
    TK_lessequal    reduce using rule 100 (EXP -> LOGICS .)
    TK_greatequal   reduce using rule 100 (EXP -> LOGICS .)
    TK_less         reduce using rule 100 (EXP -> LOGICS .)
    TK_great        reduce using rule 100 (EXP -> LOGICS .)
    TK_and          reduce using rule 100 (EXP -> LOGICS .)
    TK_or           reduce using rule 100 (EXP -> LOGICS .)
    RW_as           reduce using rule 100 (EXP -> LOGICS .)
    TK_comma        reduce using rule 100 (EXP -> LOGICS .)
    RW_from         reduce using rule 100 (EXP -> LOGICS .)
    RW_then         reduce using rule 100 (EXP -> LOGICS .)
    RW_begin        reduce using rule 100 (EXP -> LOGICS .)
    RW_else         reduce using rule 100 (EXP -> LOGICS .)
    RW_when         reduce using rule 100 (EXP -> LOGICS .)
    TK_rpar         reduce using rule 100 (EXP -> LOGICS .)
    RW_end          reduce using rule 100 (EXP -> LOGICS .)
    TK_dot          reduce using rule 100 (EXP -> LOGICS .)
    RW_where        reduce using rule 100 (EXP -> LOGICS .)


state 68

    (101) EXP -> CAST .

    TK_semicolon    reduce using rule 101 (EXP -> CAST .)
    TK_plus         reduce using rule 101 (EXP -> CAST .)
    TK_minus        reduce using rule 101 (EXP -> CAST .)
    TK_mult         reduce using rule 101 (EXP -> CAST .)
    TK_div          reduce using rule 101 (EXP -> CAST .)
    TK_mod          reduce using rule 101 (EXP -> CAST .)
    TK_equal        reduce using rule 101 (EXP -> CAST .)
    TK_notequal     reduce using rule 101 (EXP -> CAST .)
    TK_lessequal    reduce using rule 101 (EXP -> CAST .)
    TK_greatequal   reduce using rule 101 (EXP -> CAST .)
    TK_less         reduce using rule 101 (EXP -> CAST .)
    TK_great        reduce using rule 101 (EXP -> CAST .)
    TK_and          reduce using rule 101 (EXP -> CAST .)
    TK_or           reduce using rule 101 (EXP -> CAST .)
    RW_as           reduce using rule 101 (EXP -> CAST .)
    TK_comma        reduce using rule 101 (EXP -> CAST .)
    RW_from         reduce using rule 101 (EXP -> CAST .)
    RW_then         reduce using rule 101 (EXP -> CAST .)
    RW_begin        reduce using rule 101 (EXP -> CAST .)
    RW_else         reduce using rule 101 (EXP -> CAST .)
    RW_when         reduce using rule 101 (EXP -> CAST .)
    TK_rpar         reduce using rule 101 (EXP -> CAST .)
    RW_end          reduce using rule 101 (EXP -> CAST .)
    TK_dot          reduce using rule 101 (EXP -> CAST .)
    RW_where        reduce using rule 101 (EXP -> CAST .)


state 69

    (102) EXP -> NATIVEFUNC .

    TK_semicolon    reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_plus         reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_minus        reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_mult         reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_div          reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_mod          reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_equal        reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_notequal     reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_lessequal    reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_greatequal   reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_less         reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_great        reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_and          reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_or           reduce using rule 102 (EXP -> NATIVEFUNC .)
    RW_as           reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_comma        reduce using rule 102 (EXP -> NATIVEFUNC .)
    RW_from         reduce using rule 102 (EXP -> NATIVEFUNC .)
    RW_then         reduce using rule 102 (EXP -> NATIVEFUNC .)
    RW_begin        reduce using rule 102 (EXP -> NATIVEFUNC .)
    RW_else         reduce using rule 102 (EXP -> NATIVEFUNC .)
    RW_when         reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_rpar         reduce using rule 102 (EXP -> NATIVEFUNC .)
    RW_end          reduce using rule 102 (EXP -> NATIVEFUNC .)
    TK_dot          reduce using rule 102 (EXP -> NATIVEFUNC .)
    RW_where        reduce using rule 102 (EXP -> NATIVEFUNC .)


state 70

    (103) EXP -> CALLFUNC .

    TK_semicolon    reduce using rule 103 (EXP -> CALLFUNC .)
    TK_plus         reduce using rule 103 (EXP -> CALLFUNC .)
    TK_minus        reduce using rule 103 (EXP -> CALLFUNC .)
    TK_mult         reduce using rule 103 (EXP -> CALLFUNC .)
    TK_div          reduce using rule 103 (EXP -> CALLFUNC .)
    TK_mod          reduce using rule 103 (EXP -> CALLFUNC .)
    TK_equal        reduce using rule 103 (EXP -> CALLFUNC .)
    TK_notequal     reduce using rule 103 (EXP -> CALLFUNC .)
    TK_lessequal    reduce using rule 103 (EXP -> CALLFUNC .)
    TK_greatequal   reduce using rule 103 (EXP -> CALLFUNC .)
    TK_less         reduce using rule 103 (EXP -> CALLFUNC .)
    TK_great        reduce using rule 103 (EXP -> CALLFUNC .)
    TK_and          reduce using rule 103 (EXP -> CALLFUNC .)
    TK_or           reduce using rule 103 (EXP -> CALLFUNC .)
    RW_as           reduce using rule 103 (EXP -> CALLFUNC .)
    TK_comma        reduce using rule 103 (EXP -> CALLFUNC .)
    RW_from         reduce using rule 103 (EXP -> CALLFUNC .)
    RW_then         reduce using rule 103 (EXP -> CALLFUNC .)
    RW_begin        reduce using rule 103 (EXP -> CALLFUNC .)
    RW_else         reduce using rule 103 (EXP -> CALLFUNC .)
    RW_when         reduce using rule 103 (EXP -> CALLFUNC .)
    TK_rpar         reduce using rule 103 (EXP -> CALLFUNC .)
    RW_end          reduce using rule 103 (EXP -> CALLFUNC .)
    TK_dot          reduce using rule 103 (EXP -> CALLFUNC .)
    RW_where        reduce using rule 103 (EXP -> CALLFUNC .)


state 71

    (104) EXP -> TK_id .

    TK_semicolon    reduce using rule 104 (EXP -> TK_id .)
    TK_plus         reduce using rule 104 (EXP -> TK_id .)
    TK_minus        reduce using rule 104 (EXP -> TK_id .)
    TK_mult         reduce using rule 104 (EXP -> TK_id .)
    TK_div          reduce using rule 104 (EXP -> TK_id .)
    TK_mod          reduce using rule 104 (EXP -> TK_id .)
    TK_equal        reduce using rule 104 (EXP -> TK_id .)
    TK_notequal     reduce using rule 104 (EXP -> TK_id .)
    TK_lessequal    reduce using rule 104 (EXP -> TK_id .)
    TK_greatequal   reduce using rule 104 (EXP -> TK_id .)
    TK_less         reduce using rule 104 (EXP -> TK_id .)
    TK_great        reduce using rule 104 (EXP -> TK_id .)
    TK_and          reduce using rule 104 (EXP -> TK_id .)
    TK_or           reduce using rule 104 (EXP -> TK_id .)
    RW_as           reduce using rule 104 (EXP -> TK_id .)
    TK_comma        reduce using rule 104 (EXP -> TK_id .)
    RW_from         reduce using rule 104 (EXP -> TK_id .)
    RW_then         reduce using rule 104 (EXP -> TK_id .)
    RW_begin        reduce using rule 104 (EXP -> TK_id .)
    RW_else         reduce using rule 104 (EXP -> TK_id .)
    RW_when         reduce using rule 104 (EXP -> TK_id .)
    TK_rpar         reduce using rule 104 (EXP -> TK_id .)
    RW_end          reduce using rule 104 (EXP -> TK_id .)
    TK_dot          reduce using rule 104 (EXP -> TK_id .)
    RW_where        reduce using rule 104 (EXP -> TK_id .)


state 72

    (105) EXP -> TK_field .
    (94) CALLFUNC -> TK_field . TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> TK_field . TK_lpar TK_rpar

    TK_semicolon    reduce using rule 105 (EXP -> TK_field .)
    TK_plus         reduce using rule 105 (EXP -> TK_field .)
    TK_minus        reduce using rule 105 (EXP -> TK_field .)
    TK_mult         reduce using rule 105 (EXP -> TK_field .)
    TK_div          reduce using rule 105 (EXP -> TK_field .)
    TK_mod          reduce using rule 105 (EXP -> TK_field .)
    TK_equal        reduce using rule 105 (EXP -> TK_field .)
    TK_notequal     reduce using rule 105 (EXP -> TK_field .)
    TK_lessequal    reduce using rule 105 (EXP -> TK_field .)
    TK_greatequal   reduce using rule 105 (EXP -> TK_field .)
    TK_less         reduce using rule 105 (EXP -> TK_field .)
    TK_great        reduce using rule 105 (EXP -> TK_field .)
    TK_and          reduce using rule 105 (EXP -> TK_field .)
    TK_or           reduce using rule 105 (EXP -> TK_field .)
    RW_as           reduce using rule 105 (EXP -> TK_field .)
    TK_comma        reduce using rule 105 (EXP -> TK_field .)
    RW_from         reduce using rule 105 (EXP -> TK_field .)
    RW_then         reduce using rule 105 (EXP -> TK_field .)
    RW_begin        reduce using rule 105 (EXP -> TK_field .)
    RW_else         reduce using rule 105 (EXP -> TK_field .)
    RW_when         reduce using rule 105 (EXP -> TK_field .)
    TK_rpar         reduce using rule 105 (EXP -> TK_field .)
    RW_end          reduce using rule 105 (EXP -> TK_field .)
    TK_dot          reduce using rule 105 (EXP -> TK_field .)
    RW_where        reduce using rule 105 (EXP -> TK_field .)
    TK_lpar         shift and go to state 86


state 73

    (106) EXP -> TK_nvarchar .

    TK_semicolon    reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_plus         reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_minus        reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_mult         reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_div          reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_mod          reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_equal        reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_notequal     reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_lessequal    reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_greatequal   reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_less         reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_great        reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_and          reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_or           reduce using rule 106 (EXP -> TK_nvarchar .)
    RW_as           reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_comma        reduce using rule 106 (EXP -> TK_nvarchar .)
    RW_from         reduce using rule 106 (EXP -> TK_nvarchar .)
    RW_then         reduce using rule 106 (EXP -> TK_nvarchar .)
    RW_begin        reduce using rule 106 (EXP -> TK_nvarchar .)
    RW_else         reduce using rule 106 (EXP -> TK_nvarchar .)
    RW_when         reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_rpar         reduce using rule 106 (EXP -> TK_nvarchar .)
    RW_end          reduce using rule 106 (EXP -> TK_nvarchar .)
    TK_dot          reduce using rule 106 (EXP -> TK_nvarchar .)
    RW_where        reduce using rule 106 (EXP -> TK_nvarchar .)


state 74

    (107) EXP -> TK_int .

    TK_semicolon    reduce using rule 107 (EXP -> TK_int .)
    TK_plus         reduce using rule 107 (EXP -> TK_int .)
    TK_minus        reduce using rule 107 (EXP -> TK_int .)
    TK_mult         reduce using rule 107 (EXP -> TK_int .)
    TK_div          reduce using rule 107 (EXP -> TK_int .)
    TK_mod          reduce using rule 107 (EXP -> TK_int .)
    TK_equal        reduce using rule 107 (EXP -> TK_int .)
    TK_notequal     reduce using rule 107 (EXP -> TK_int .)
    TK_lessequal    reduce using rule 107 (EXP -> TK_int .)
    TK_greatequal   reduce using rule 107 (EXP -> TK_int .)
    TK_less         reduce using rule 107 (EXP -> TK_int .)
    TK_great        reduce using rule 107 (EXP -> TK_int .)
    TK_and          reduce using rule 107 (EXP -> TK_int .)
    TK_or           reduce using rule 107 (EXP -> TK_int .)
    RW_as           reduce using rule 107 (EXP -> TK_int .)
    TK_comma        reduce using rule 107 (EXP -> TK_int .)
    RW_from         reduce using rule 107 (EXP -> TK_int .)
    RW_then         reduce using rule 107 (EXP -> TK_int .)
    RW_begin        reduce using rule 107 (EXP -> TK_int .)
    RW_else         reduce using rule 107 (EXP -> TK_int .)
    RW_when         reduce using rule 107 (EXP -> TK_int .)
    TK_rpar         reduce using rule 107 (EXP -> TK_int .)
    RW_end          reduce using rule 107 (EXP -> TK_int .)
    TK_dot          reduce using rule 107 (EXP -> TK_int .)
    RW_where        reduce using rule 107 (EXP -> TK_int .)


state 75

    (108) EXP -> TK_decimal .

    TK_semicolon    reduce using rule 108 (EXP -> TK_decimal .)
    TK_plus         reduce using rule 108 (EXP -> TK_decimal .)
    TK_minus        reduce using rule 108 (EXP -> TK_decimal .)
    TK_mult         reduce using rule 108 (EXP -> TK_decimal .)
    TK_div          reduce using rule 108 (EXP -> TK_decimal .)
    TK_mod          reduce using rule 108 (EXP -> TK_decimal .)
    TK_equal        reduce using rule 108 (EXP -> TK_decimal .)
    TK_notequal     reduce using rule 108 (EXP -> TK_decimal .)
    TK_lessequal    reduce using rule 108 (EXP -> TK_decimal .)
    TK_greatequal   reduce using rule 108 (EXP -> TK_decimal .)
    TK_less         reduce using rule 108 (EXP -> TK_decimal .)
    TK_great        reduce using rule 108 (EXP -> TK_decimal .)
    TK_and          reduce using rule 108 (EXP -> TK_decimal .)
    TK_or           reduce using rule 108 (EXP -> TK_decimal .)
    RW_as           reduce using rule 108 (EXP -> TK_decimal .)
    TK_comma        reduce using rule 108 (EXP -> TK_decimal .)
    RW_from         reduce using rule 108 (EXP -> TK_decimal .)
    RW_then         reduce using rule 108 (EXP -> TK_decimal .)
    RW_begin        reduce using rule 108 (EXP -> TK_decimal .)
    RW_else         reduce using rule 108 (EXP -> TK_decimal .)
    RW_when         reduce using rule 108 (EXP -> TK_decimal .)
    TK_rpar         reduce using rule 108 (EXP -> TK_decimal .)
    RW_end          reduce using rule 108 (EXP -> TK_decimal .)
    TK_dot          reduce using rule 108 (EXP -> TK_decimal .)
    RW_where        reduce using rule 108 (EXP -> TK_decimal .)


state 76

    (109) EXP -> TK_date .

    TK_semicolon    reduce using rule 109 (EXP -> TK_date .)
    TK_plus         reduce using rule 109 (EXP -> TK_date .)
    TK_minus        reduce using rule 109 (EXP -> TK_date .)
    TK_mult         reduce using rule 109 (EXP -> TK_date .)
    TK_div          reduce using rule 109 (EXP -> TK_date .)
    TK_mod          reduce using rule 109 (EXP -> TK_date .)
    TK_equal        reduce using rule 109 (EXP -> TK_date .)
    TK_notequal     reduce using rule 109 (EXP -> TK_date .)
    TK_lessequal    reduce using rule 109 (EXP -> TK_date .)
    TK_greatequal   reduce using rule 109 (EXP -> TK_date .)
    TK_less         reduce using rule 109 (EXP -> TK_date .)
    TK_great        reduce using rule 109 (EXP -> TK_date .)
    TK_and          reduce using rule 109 (EXP -> TK_date .)
    TK_or           reduce using rule 109 (EXP -> TK_date .)
    RW_as           reduce using rule 109 (EXP -> TK_date .)
    TK_comma        reduce using rule 109 (EXP -> TK_date .)
    RW_from         reduce using rule 109 (EXP -> TK_date .)
    RW_then         reduce using rule 109 (EXP -> TK_date .)
    RW_begin        reduce using rule 109 (EXP -> TK_date .)
    RW_else         reduce using rule 109 (EXP -> TK_date .)
    RW_when         reduce using rule 109 (EXP -> TK_date .)
    TK_rpar         reduce using rule 109 (EXP -> TK_date .)
    RW_end          reduce using rule 109 (EXP -> TK_date .)
    TK_dot          reduce using rule 109 (EXP -> TK_date .)
    RW_where        reduce using rule 109 (EXP -> TK_date .)


state 77

    (110) EXP -> RW_null .

    TK_semicolon    reduce using rule 110 (EXP -> RW_null .)
    TK_plus         reduce using rule 110 (EXP -> RW_null .)
    TK_minus        reduce using rule 110 (EXP -> RW_null .)
    TK_mult         reduce using rule 110 (EXP -> RW_null .)
    TK_div          reduce using rule 110 (EXP -> RW_null .)
    TK_mod          reduce using rule 110 (EXP -> RW_null .)
    TK_equal        reduce using rule 110 (EXP -> RW_null .)
    TK_notequal     reduce using rule 110 (EXP -> RW_null .)
    TK_lessequal    reduce using rule 110 (EXP -> RW_null .)
    TK_greatequal   reduce using rule 110 (EXP -> RW_null .)
    TK_less         reduce using rule 110 (EXP -> RW_null .)
    TK_great        reduce using rule 110 (EXP -> RW_null .)
    TK_and          reduce using rule 110 (EXP -> RW_null .)
    TK_or           reduce using rule 110 (EXP -> RW_null .)
    RW_as           reduce using rule 110 (EXP -> RW_null .)
    TK_comma        reduce using rule 110 (EXP -> RW_null .)
    RW_from         reduce using rule 110 (EXP -> RW_null .)
    RW_then         reduce using rule 110 (EXP -> RW_null .)
    RW_begin        reduce using rule 110 (EXP -> RW_null .)
    RW_else         reduce using rule 110 (EXP -> RW_null .)
    RW_when         reduce using rule 110 (EXP -> RW_null .)
    TK_rpar         reduce using rule 110 (EXP -> RW_null .)
    RW_end          reduce using rule 110 (EXP -> RW_null .)
    TK_dot          reduce using rule 110 (EXP -> RW_null .)
    RW_where        reduce using rule 110 (EXP -> RW_null .)


state 78

    (111) EXP -> TK_lpar . EXP TK_rpar
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 129
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 79

    (117) ARITHMETICS -> TK_minus . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 130
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 80

    (126) LOGICS -> TK_not . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 131
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 81

    (127) CAST -> RW_cas . TK_lpar EXP RW_as TYPE TK_rpar

    TK_lpar         shift and go to state 132


state 82

    (128) NATIVEFUNC -> RW_truncate . TK_lpar EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 133


state 83

    (43) CREATETABLE -> RW_create RW_table . TK_field TK_lpar ATTRIBUTES TK_rpar

    TK_field        shift and go to state 134


state 84

    (83) FUNCDEC -> RW_create RW_function . TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> RW_create RW_function . TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP

    TK_field        shift and go to state 135


state 85

    (85) FUNCDEC -> RW_create RW_procedure . TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> RW_create RW_procedure . TK_field RW_as ENCAP
    (87) FUNCDEC -> RW_create RW_procedure . TK_field PARAMS ENCAP
    (88) FUNCDEC -> RW_create RW_procedure . TK_field ENCAP

    TK_field        shift and go to state 136


state 86

    (94) CALLFUNC -> TK_field TK_lpar . ARGS TK_rpar
    (95) CALLFUNC -> TK_field TK_lpar . TK_rpar
    (96) ARGS -> . ARGS TK_comma EXP
    (97) ARGS -> . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_rpar         shift and go to state 138
    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    ARGS                           shift and go to state 137
    EXP                            shift and go to state 139
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 87

    (47) ALTERTAB -> RW_alter RW_table . TK_field ACTION

    TK_field        shift and go to state 140


state 88

    (52) DROPTAB -> RW_drop RW_table . TK_field

    TK_field        shift and go to state 141


state 89

    (53) INSERTREG -> RW_insert RW_into . TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    TK_field        shift and go to state 142


state 90

    (58) UPDATETAB -> RW_update TK_field . RW_set VALUESTAB RW_where EXP

    RW_set          shift and go to state 143


state 91

    (32) ASIGNID -> RW_set TK_id . TK_equal EXP

    TK_equal        shift and go to state 144


state 92

    (62) TRUNCATETAB -> RW_truncate RW_table . TK_field

    TK_field        shift and go to state 145


state 93

    (63) DELETETAB -> RW_delete RW_from . TK_field RW_where EXP

    TK_field        shift and go to state 146


state 94

    (33) SELECT -> RW_select FIELDS . RW_from TK_field RW_where EXP
    (34) SELECT -> RW_select FIELDS . RW_from TK_field

    RW_from         shift and go to state 147


state 95

    (40) IDS -> EXP . RW_as TK_nvarchar
    (41) IDS -> EXP . RW_as TK_field
    (42) IDS -> EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    RW_as           shift and go to state 148
    TK_comma        reduce using rule 42 (IDS -> EXP .)
    TK_semicolon    reduce using rule 42 (IDS -> EXP .)
    RW_from         reduce using rule 42 (IDS -> EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 96

    (35) SELECT -> RW_select LIST_IDS .
    (36) FIELDS -> LIST_IDS .
    (38) LIST_IDS -> LIST_IDS . TK_comma IDS

    TK_semicolon    reduce using rule 35 (SELECT -> RW_select LIST_IDS .)
    RW_from         reduce using rule 36 (FIELDS -> LIST_IDS .)
    TK_comma        shift and go to state 149


state 97

    (37) FIELDS -> TK_mult .

    RW_from         reduce using rule 37 (FIELDS -> TK_mult .)


state 98

    (39) LIST_IDS -> IDS .

    TK_comma        reduce using rule 39 (LIST_IDS -> IDS .)
    TK_semicolon    reduce using rule 39 (LIST_IDS -> IDS .)
    RW_from         reduce using rule 39 (LIST_IDS -> IDS .)


state 99

    (27) DECLAREID -> RW_declare DECLIDS .
    (29) DECLIDS -> DECLIDS . TK_comma DECLID

    TK_semicolon    reduce using rule 27 (DECLAREID -> RW_declare DECLIDS .)
    TK_comma        shift and go to state 150


state 100

    (28) DECLAREID -> RW_declare TK_id . TYPE TK_equal EXP
    (31) DECLID -> TK_id . TYPE
    (129) TYPE -> . RW_int
    (130) TYPE -> . RW_bit
    (131) TYPE -> . RW_decimal
    (132) TYPE -> . RW_date
    (133) TYPE -> . RW_nchar
    (134) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 152
    RW_bit          shift and go to state 153
    RW_decimal      shift and go to state 154
    RW_date         shift and go to state 155
    RW_nchar        shift and go to state 156
    RW_nvarchar     shift and go to state 157

    TYPE                           shift and go to state 151

state 101

    (30) DECLIDS -> DECLID .

    TK_comma        reduce using rule 30 (DECLIDS -> DECLID .)
    TK_semicolon    reduce using rule 30 (DECLIDS -> DECLID .)


state 102

    (64) IFSTRUCT -> RW_if EXP . RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> RW_if EXP . RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> RW_if EXP . RW_begin INSTRUCTIONS RW_end
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    RW_then         shift and go to state 158
    RW_begin        shift and go to state 159
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 103

    (92) ENCAP -> RW_begin INSTRUCTIONS . RW_end
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    RW_end          shift and go to state 160
    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INSTRUCTION                    shift and go to state 42
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 104

    (93) ENCAP -> RW_begin RW_end .

    TK_semicolon    reduce using rule 93 (ENCAP -> RW_begin RW_end .)
    RW_loop         reduce using rule 93 (ENCAP -> RW_begin RW_end .)


state 105

    (67) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP
    (73) WHENELSE -> . WHENS ELSE
    (74) WHENELSE -> . WHENS
    (75) WHENELSE -> . ELSE
    (76) WHENS -> . WHENS WHEN
    (77) WHENS -> . WHEN
    (79) ELSE -> . RW_else EXP
    (78) WHEN -> . RW_when EXP RW_then EXP

    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128
    RW_else         shift and go to state 110
    RW_when         shift and go to state 111

    WHENELSE                       shift and go to state 161
    WHENS                          shift and go to state 107
    ELSE                           shift and go to state 108
    WHEN                           shift and go to state 109

state 106

    (70) CASESTRUCT_S -> RW_case WHENELSE . RW_end RW_as TK_field
    (71) CASESTRUCT_S -> RW_case WHENELSE . RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> RW_case WHENELSE . RW_end

    RW_end          shift and go to state 162


state 107

    (73) WHENELSE -> WHENS . ELSE
    (74) WHENELSE -> WHENS .
    (76) WHENS -> WHENS . WHEN
    (79) ELSE -> . RW_else EXP
    (78) WHEN -> . RW_when EXP RW_then EXP

    RW_end          reduce using rule 74 (WHENELSE -> WHENS .)
    RW_else         shift and go to state 110
    RW_when         shift and go to state 111

    ELSE                           shift and go to state 163
    WHEN                           shift and go to state 164

state 108

    (75) WHENELSE -> ELSE .

    RW_end          reduce using rule 75 (WHENELSE -> ELSE .)


state 109

    (77) WHENS -> WHEN .

    RW_else         reduce using rule 77 (WHENS -> WHEN .)
    RW_when         reduce using rule 77 (WHENS -> WHEN .)
    RW_end          reduce using rule 77 (WHENS -> WHEN .)


state 110

    (79) ELSE -> RW_else . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 165
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 111

    (78) WHEN -> RW_when . EXP RW_then EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 166
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 112

    (81) WHILESTRUCT -> RW_while EXP . ENCAP
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end

    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128
    RW_begin        shift and go to state 37

    ENCAP                          shift and go to state 167

state 113

    (82) FORSTRUCT -> RW_for TK_id . RW_in EXP TK_dot EXP ENCAP RW_loop

    RW_in           shift and go to state 168


state 114

    (80) PRINT -> RW_print EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 80 (PRINT -> RW_print EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 115

    (25) INSTRUCTION -> RW_return EXP TK_semicolon .

    RW_break        reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_continue     reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_return       reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_create       reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_alter        reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_drop         reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_insert       reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_update       reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_truncate     reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_delete       reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_select       reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_declare      reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_set          reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_if           reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_case         reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_while        reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_for          reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    TK_field        reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_begin        reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_print        reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    $end            reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_end          reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_else         reduce using rule 25 (INSTRUCTION -> RW_return EXP TK_semicolon .)


state 116

    (112) ARITHMETICS -> EXP TK_plus . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 169
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 117

    (113) ARITHMETICS -> EXP TK_minus . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 170
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 118

    (114) ARITHMETICS -> EXP TK_mult . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 171
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 119

    (115) ARITHMETICS -> EXP TK_div . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 172
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 120

    (116) ARITHMETICS -> EXP TK_mod . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 173
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 121

    (118) RELATIONALS -> EXP TK_equal . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 174
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 122

    (119) RELATIONALS -> EXP TK_notequal . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 175
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 123

    (120) RELATIONALS -> EXP TK_lessequal . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 176
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 124

    (121) RELATIONALS -> EXP TK_greatequal . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 177
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 125

    (122) RELATIONALS -> EXP TK_less . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 178
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 126

    (123) RELATIONALS -> EXP TK_great . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 179
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 127

    (124) LOGICS -> EXP TK_and . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 180
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 128

    (125) LOGICS -> EXP TK_or . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 181
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 129

    (111) EXP -> TK_lpar EXP . TK_rpar
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 182
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 130

    (117) ARITHMETICS -> TK_minus EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_plus         reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_minus        reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_mult         reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_div          reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_mod          reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_equal        reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_notequal     reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_lessequal    reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_greatequal   reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_less         reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_great        reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_and          reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_or           reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    RW_as           reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_comma        reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    RW_from         reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    RW_then         reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    RW_begin        reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    RW_else         reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    RW_when         reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_rpar         reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    RW_end          reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    TK_dot          reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)
    RW_where        reduce using rule 117 (ARITHMETICS -> TK_minus EXP .)

  ! TK_plus         [ shift and go to state 116 ]
  ! TK_minus        [ shift and go to state 117 ]
  ! TK_mult         [ shift and go to state 118 ]
  ! TK_div          [ shift and go to state 119 ]
  ! TK_mod          [ shift and go to state 120 ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 131

    (126) LOGICS -> TK_not EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 126 (LOGICS -> TK_not EXP .)
    TK_and          reduce using rule 126 (LOGICS -> TK_not EXP .)
    TK_or           reduce using rule 126 (LOGICS -> TK_not EXP .)
    RW_as           reduce using rule 126 (LOGICS -> TK_not EXP .)
    TK_comma        reduce using rule 126 (LOGICS -> TK_not EXP .)
    RW_from         reduce using rule 126 (LOGICS -> TK_not EXP .)
    RW_then         reduce using rule 126 (LOGICS -> TK_not EXP .)
    RW_begin        reduce using rule 126 (LOGICS -> TK_not EXP .)
    RW_else         reduce using rule 126 (LOGICS -> TK_not EXP .)
    RW_when         reduce using rule 126 (LOGICS -> TK_not EXP .)
    TK_rpar         reduce using rule 126 (LOGICS -> TK_not EXP .)
    RW_end          reduce using rule 126 (LOGICS -> TK_not EXP .)
    TK_dot          reduce using rule 126 (LOGICS -> TK_not EXP .)
    RW_where        reduce using rule 126 (LOGICS -> TK_not EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126

  ! TK_plus         [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_minus        [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_mult         [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_div          [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_mod          [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_equal        [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_notequal     [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_lessequal    [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_greatequal   [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_less         [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_great        [ reduce using rule 126 (LOGICS -> TK_not EXP .) ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 132

    (127) CAST -> RW_cas TK_lpar . EXP RW_as TYPE TK_rpar
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 183
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 133

    (128) NATIVEFUNC -> RW_truncate TK_lpar . EXP TK_comma EXP TK_rpar
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 184
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 134

    (43) CREATETABLE -> RW_create RW_table TK_field . TK_lpar ATTRIBUTES TK_rpar

    TK_lpar         shift and go to state 185


state 135

    (83) FUNCDEC -> RW_create RW_function TK_field . TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> RW_create RW_function TK_field . TK_lpar TK_rpar RW_returns TYPE ENCAP

    TK_lpar         shift and go to state 186


state 136

    (85) FUNCDEC -> RW_create RW_procedure TK_field . PARAMS RW_as ENCAP
    (86) FUNCDEC -> RW_create RW_procedure TK_field . RW_as ENCAP
    (87) FUNCDEC -> RW_create RW_procedure TK_field . PARAMS ENCAP
    (88) FUNCDEC -> RW_create RW_procedure TK_field . ENCAP
    (89) PARAMS -> . PARAMS TK_comma PARAM
    (90) PARAMS -> . PARAM
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (91) PARAM -> . TK_id TYPE

    RW_as           shift and go to state 188
    RW_begin        shift and go to state 37
    TK_id           shift and go to state 191

    PARAMS                         shift and go to state 187
    ENCAP                          shift and go to state 189
    PARAM                          shift and go to state 190

state 137

    (94) CALLFUNC -> TK_field TK_lpar ARGS . TK_rpar
    (96) ARGS -> ARGS . TK_comma EXP

    TK_rpar         shift and go to state 192
    TK_comma        shift and go to state 193


state 138

    (95) CALLFUNC -> TK_field TK_lpar TK_rpar .

    TK_semicolon    reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_plus         reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_minus        reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_mult         reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_div          reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_mod          reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_equal        reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_notequal     reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_lessequal    reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_greatequal   reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_less         reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_great        reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_and          reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_or           reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_as           reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_comma        reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_from         reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_then         reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_begin        reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_else         reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_when         reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_rpar         reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_end          reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_dot          reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_where        reduce using rule 95 (CALLFUNC -> TK_field TK_lpar TK_rpar .)


state 139

    (97) ARGS -> EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 97 (ARGS -> EXP .)
    TK_comma        reduce using rule 97 (ARGS -> EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 140

    (47) ALTERTAB -> RW_alter RW_table TK_field . ACTION
    (48) ACTION -> . RW_add TK_field TYPE
    (49) ACTION -> . RW_drop RW_column TK_field
    (50) ACTION -> . RW_rename RW_to TK_field
    (51) ACTION -> . RW_rename RW_column TK_field RW_to TK_field

    RW_add          shift and go to state 195
    RW_drop         shift and go to state 196
    RW_rename       shift and go to state 197

    ACTION                         shift and go to state 194

state 141

    (52) DROPTAB -> RW_drop RW_table TK_field .

    TK_semicolon    reduce using rule 52 (DROPTAB -> RW_drop RW_table TK_field .)


state 142

    (53) INSERTREG -> RW_insert RW_into TK_field . TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    TK_lpar         shift and go to state 198


state 143

    (58) UPDATETAB -> RW_update TK_field RW_set . VALUESTAB RW_where EXP
    (59) VALUESTAB -> . VALUESTAB TK_comma VALUETAB
    (60) VALUESTAB -> . VALUETAB
    (61) VALUETAB -> . TK_field TK_equal EXP

    TK_field        shift and go to state 199

    VALUESTAB                      shift and go to state 200
    VALUETAB                       shift and go to state 201

state 144

    (32) ASIGNID -> RW_set TK_id TK_equal . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 202
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 145

    (62) TRUNCATETAB -> RW_truncate RW_table TK_field .

    TK_semicolon    reduce using rule 62 (TRUNCATETAB -> RW_truncate RW_table TK_field .)


state 146

    (63) DELETETAB -> RW_delete RW_from TK_field . RW_where EXP

    RW_where        shift and go to state 203


state 147

    (33) SELECT -> RW_select FIELDS RW_from . TK_field RW_where EXP
    (34) SELECT -> RW_select FIELDS RW_from . TK_field

    TK_field        shift and go to state 204


state 148

    (40) IDS -> EXP RW_as . TK_nvarchar
    (41) IDS -> EXP RW_as . TK_field

    TK_nvarchar     shift and go to state 205
    TK_field        shift and go to state 206


state 149

    (38) LIST_IDS -> LIST_IDS TK_comma . IDS
    (40) IDS -> . EXP RW_as TK_nvarchar
    (41) IDS -> . EXP RW_as TK_field
    (42) IDS -> . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    IDS                            shift and go to state 207
    EXP                            shift and go to state 95
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 150

    (29) DECLIDS -> DECLIDS TK_comma . DECLID
    (31) DECLID -> . TK_id TYPE

    TK_id           shift and go to state 209

    DECLID                         shift and go to state 208

state 151

    (28) DECLAREID -> RW_declare TK_id TYPE . TK_equal EXP
    (31) DECLID -> TK_id TYPE .

    TK_equal        shift and go to state 210
    TK_comma        reduce using rule 31 (DECLID -> TK_id TYPE .)
    TK_semicolon    reduce using rule 31 (DECLID -> TK_id TYPE .)


state 152

    (129) TYPE -> RW_int .

    TK_equal        reduce using rule 129 (TYPE -> RW_int .)
    TK_comma        reduce using rule 129 (TYPE -> RW_int .)
    TK_semicolon    reduce using rule 129 (TYPE -> RW_int .)
    RW_as           reduce using rule 129 (TYPE -> RW_int .)
    RW_begin        reduce using rule 129 (TYPE -> RW_int .)
    TK_rpar         reduce using rule 129 (TYPE -> RW_int .)


state 153

    (130) TYPE -> RW_bit .

    TK_equal        reduce using rule 130 (TYPE -> RW_bit .)
    TK_comma        reduce using rule 130 (TYPE -> RW_bit .)
    TK_semicolon    reduce using rule 130 (TYPE -> RW_bit .)
    RW_as           reduce using rule 130 (TYPE -> RW_bit .)
    RW_begin        reduce using rule 130 (TYPE -> RW_bit .)
    TK_rpar         reduce using rule 130 (TYPE -> RW_bit .)


state 154

    (131) TYPE -> RW_decimal .

    TK_equal        reduce using rule 131 (TYPE -> RW_decimal .)
    TK_comma        reduce using rule 131 (TYPE -> RW_decimal .)
    TK_semicolon    reduce using rule 131 (TYPE -> RW_decimal .)
    RW_as           reduce using rule 131 (TYPE -> RW_decimal .)
    RW_begin        reduce using rule 131 (TYPE -> RW_decimal .)
    TK_rpar         reduce using rule 131 (TYPE -> RW_decimal .)


state 155

    (132) TYPE -> RW_date .

    TK_equal        reduce using rule 132 (TYPE -> RW_date .)
    TK_comma        reduce using rule 132 (TYPE -> RW_date .)
    TK_semicolon    reduce using rule 132 (TYPE -> RW_date .)
    RW_as           reduce using rule 132 (TYPE -> RW_date .)
    RW_begin        reduce using rule 132 (TYPE -> RW_date .)
    TK_rpar         reduce using rule 132 (TYPE -> RW_date .)


state 156

    (133) TYPE -> RW_nchar .

    TK_equal        reduce using rule 133 (TYPE -> RW_nchar .)
    TK_comma        reduce using rule 133 (TYPE -> RW_nchar .)
    TK_semicolon    reduce using rule 133 (TYPE -> RW_nchar .)
    RW_as           reduce using rule 133 (TYPE -> RW_nchar .)
    RW_begin        reduce using rule 133 (TYPE -> RW_nchar .)
    TK_rpar         reduce using rule 133 (TYPE -> RW_nchar .)


state 157

    (134) TYPE -> RW_nvarchar .

    TK_equal        reduce using rule 134 (TYPE -> RW_nvarchar .)
    TK_comma        reduce using rule 134 (TYPE -> RW_nvarchar .)
    TK_semicolon    reduce using rule 134 (TYPE -> RW_nvarchar .)
    RW_as           reduce using rule 134 (TYPE -> RW_nvarchar .)
    RW_begin        reduce using rule 134 (TYPE -> RW_nvarchar .)
    TK_rpar         reduce using rule 134 (TYPE -> RW_nvarchar .)


state 158

    (64) IFSTRUCT -> RW_if EXP RW_then . INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> RW_if EXP RW_then . INSTRUCTIONS RW_end RW_if
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INSTRUCTIONS                   shift and go to state 211
    INSTRUCTION                    shift and go to state 3
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 159

    (66) IFSTRUCT -> RW_if EXP RW_begin . INSTRUCTIONS RW_end
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INSTRUCTIONS                   shift and go to state 212
    INSTRUCTION                    shift and go to state 3
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 160

    (92) ENCAP -> RW_begin INSTRUCTIONS RW_end .

    TK_semicolon    reduce using rule 92 (ENCAP -> RW_begin INSTRUCTIONS RW_end .)
    RW_loop         reduce using rule 92 (ENCAP -> RW_begin INSTRUCTIONS RW_end .)


state 161

    (67) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end RW_as TK_field
    (68) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end

    RW_end          shift and go to state 213


state 162

    (70) CASESTRUCT_S -> RW_case WHENELSE RW_end . RW_as TK_field
    (71) CASESTRUCT_S -> RW_case WHENELSE RW_end . RW_as TK_nvarchar
    (72) CASESTRUCT_S -> RW_case WHENELSE RW_end .

    RW_as           shift and go to state 214
    TK_semicolon    reduce using rule 72 (CASESTRUCT_S -> RW_case WHENELSE RW_end .)


state 163

    (73) WHENELSE -> WHENS ELSE .

    RW_end          reduce using rule 73 (WHENELSE -> WHENS ELSE .)


state 164

    (76) WHENS -> WHENS WHEN .

    RW_else         reduce using rule 76 (WHENS -> WHENS WHEN .)
    RW_when         reduce using rule 76 (WHENS -> WHENS WHEN .)
    RW_end          reduce using rule 76 (WHENS -> WHENS WHEN .)


state 165

    (79) ELSE -> RW_else EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    RW_end          reduce using rule 79 (ELSE -> RW_else EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 166

    (78) WHEN -> RW_when EXP . RW_then EXP
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    RW_then         shift and go to state 215
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 167

    (81) WHILESTRUCT -> RW_while EXP ENCAP .

    TK_semicolon    reduce using rule 81 (WHILESTRUCT -> RW_while EXP ENCAP .)


state 168

    (82) FORSTRUCT -> RW_for TK_id RW_in . EXP TK_dot EXP ENCAP RW_loop
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 216
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 169

    (112) ARITHMETICS -> EXP TK_plus EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_plus         reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_minus        reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_equal        reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_notequal     reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_lessequal    reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_greatequal   reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_less         reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_great        reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_and          reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_or           reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_as           reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_comma        reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_from         reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_then         reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_begin        reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_else         reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_when         reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_rpar         reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_end          reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_dot          reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_where        reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120

  ! TK_mult         [ reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_div          [ reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_mod          [ reduce using rule 112 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_plus         [ shift and go to state 116 ]
  ! TK_minus        [ shift and go to state 117 ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 170

    (113) ARITHMETICS -> EXP TK_minus EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_plus         reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_minus        reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_equal        reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_notequal     reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_lessequal    reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_greatequal   reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_less         reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_great        reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_and          reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_or           reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_as           reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_comma        reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_from         reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_then         reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_begin        reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_else         reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_when         reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_rpar         reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_end          reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_dot          reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_where        reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120

  ! TK_mult         [ reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_div          [ reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_mod          [ reduce using rule 113 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_plus         [ shift and go to state 116 ]
  ! TK_minus        [ shift and go to state 117 ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 171

    (114) ARITHMETICS -> EXP TK_mult EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_plus         reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_minus        reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_mult         reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_div          reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_mod          reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_equal        reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_notequal     reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_lessequal    reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_greatequal   reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_less         reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_great        reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_and          reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_or           reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_as           reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_comma        reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_from         reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_then         reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_begin        reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_else         reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_when         reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_rpar         reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_end          reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_dot          reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_where        reduce using rule 114 (ARITHMETICS -> EXP TK_mult EXP .)

  ! TK_plus         [ shift and go to state 116 ]
  ! TK_minus        [ shift and go to state 117 ]
  ! TK_mult         [ shift and go to state 118 ]
  ! TK_div          [ shift and go to state 119 ]
  ! TK_mod          [ shift and go to state 120 ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 172

    (115) ARITHMETICS -> EXP TK_div EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_plus         reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_minus        reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_mult         reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_div          reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_mod          reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_equal        reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_notequal     reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_lessequal    reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_greatequal   reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_less         reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_great        reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_and          reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_or           reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    RW_as           reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_comma        reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    RW_from         reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    RW_then         reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    RW_begin        reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    RW_else         reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    RW_when         reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_rpar         reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    RW_end          reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    TK_dot          reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)
    RW_where        reduce using rule 115 (ARITHMETICS -> EXP TK_div EXP .)

  ! TK_plus         [ shift and go to state 116 ]
  ! TK_minus        [ shift and go to state 117 ]
  ! TK_mult         [ shift and go to state 118 ]
  ! TK_div          [ shift and go to state 119 ]
  ! TK_mod          [ shift and go to state 120 ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 173

    (116) ARITHMETICS -> EXP TK_mod EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_plus         reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_minus        reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_mult         reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_div          reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_mod          reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_equal        reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_notequal     reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_lessequal    reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_greatequal   reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_less         reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_great        reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_and          reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_or           reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_as           reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_comma        reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_from         reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_then         reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_begin        reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_else         reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_when         reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_rpar         reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_end          reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_dot          reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_where        reduce using rule 116 (ARITHMETICS -> EXP TK_mod EXP .)

  ! TK_plus         [ shift and go to state 116 ]
  ! TK_minus        [ shift and go to state 117 ]
  ! TK_mult         [ shift and go to state 118 ]
  ! TK_div          [ shift and go to state 119 ]
  ! TK_mod          [ shift and go to state 120 ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 174

    (118) RELATIONALS -> EXP TK_equal EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    TK_equal        reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    TK_notequal     reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    TK_and          reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    TK_or           reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    RW_as           reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    TK_comma        reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    RW_from         reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    RW_then         reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    RW_begin        reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    RW_else         reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    RW_when         reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    TK_rpar         reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    RW_end          reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    TK_dot          reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    RW_where        reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126

  ! TK_plus         [ reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_minus        [ reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_mult         [ reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_div          [ reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_mod          [ reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_lessequal    [ reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_greatequal   [ reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_less         [ reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_great        [ reduce using rule 118 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 175

    (119) RELATIONALS -> EXP TK_notequal EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_equal        reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_notequal     reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_and          reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_or           reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_as           reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_comma        reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_from         reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_then         reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_begin        reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_else         reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_when         reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_rpar         reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_end          reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_dot          reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_where        reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126

  ! TK_plus         [ reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_minus        [ reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_mult         [ reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_div          [ reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_mod          [ reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_lessequal    [ reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_greatequal   [ reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_less         [ reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_great        [ reduce using rule 119 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 176

    (120) RELATIONALS -> EXP TK_lessequal EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_equal        reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_notequal     reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_lessequal    reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_greatequal   reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_less         reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_great        reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_and          reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_or           reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_as           reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_comma        reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_from         reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_then         reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_begin        reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_else         reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_when         reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_rpar         reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_end          reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_dot          reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_where        reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120

  ! TK_plus         [ reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_minus        [ reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_mult         [ reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_div          [ reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_mod          [ reduce using rule 120 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 177

    (121) RELATIONALS -> EXP TK_greatequal EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_equal        reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_notequal     reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_lessequal    reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_greatequal   reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_less         reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_great        reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_and          reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_or           reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_as           reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_comma        reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_from         reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_then         reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_begin        reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_else         reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_when         reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_rpar         reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_end          reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_dot          reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_where        reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120

  ! TK_plus         [ reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_minus        [ reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_mult         [ reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_div          [ reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_mod          [ reduce using rule 121 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 178

    (122) RELATIONALS -> EXP TK_less EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_equal        reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_notequal     reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_lessequal    reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_greatequal   reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_less         reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_great        reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_and          reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_or           reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    RW_as           reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_comma        reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    RW_from         reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    RW_then         reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    RW_begin        reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    RW_else         reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    RW_when         reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_rpar         reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    RW_end          reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_dot          reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    RW_where        reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120

  ! TK_plus         [ reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_minus        [ reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_mult         [ reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_div          [ reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_mod          [ reduce using rule 122 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 179

    (123) RELATIONALS -> EXP TK_great EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_equal        reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_notequal     reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_lessequal    reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_greatequal   reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_less         reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_great        reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_and          reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_or           reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    RW_as           reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_comma        reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    RW_from         reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    RW_then         reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    RW_begin        reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    RW_else         reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    RW_when         reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_rpar         reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    RW_end          reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_dot          reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    RW_where        reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120

  ! TK_plus         [ reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_minus        [ reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_mult         [ reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_div          [ reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_mod          [ reduce using rule 123 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_equal        [ shift and go to state 121 ]
  ! TK_notequal     [ shift and go to state 122 ]
  ! TK_lessequal    [ shift and go to state 123 ]
  ! TK_greatequal   [ shift and go to state 124 ]
  ! TK_less         [ shift and go to state 125 ]
  ! TK_great        [ shift and go to state 126 ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 180

    (124) LOGICS -> EXP TK_and EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    TK_and          reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    TK_or           reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    RW_as           reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    TK_comma        reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    RW_from         reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    RW_then         reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    RW_begin        reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    RW_else         reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    RW_when         reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    TK_rpar         reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    RW_end          reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    TK_dot          reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    RW_where        reduce using rule 124 (LOGICS -> EXP TK_and EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126

  ! TK_plus         [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_minus        [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_mult         [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_div          [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_mod          [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_equal        [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_notequal     [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_lessequal    [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_greatequal   [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_less         [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_great        [ reduce using rule 124 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_and          [ shift and go to state 127 ]
  ! TK_or           [ shift and go to state 128 ]


state 181

    (125) LOGICS -> EXP TK_or EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    TK_or           reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    RW_as           reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    TK_comma        reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    RW_from         reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    RW_then         reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    RW_begin        reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    RW_else         reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    RW_when         reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    TK_rpar         reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    RW_end          reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    TK_dot          reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    RW_where        reduce using rule 125 (LOGICS -> EXP TK_or EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127

  ! TK_plus         [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_minus        [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_mult         [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_div          [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_mod          [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_equal        [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_notequal     [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_lessequal    [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_greatequal   [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_less         [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_great        [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_and          [ reduce using rule 125 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_or           [ shift and go to state 128 ]


state 182

    (111) EXP -> TK_lpar EXP TK_rpar .

    TK_semicolon    reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_plus         reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_minus        reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_mult         reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_div          reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_mod          reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_equal        reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_notequal     reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_lessequal    reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_greatequal   reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_less         reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_great        reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_and          reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_or           reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    RW_as           reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_comma        reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    RW_from         reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    RW_then         reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    RW_begin        reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    RW_else         reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    RW_when         reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_rpar         reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    RW_end          reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    TK_dot          reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)
    RW_where        reduce using rule 111 (EXP -> TK_lpar EXP TK_rpar .)


state 183

    (127) CAST -> RW_cas TK_lpar EXP . RW_as TYPE TK_rpar
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    RW_as           shift and go to state 217
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 184

    (128) NATIVEFUNC -> RW_truncate TK_lpar EXP . TK_comma EXP TK_rpar
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 218
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 185

    (43) CREATETABLE -> RW_create RW_table TK_field TK_lpar . ATTRIBUTES TK_rpar
    (44) ATTRIBUTES -> . ATTRIBUTES TK_comma ATTRIBUTE
    (45) ATTRIBUTES -> . ATTRIBUTE
    (46) ATTRIBUTE -> . TK_field TYPE

    TK_field        shift and go to state 219

    ATTRIBUTES                     shift and go to state 220
    ATTRIBUTE                      shift and go to state 221

state 186

    (83) FUNCDEC -> RW_create RW_function TK_field TK_lpar . PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> RW_create RW_function TK_field TK_lpar . TK_rpar RW_returns TYPE ENCAP
    (89) PARAMS -> . PARAMS TK_comma PARAM
    (90) PARAMS -> . PARAM
    (91) PARAM -> . TK_id TYPE

    TK_rpar         shift and go to state 223
    TK_id           shift and go to state 191

    PARAMS                         shift and go to state 222
    PARAM                          shift and go to state 190

state 187

    (85) FUNCDEC -> RW_create RW_procedure TK_field PARAMS . RW_as ENCAP
    (87) FUNCDEC -> RW_create RW_procedure TK_field PARAMS . ENCAP
    (89) PARAMS -> PARAMS . TK_comma PARAM
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end

    RW_as           shift and go to state 224
    TK_comma        shift and go to state 226
    RW_begin        shift and go to state 37

    ENCAP                          shift and go to state 225

state 188

    (86) FUNCDEC -> RW_create RW_procedure TK_field RW_as . ENCAP
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 37

    ENCAP                          shift and go to state 227

state 189

    (88) FUNCDEC -> RW_create RW_procedure TK_field ENCAP .

    TK_semicolon    reduce using rule 88 (FUNCDEC -> RW_create RW_procedure TK_field ENCAP .)


state 190

    (90) PARAMS -> PARAM .

    RW_as           reduce using rule 90 (PARAMS -> PARAM .)
    TK_comma        reduce using rule 90 (PARAMS -> PARAM .)
    RW_begin        reduce using rule 90 (PARAMS -> PARAM .)
    TK_rpar         reduce using rule 90 (PARAMS -> PARAM .)


state 191

    (91) PARAM -> TK_id . TYPE
    (129) TYPE -> . RW_int
    (130) TYPE -> . RW_bit
    (131) TYPE -> . RW_decimal
    (132) TYPE -> . RW_date
    (133) TYPE -> . RW_nchar
    (134) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 152
    RW_bit          shift and go to state 153
    RW_decimal      shift and go to state 154
    RW_date         shift and go to state 155
    RW_nchar        shift and go to state 156
    RW_nvarchar     shift and go to state 157

    TYPE                           shift and go to state 228

state 192

    (94) CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .

    TK_semicolon    reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_plus         reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_minus        reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_mult         reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_div          reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_mod          reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_equal        reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_notequal     reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_lessequal    reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_greatequal   reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_less         reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_great        reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_and          reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_or           reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_as           reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_comma        reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_from         reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_then         reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_begin        reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_else         reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_when         reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_rpar         reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_end          reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_dot          reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_where        reduce using rule 94 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)


state 193

    (96) ARGS -> ARGS TK_comma . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 229
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 194

    (47) ALTERTAB -> RW_alter RW_table TK_field ACTION .

    TK_semicolon    reduce using rule 47 (ALTERTAB -> RW_alter RW_table TK_field ACTION .)


state 195

    (48) ACTION -> RW_add . TK_field TYPE

    TK_field        shift and go to state 230


state 196

    (49) ACTION -> RW_drop . RW_column TK_field

    RW_column       shift and go to state 231


state 197

    (50) ACTION -> RW_rename . RW_to TK_field
    (51) ACTION -> RW_rename . RW_column TK_field RW_to TK_field

    RW_to           shift and go to state 232
    RW_column       shift and go to state 233


state 198

    (53) INSERTREG -> RW_insert RW_into TK_field TK_lpar . LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (54) LIST_ATTRIBS -> . LIST_ATTRIBS TK_comma TK_field
    (55) LIST_ATTRIBS -> . TK_field

    TK_field        shift and go to state 234

    LIST_ATTRIBS                   shift and go to state 235

state 199

    (61) VALUETAB -> TK_field . TK_equal EXP

    TK_equal        shift and go to state 236


state 200

    (58) UPDATETAB -> RW_update TK_field RW_set VALUESTAB . RW_where EXP
    (59) VALUESTAB -> VALUESTAB . TK_comma VALUETAB

    RW_where        shift and go to state 237
    TK_comma        shift and go to state 238


state 201

    (60) VALUESTAB -> VALUETAB .

    RW_where        reduce using rule 60 (VALUESTAB -> VALUETAB .)
    TK_comma        reduce using rule 60 (VALUESTAB -> VALUETAB .)


state 202

    (32) ASIGNID -> RW_set TK_id TK_equal EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 32 (ASIGNID -> RW_set TK_id TK_equal EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 203

    (63) DELETETAB -> RW_delete RW_from TK_field RW_where . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 239
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 204

    (33) SELECT -> RW_select FIELDS RW_from TK_field . RW_where EXP
    (34) SELECT -> RW_select FIELDS RW_from TK_field .

    RW_where        shift and go to state 240
    TK_semicolon    reduce using rule 34 (SELECT -> RW_select FIELDS RW_from TK_field .)


state 205

    (40) IDS -> EXP RW_as TK_nvarchar .

    TK_comma        reduce using rule 40 (IDS -> EXP RW_as TK_nvarchar .)
    TK_semicolon    reduce using rule 40 (IDS -> EXP RW_as TK_nvarchar .)
    RW_from         reduce using rule 40 (IDS -> EXP RW_as TK_nvarchar .)


state 206

    (41) IDS -> EXP RW_as TK_field .

    TK_comma        reduce using rule 41 (IDS -> EXP RW_as TK_field .)
    TK_semicolon    reduce using rule 41 (IDS -> EXP RW_as TK_field .)
    RW_from         reduce using rule 41 (IDS -> EXP RW_as TK_field .)


state 207

    (38) LIST_IDS -> LIST_IDS TK_comma IDS .

    TK_comma        reduce using rule 38 (LIST_IDS -> LIST_IDS TK_comma IDS .)
    TK_semicolon    reduce using rule 38 (LIST_IDS -> LIST_IDS TK_comma IDS .)
    RW_from         reduce using rule 38 (LIST_IDS -> LIST_IDS TK_comma IDS .)


state 208

    (29) DECLIDS -> DECLIDS TK_comma DECLID .

    TK_comma        reduce using rule 29 (DECLIDS -> DECLIDS TK_comma DECLID .)
    TK_semicolon    reduce using rule 29 (DECLIDS -> DECLIDS TK_comma DECLID .)


state 209

    (31) DECLID -> TK_id . TYPE
    (129) TYPE -> . RW_int
    (130) TYPE -> . RW_bit
    (131) TYPE -> . RW_decimal
    (132) TYPE -> . RW_date
    (133) TYPE -> . RW_nchar
    (134) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 152
    RW_bit          shift and go to state 153
    RW_decimal      shift and go to state 154
    RW_date         shift and go to state 155
    RW_nchar        shift and go to state 156
    RW_nvarchar     shift and go to state 157

    TYPE                           shift and go to state 241

state 210

    (28) DECLAREID -> RW_declare TK_id TYPE TK_equal . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 242
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 211

    (64) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS . RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS . RW_end RW_if
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    RW_else         shift and go to state 243
    RW_end          shift and go to state 244
    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INSTRUCTION                    shift and go to state 42
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 212

    (66) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS . RW_end
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    RW_end          shift and go to state 245
    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INSTRUCTION                    shift and go to state 42
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 213

    (67) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end . RW_as TK_field
    (68) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end . RW_as TK_nvarchar
    (69) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end .

    RW_as           shift and go to state 246
    TK_semicolon    reduce using rule 69 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end .)


state 214

    (70) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as . TK_field
    (71) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as . TK_nvarchar

    TK_field        shift and go to state 247
    TK_nvarchar     shift and go to state 248


state 215

    (78) WHEN -> RW_when EXP RW_then . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 249
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 216

    (82) FORSTRUCT -> RW_for TK_id RW_in EXP . TK_dot EXP ENCAP RW_loop
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_dot          shift and go to state 250
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 217

    (127) CAST -> RW_cas TK_lpar EXP RW_as . TYPE TK_rpar
    (129) TYPE -> . RW_int
    (130) TYPE -> . RW_bit
    (131) TYPE -> . RW_decimal
    (132) TYPE -> . RW_date
    (133) TYPE -> . RW_nchar
    (134) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 152
    RW_bit          shift and go to state 153
    RW_decimal      shift and go to state 154
    RW_date         shift and go to state 155
    RW_nchar        shift and go to state 156
    RW_nvarchar     shift and go to state 157

    TYPE                           shift and go to state 251

state 218

    (128) NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma . EXP TK_rpar
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 252
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 219

    (46) ATTRIBUTE -> TK_field . TYPE
    (129) TYPE -> . RW_int
    (130) TYPE -> . RW_bit
    (131) TYPE -> . RW_decimal
    (132) TYPE -> . RW_date
    (133) TYPE -> . RW_nchar
    (134) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 152
    RW_bit          shift and go to state 153
    RW_decimal      shift and go to state 154
    RW_date         shift and go to state 155
    RW_nchar        shift and go to state 156
    RW_nvarchar     shift and go to state 157

    TYPE                           shift and go to state 253

state 220

    (43) CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES . TK_rpar
    (44) ATTRIBUTES -> ATTRIBUTES . TK_comma ATTRIBUTE

    TK_rpar         shift and go to state 254
    TK_comma        shift and go to state 255


state 221

    (45) ATTRIBUTES -> ATTRIBUTE .

    TK_rpar         reduce using rule 45 (ATTRIBUTES -> ATTRIBUTE .)
    TK_comma        reduce using rule 45 (ATTRIBUTES -> ATTRIBUTE .)


state 222

    (83) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS . TK_rpar RW_returns TYPE ENCAP
    (89) PARAMS -> PARAMS . TK_comma PARAM

    TK_rpar         shift and go to state 256
    TK_comma        shift and go to state 226


state 223

    (84) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar . RW_returns TYPE ENCAP

    RW_returns      shift and go to state 257


state 224

    (85) FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as . ENCAP
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 37

    ENCAP                          shift and go to state 258

state 225

    (87) FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP .

    TK_semicolon    reduce using rule 87 (FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP .)


state 226

    (89) PARAMS -> PARAMS TK_comma . PARAM
    (91) PARAM -> . TK_id TYPE

    TK_id           shift and go to state 191

    PARAM                          shift and go to state 259

state 227

    (86) FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP .

    TK_semicolon    reduce using rule 86 (FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP .)


state 228

    (91) PARAM -> TK_id TYPE .

    RW_as           reduce using rule 91 (PARAM -> TK_id TYPE .)
    TK_comma        reduce using rule 91 (PARAM -> TK_id TYPE .)
    RW_begin        reduce using rule 91 (PARAM -> TK_id TYPE .)
    TK_rpar         reduce using rule 91 (PARAM -> TK_id TYPE .)


state 229

    (96) ARGS -> ARGS TK_comma EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 96 (ARGS -> ARGS TK_comma EXP .)
    TK_comma        reduce using rule 96 (ARGS -> ARGS TK_comma EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 230

    (48) ACTION -> RW_add TK_field . TYPE
    (129) TYPE -> . RW_int
    (130) TYPE -> . RW_bit
    (131) TYPE -> . RW_decimal
    (132) TYPE -> . RW_date
    (133) TYPE -> . RW_nchar
    (134) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 152
    RW_bit          shift and go to state 153
    RW_decimal      shift and go to state 154
    RW_date         shift and go to state 155
    RW_nchar        shift and go to state 156
    RW_nvarchar     shift and go to state 157

    TYPE                           shift and go to state 260

state 231

    (49) ACTION -> RW_drop RW_column . TK_field

    TK_field        shift and go to state 261


state 232

    (50) ACTION -> RW_rename RW_to . TK_field

    TK_field        shift and go to state 262


state 233

    (51) ACTION -> RW_rename RW_column . TK_field RW_to TK_field

    TK_field        shift and go to state 263


state 234

    (55) LIST_ATTRIBS -> TK_field .

    TK_rpar         reduce using rule 55 (LIST_ATTRIBS -> TK_field .)
    TK_comma        reduce using rule 55 (LIST_ATTRIBS -> TK_field .)


state 235

    (53) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS . TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (54) LIST_ATTRIBS -> LIST_ATTRIBS . TK_comma TK_field

    TK_rpar         shift and go to state 264
    TK_comma        shift and go to state 265


state 236

    (61) VALUETAB -> TK_field TK_equal . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 266
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 237

    (58) UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 267
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 238

    (59) VALUESTAB -> VALUESTAB TK_comma . VALUETAB
    (61) VALUETAB -> . TK_field TK_equal EXP

    TK_field        shift and go to state 199

    VALUETAB                       shift and go to state 268

state 239

    (63) DELETETAB -> RW_delete RW_from TK_field RW_where EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 63 (DELETETAB -> RW_delete RW_from TK_field RW_where EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 240

    (33) SELECT -> RW_select FIELDS RW_from TK_field RW_where . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 269
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 241

    (31) DECLID -> TK_id TYPE .

    TK_comma        reduce using rule 31 (DECLID -> TK_id TYPE .)
    TK_semicolon    reduce using rule 31 (DECLID -> TK_id TYPE .)


state 242

    (28) DECLAREID -> RW_declare TK_id TYPE TK_equal EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 28 (DECLAREID -> RW_declare TK_id TYPE TK_equal EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 243

    (64) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else . INSTRUCTIONS RW_end RW_if
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INSTRUCTIONS                   shift and go to state 270
    INSTRUCTION                    shift and go to state 3
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 244

    (65) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end . RW_if

    RW_if           shift and go to state 271


state 245

    (66) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end .

    TK_semicolon    reduce using rule 66 (IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end .)


state 246

    (67) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as . TK_field
    (68) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as . TK_nvarchar

    TK_field        shift and go to state 272
    TK_nvarchar     shift and go to state 273


state 247

    (70) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field .

    TK_semicolon    reduce using rule 70 (CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field .)


state 248

    (71) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar .

    TK_semicolon    reduce using rule 71 (CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar .)


state 249

    (78) WHEN -> RW_when EXP RW_then EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    RW_else         reduce using rule 78 (WHEN -> RW_when EXP RW_then EXP .)
    RW_when         reduce using rule 78 (WHEN -> RW_when EXP RW_then EXP .)
    RW_end          reduce using rule 78 (WHEN -> RW_when EXP RW_then EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 250

    (82) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot . EXP ENCAP RW_loop
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 274
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 251

    (127) CAST -> RW_cas TK_lpar EXP RW_as TYPE . TK_rpar

    TK_rpar         shift and go to state 275


state 252

    (128) NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP . TK_rpar
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 276
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 253

    (46) ATTRIBUTE -> TK_field TYPE .

    TK_rpar         reduce using rule 46 (ATTRIBUTE -> TK_field TYPE .)
    TK_comma        reduce using rule 46 (ATTRIBUTE -> TK_field TYPE .)


state 254

    (43) CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar .

    TK_semicolon    reduce using rule 43 (CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar .)


state 255

    (44) ATTRIBUTES -> ATTRIBUTES TK_comma . ATTRIBUTE
    (46) ATTRIBUTE -> . TK_field TYPE

    TK_field        shift and go to state 219

    ATTRIBUTE                      shift and go to state 277

state 256

    (83) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar . RW_returns TYPE ENCAP

    RW_returns      shift and go to state 278


state 257

    (84) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns . TYPE ENCAP
    (129) TYPE -> . RW_int
    (130) TYPE -> . RW_bit
    (131) TYPE -> . RW_decimal
    (132) TYPE -> . RW_date
    (133) TYPE -> . RW_nchar
    (134) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 152
    RW_bit          shift and go to state 153
    RW_decimal      shift and go to state 154
    RW_date         shift and go to state 155
    RW_nchar        shift and go to state 156
    RW_nvarchar     shift and go to state 157

    TYPE                           shift and go to state 279

state 258

    (85) FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP .

    TK_semicolon    reduce using rule 85 (FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP .)


state 259

    (89) PARAMS -> PARAMS TK_comma PARAM .

    RW_as           reduce using rule 89 (PARAMS -> PARAMS TK_comma PARAM .)
    TK_comma        reduce using rule 89 (PARAMS -> PARAMS TK_comma PARAM .)
    RW_begin        reduce using rule 89 (PARAMS -> PARAMS TK_comma PARAM .)
    TK_rpar         reduce using rule 89 (PARAMS -> PARAMS TK_comma PARAM .)


state 260

    (48) ACTION -> RW_add TK_field TYPE .

    TK_semicolon    reduce using rule 48 (ACTION -> RW_add TK_field TYPE .)


state 261

    (49) ACTION -> RW_drop RW_column TK_field .

    TK_semicolon    reduce using rule 49 (ACTION -> RW_drop RW_column TK_field .)


state 262

    (50) ACTION -> RW_rename RW_to TK_field .

    TK_semicolon    reduce using rule 50 (ACTION -> RW_rename RW_to TK_field .)


state 263

    (51) ACTION -> RW_rename RW_column TK_field . RW_to TK_field

    RW_to           shift and go to state 280


state 264

    (53) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar . RW_values TK_lpar LIST_EXPS TK_rpar

    RW_values       shift and go to state 281


state 265

    (54) LIST_ATTRIBS -> LIST_ATTRIBS TK_comma . TK_field

    TK_field        shift and go to state 282


state 266

    (61) VALUETAB -> TK_field TK_equal EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    RW_where        reduce using rule 61 (VALUETAB -> TK_field TK_equal EXP .)
    TK_comma        reduce using rule 61 (VALUETAB -> TK_field TK_equal EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 267

    (58) UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 58 (UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 268

    (59) VALUESTAB -> VALUESTAB TK_comma VALUETAB .

    RW_where        reduce using rule 59 (VALUESTAB -> VALUESTAB TK_comma VALUETAB .)
    TK_comma        reduce using rule 59 (VALUESTAB -> VALUESTAB TK_comma VALUETAB .)


state 269

    (33) SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 33 (SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 270

    (64) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS . RW_end RW_if
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATETABLE TK_semicolon
    (6) INSTRUCTION -> . ALTERTAB TK_semicolon
    (7) INSTRUCTION -> . DROPTAB TK_semicolon
    (8) INSTRUCTION -> . INSERTREG TK_semicolon
    (9) INSTRUCTION -> . UPDATETAB TK_semicolon
    (10) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (11) INSTRUCTION -> . DELETETAB TK_semicolon
    (12) INSTRUCTION -> . SELECT TK_semicolon
    (13) INSTRUCTION -> . DECLAREID TK_semicolon
    (14) INSTRUCTION -> . ASIGNID TK_semicolon
    (15) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (16) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (17) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (18) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (19) INSTRUCTION -> . FUNCDEC TK_semicolon
    (20) INSTRUCTION -> . CALLFUNC TK_semicolon
    (21) INSTRUCTION -> . ENCAP TK_semicolon
    (22) INSTRUCTION -> . PRINT TK_semicolon
    (23) INSTRUCTION -> . RW_break TK_semicolon
    (24) INSTRUCTION -> . RW_continue TK_semicolon
    (25) INSTRUCTION -> . RW_return EXP TK_semicolon
    (26) INSTRUCTION -> . RW_return TK_semicolon
    (43) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (47) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (52) DROPTAB -> . RW_drop RW_table TK_field
    (53) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (58) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (62) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (63) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (33) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (34) SELECT -> . RW_select FIELDS RW_from TK_field
    (35) SELECT -> . RW_select LIST_IDS
    (27) DECLAREID -> . RW_declare DECLIDS
    (28) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (32) ASIGNID -> . RW_set TK_id TK_equal EXP
    (64) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (65) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (66) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (67) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (68) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (69) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (70) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (71) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (72) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (81) WHILESTRUCT -> . RW_while EXP ENCAP
    (82) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (83) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (84) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (85) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (86) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (87) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (88) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end
    (80) PRINT -> . RW_print EXP

    RW_end          shift and go to state 283
    RW_break        shift and go to state 22
    RW_continue     shift and go to state 23
    RW_return       shift and go to state 24
    RW_create       shift and go to state 25
    RW_alter        shift and go to state 27
    RW_drop         shift and go to state 28
    RW_insert       shift and go to state 29
    RW_update       shift and go to state 30
    RW_truncate     shift and go to state 32
    RW_delete       shift and go to state 33
    RW_select       shift and go to state 34
    RW_declare      shift and go to state 35
    RW_set          shift and go to state 31
    RW_if           shift and go to state 36
    RW_case         shift and go to state 38
    RW_while        shift and go to state 39
    RW_for          shift and go to state 40
    TK_field        shift and go to state 26
    RW_begin        shift and go to state 37
    RW_print        shift and go to state 41

    INSTRUCTION                    shift and go to state 42
    CREATETABLE                    shift and go to state 4
    ALTERTAB                       shift and go to state 5
    DROPTAB                        shift and go to state 6
    INSERTREG                      shift and go to state 7
    UPDATETAB                      shift and go to state 8
    TRUNCATETAB                    shift and go to state 9
    DELETETAB                      shift and go to state 10
    SELECT                         shift and go to state 11
    DECLAREID                      shift and go to state 12
    ASIGNID                        shift and go to state 13
    IFSTRUCT                       shift and go to state 14
    CASESTRUCT_S                   shift and go to state 15
    WHILESTRUCT                    shift and go to state 16
    FORSTRUCT                      shift and go to state 17
    FUNCDEC                        shift and go to state 18
    CALLFUNC                       shift and go to state 19
    ENCAP                          shift and go to state 20
    PRINT                          shift and go to state 21

state 271

    (65) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if .

    TK_semicolon    reduce using rule 65 (IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if .)


state 272

    (67) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field .

    TK_semicolon    reduce using rule 67 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field .)


state 273

    (68) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar .

    TK_semicolon    reduce using rule 68 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar .)


state 274

    (82) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP . ENCAP RW_loop
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end

    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128
    RW_begin        shift and go to state 37

    ENCAP                          shift and go to state 284

state 275

    (127) CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .

    TK_semicolon    reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_plus         reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_minus        reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_mult         reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_div          reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_mod          reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_equal        reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_notequal     reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_lessequal    reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_greatequal   reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_less         reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_great        reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_and          reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_or           reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_as           reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_comma        reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_from         reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_then         reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_begin        reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_else         reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_when         reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_rpar         reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_end          reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_dot          reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_where        reduce using rule 127 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)


state 276

    (128) NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 128 (NATIVEFUNC -> RW_truncate TK_lpar EXP TK_comma EXP TK_rpar .)


state 277

    (44) ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .

    TK_rpar         reduce using rule 44 (ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .)
    TK_comma        reduce using rule 44 (ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .)


state 278

    (83) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns . TYPE ENCAP
    (129) TYPE -> . RW_int
    (130) TYPE -> . RW_bit
    (131) TYPE -> . RW_decimal
    (132) TYPE -> . RW_date
    (133) TYPE -> . RW_nchar
    (134) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 152
    RW_bit          shift and go to state 153
    RW_decimal      shift and go to state 154
    RW_date         shift and go to state 155
    RW_nchar        shift and go to state 156
    RW_nvarchar     shift and go to state 157

    TYPE                           shift and go to state 285

state 279

    (84) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE . ENCAP
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 37

    ENCAP                          shift and go to state 286

state 280

    (51) ACTION -> RW_rename RW_column TK_field RW_to . TK_field

    TK_field        shift and go to state 287


state 281

    (53) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values . TK_lpar LIST_EXPS TK_rpar

    TK_lpar         shift and go to state 288


state 282

    (54) LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .

    TK_rpar         reduce using rule 54 (LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .)
    TK_comma        reduce using rule 54 (LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .)


state 283

    (64) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end . RW_if

    RW_if           shift and go to state 289


state 284

    (82) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP . RW_loop

    RW_loop         shift and go to state 290


state 285

    (83) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE . ENCAP
    (92) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (93) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 37

    ENCAP                          shift and go to state 291

state 286

    (84) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP .

    TK_semicolon    reduce using rule 84 (FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP .)


state 287

    (51) ACTION -> RW_rename RW_column TK_field RW_to TK_field .

    TK_semicolon    reduce using rule 51 (ACTION -> RW_rename RW_column TK_field RW_to TK_field .)


state 288

    (53) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar . LIST_EXPS TK_rpar
    (56) LIST_EXPS -> . LIST_EXPS TK_comma EXP
    (57) LIST_EXPS -> . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    LIST_EXPS                      shift and go to state 292
    EXP                            shift and go to state 293
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 289

    (64) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if .

    TK_semicolon    reduce using rule 64 (IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if .)


state 290

    (82) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop .

    TK_semicolon    reduce using rule 82 (FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop .)


state 291

    (83) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP .

    TK_semicolon    reduce using rule 83 (FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP .)


state 292

    (53) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS . TK_rpar
    (56) LIST_EXPS -> LIST_EXPS . TK_comma EXP

    TK_rpar         shift and go to state 294
    TK_comma        shift and go to state 295


state 293

    (57) LIST_EXPS -> EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 57 (LIST_EXPS -> EXP .)
    TK_comma        reduce using rule 57 (LIST_EXPS -> EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128


state 294

    (53) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar .

    TK_semicolon    reduce using rule 53 (INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar .)


state 295

    (56) LIST_EXPS -> LIST_EXPS TK_comma . EXP
    (98) EXP -> . ARITHMETICS
    (99) EXP -> . RELATIONALS
    (100) EXP -> . LOGICS
    (101) EXP -> . CAST
    (102) EXP -> . NATIVEFUNC
    (103) EXP -> . CALLFUNC
    (104) EXP -> . TK_id
    (105) EXP -> . TK_field
    (106) EXP -> . TK_nvarchar
    (107) EXP -> . TK_int
    (108) EXP -> . TK_decimal
    (109) EXP -> . TK_date
    (110) EXP -> . RW_null
    (111) EXP -> . TK_lpar EXP TK_rpar
    (112) ARITHMETICS -> . EXP TK_plus EXP
    (113) ARITHMETICS -> . EXP TK_minus EXP
    (114) ARITHMETICS -> . EXP TK_mult EXP
    (115) ARITHMETICS -> . EXP TK_div EXP
    (116) ARITHMETICS -> . EXP TK_mod EXP
    (117) ARITHMETICS -> . TK_minus EXP
    (118) RELATIONALS -> . EXP TK_equal EXP
    (119) RELATIONALS -> . EXP TK_notequal EXP
    (120) RELATIONALS -> . EXP TK_lessequal EXP
    (121) RELATIONALS -> . EXP TK_greatequal EXP
    (122) RELATIONALS -> . EXP TK_less EXP
    (123) RELATIONALS -> . EXP TK_great EXP
    (124) LOGICS -> . EXP TK_and EXP
    (125) LOGICS -> . EXP TK_or EXP
    (126) LOGICS -> . TK_not EXP
    (127) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (128) NATIVEFUNC -> . RW_truncate TK_lpar EXP TK_comma EXP TK_rpar
    (94) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (95) CALLFUNC -> . TK_field TK_lpar TK_rpar

    TK_id           shift and go to state 71
    TK_field        shift and go to state 72
    TK_nvarchar     shift and go to state 73
    TK_int          shift and go to state 74
    TK_decimal      shift and go to state 75
    TK_date         shift and go to state 76
    RW_null         shift and go to state 77
    TK_lpar         shift and go to state 78
    TK_minus        shift and go to state 79
    TK_not          shift and go to state 80
    RW_cas          shift and go to state 81
    RW_truncate     shift and go to state 82

    EXP                            shift and go to state 296
    ARITHMETICS                    shift and go to state 65
    RELATIONALS                    shift and go to state 66
    LOGICS                         shift and go to state 67
    CAST                           shift and go to state 68
    NATIVEFUNC                     shift and go to state 69
    CALLFUNC                       shift and go to state 70

state 296

    (56) LIST_EXPS -> LIST_EXPS TK_comma EXP .
    (112) ARITHMETICS -> EXP . TK_plus EXP
    (113) ARITHMETICS -> EXP . TK_minus EXP
    (114) ARITHMETICS -> EXP . TK_mult EXP
    (115) ARITHMETICS -> EXP . TK_div EXP
    (116) ARITHMETICS -> EXP . TK_mod EXP
    (118) RELATIONALS -> EXP . TK_equal EXP
    (119) RELATIONALS -> EXP . TK_notequal EXP
    (120) RELATIONALS -> EXP . TK_lessequal EXP
    (121) RELATIONALS -> EXP . TK_greatequal EXP
    (122) RELATIONALS -> EXP . TK_less EXP
    (123) RELATIONALS -> EXP . TK_great EXP
    (124) LOGICS -> EXP . TK_and EXP
    (125) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 56 (LIST_EXPS -> LIST_EXPS TK_comma EXP .)
    TK_comma        reduce using rule 56 (LIST_EXPS -> LIST_EXPS TK_comma EXP .)
    TK_plus         shift and go to state 116
    TK_minus        shift and go to state 117
    TK_mult         shift and go to state 118
    TK_div          shift and go to state 119
    TK_mod          shift and go to state 120
    TK_equal        shift and go to state 121
    TK_notequal     shift and go to state 122
    TK_lessequal    shift and go to state 123
    TK_greatequal   shift and go to state 124
    TK_less         shift and go to state 125
    TK_great        shift and go to state 126
    TK_and          shift and go to state 127
    TK_or           shift and go to state 128

