Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RW_contar

Grammar

Rule 0     S' -> INIT
Rule 1     INIT -> INSTRUCTIONS
Rule 2     INIT -> <empty>
Rule 3     INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION
Rule 4     INSTRUCTIONS -> INSTRUCTION
Rule 5     INSTRUCTION -> CREATEDB TK_semicolon
Rule 6     INSTRUCTION -> CREATETABLE TK_semicolon
Rule 7     INSTRUCTION -> ALTERTAB TK_semicolon
Rule 8     INSTRUCTION -> DROPTAB TK_semicolon
Rule 9     INSTRUCTION -> INSERTREG TK_semicolon
Rule 10    INSTRUCTION -> UPDATETAB TK_semicolon
Rule 11    INSTRUCTION -> TRUNCATETAB TK_semicolon
Rule 12    INSTRUCTION -> DELETETAB TK_semicolon
Rule 13    INSTRUCTION -> SELECT TK_semicolon
Rule 14    INSTRUCTION -> DECLAREID TK_semicolon
Rule 15    INSTRUCTION -> ASIGNID TK_semicolon
Rule 16    INSTRUCTION -> IFSTRUCT TK_semicolon
Rule 17    INSTRUCTION -> CASESTRUCT_S TK_semicolon
Rule 18    INSTRUCTION -> WHILESTRUCT TK_semicolon
Rule 19    INSTRUCTION -> FORSTRUCT TK_semicolon
Rule 20    INSTRUCTION -> FUNCDEC TK_semicolon
Rule 21    INSTRUCTION -> CALLFUNC TK_semicolon
Rule 22    INSTRUCTION -> ENCAP TK_semicolon
Rule 23    INSTRUCTION -> PRINT TK_semicolon
Rule 24    INSTRUCTION -> RW_break TK_semicolon
Rule 25    INSTRUCTION -> RW_continue TK_semicolon
Rule 26    INSTRUCTION -> RW_return EXP TK_semicolon
Rule 27    INSTRUCTION -> RW_return TK_semicolon
Rule 28    CREATEDB -> RW_create RW_data RW_base TK_field
Rule 29    DECLAREID -> RW_declare DECLIDS
Rule 30    DECLAREID -> RW_declare TK_id TYPE TK_equal EXP
Rule 31    DECLIDS -> DECLIDS TK_comma DECLID
Rule 32    DECLIDS -> DECLID
Rule 33    DECLID -> TK_id TYPE
Rule 34    ASIGNID -> RW_set TK_id TK_equal EXP
Rule 35    SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP
Rule 36    SELECT -> RW_select FIELDS RW_from TK_field
Rule 37    SELECT -> RW_select LIST_IDS
Rule 38    FIELDS -> LIST_IDS
Rule 39    FIELDS -> TK_mult
Rule 40    LIST_IDS -> LIST_IDS TK_comma IDS
Rule 41    LIST_IDS -> IDS
Rule 42    IDS -> EXP RW_as TK_nvarchar
Rule 43    IDS -> EXP RW_as TK_field
Rule 44    IDS -> EXP
Rule 45    CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
Rule 46    ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE
Rule 47    ATTRIBUTES -> ATTRIBUTE
Rule 48    ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS
Rule 49    ATTRIBUTE -> TK_field TYPE PROPS
Rule 50    ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar
Rule 51    ATTRIBUTE -> TK_field TYPE
Rule 52    ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar
Rule 53    PROPS -> RW_not RW_null RW_primary RW_key
Rule 54    PROPS -> RW_primary RW_key RW_not RW_null
Rule 55    PROPS -> RW_not RW_null
Rule 56    PROPS -> RW_primary RW_key
Rule 57    ALTERTAB -> RW_alter RW_table TK_field ACTION
Rule 58    ACTION -> RW_add TK_field TYPE
Rule 59    ACTION -> RW_drop TK_field
Rule 60    ACTION -> RW_rename RW_to TK_field
Rule 61    ACTION -> RW_rename RW_column TK_field RW_to TK_field
Rule 62    DROPTAB -> RW_drop RW_table TK_field
Rule 63    INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
Rule 64    LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field
Rule 65    LIST_ATTRIBS -> TK_field
Rule 66    LIST_EXPS -> LIST_EXPS TK_comma EXP
Rule 67    LIST_EXPS -> EXP
Rule 68    UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP
Rule 69    VALUESTAB -> VALUESTAB TK_comma VALUETAB
Rule 70    VALUESTAB -> VALUETAB
Rule 71    VALUETAB -> TK_field TK_equal EXP
Rule 72    TRUNCATETAB -> RW_truncate RW_table TK_field
Rule 73    DELETETAB -> RW_delete RW_from TK_field RW_where EXP
Rule 74    IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
Rule 75    IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
Rule 76    IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end
Rule 77    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field
Rule 78    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
Rule 79    CASESTRUCT_S -> RW_case EXP WHENELSE RW_end
Rule 80    CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field
Rule 81    CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar
Rule 82    CASESTRUCT_S -> RW_case WHENELSE RW_end
Rule 83    WHENELSE -> WHENS ELSE
Rule 84    WHENELSE -> WHENS
Rule 85    WHENELSE -> ELSE
Rule 86    WHENS -> WHENS WHEN
Rule 87    WHENS -> WHEN
Rule 88    WHEN -> RW_when EXP RW_then EXP
Rule 89    ELSE -> RW_else RW_then EXP
Rule 90    PRINT -> RW_print EXP
Rule 91    WHILESTRUCT -> RW_while EXP ENCAP
Rule 92    FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
Rule 93    FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
Rule 94    FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
Rule 95    FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP
Rule 96    FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP
Rule 97    FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP
Rule 98    FUNCDEC -> RW_create RW_procedure TK_field ENCAP
Rule 99    PARAMS -> PARAMS TK_comma PARAM
Rule 100   PARAMS -> PARAM
Rule 101   PARAM -> TK_id RW_as TYPE
Rule 102   ENCAP -> RW_begin INSTRUCTIONS RW_end
Rule 103   ENCAP -> RW_begin RW_end
Rule 104   CALLFUNC -> TK_field TK_lpar ARGS TK_rpar
Rule 105   CALLFUNC -> TK_field TK_lpar TK_rpar
Rule 106   ARGS -> ARGS TK_comma EXP
Rule 107   ARGS -> EXP
Rule 108   EXP -> ARITHMETICS
Rule 109   EXP -> RELATIONALS
Rule 110   EXP -> LOGICS
Rule 111   EXP -> CAST
Rule 112   EXP -> NATIVEFUNC
Rule 113   EXP -> CALLFUNC
Rule 114   EXP -> TERNARY
Rule 115   EXP -> TK_id
Rule 116   EXP -> TK_field
Rule 117   EXP -> TK_nvarchar
Rule 118   EXP -> TK_int
Rule 119   EXP -> TK_decimal
Rule 120   EXP -> TK_date
Rule 121   EXP -> TK_datetime
Rule 122   EXP -> RW_null
Rule 123   EXP -> TK_lpar EXP TK_rpar
Rule 124   ARITHMETICS -> EXP TK_plus EXP
Rule 125   ARITHMETICS -> EXP TK_minus EXP
Rule 126   ARITHMETICS -> EXP TK_mult EXP
Rule 127   ARITHMETICS -> EXP TK_div EXP
Rule 128   ARITHMETICS -> EXP TK_mod EXP
Rule 129   ARITHMETICS -> TK_minus EXP
Rule 130   RELATIONALS -> EXP TK_equalequal EXP
Rule 131   RELATIONALS -> EXP TK_equal EXP
Rule 132   RELATIONALS -> EXP TK_notequal EXP
Rule 133   RELATIONALS -> EXP TK_lessequal EXP
Rule 134   RELATIONALS -> EXP TK_greatequal EXP
Rule 135   RELATIONALS -> EXP TK_less EXP
Rule 136   RELATIONALS -> EXP TK_great EXP
Rule 137   LOGICS -> EXP TK_and EXP
Rule 138   LOGICS -> EXP TK_or EXP
Rule 139   LOGICS -> TK_not EXP
Rule 140   CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar
Rule 141   NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
Rule 142   NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
Rule 143   NATIVEFUNC -> RW_hoy TK_lpar TK_rpar
Rule 144   TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
Rule 145   TYPE -> RW_int
Rule 146   TYPE -> RW_bit
Rule 147   TYPE -> RW_decimal
Rule 148   TYPE -> RW_date
Rule 149   TYPE -> RW_datetime
Rule 150   TYPE -> RW_nchar
Rule 151   TYPE -> RW_nvarchar

Terminals, with rules where they appear

RW_add               : 58
RW_alter             : 57
RW_as                : 42 43 77 78 80 81 95 96 101 140
RW_base              : 28
RW_begin             : 76 102 103
RW_bit               : 146
RW_break             : 24
RW_cas               : 140
RW_case              : 77 78 79 80 81 82
RW_column            : 61
RW_concatenar        : 141
RW_contar            : 
RW_continue          : 25
RW_create            : 28 45 93 94 95 96 97 98
RW_data              : 28
RW_date              : 148
RW_datetime          : 149
RW_decimal           : 147
RW_declare           : 29 30
RW_delete            : 73
RW_drop              : 59 62
RW_else              : 74 89
RW_end               : 74 75 76 77 78 79 80 81 82 102 103
RW_for               : 92
RW_foreing           : 52
RW_from              : 35 36 73
RW_function          : 93 94
RW_hoy               : 143
RW_if                : 74 74 75 75 76 144
RW_in                : 92
RW_insert            : 63
RW_int               : 145
RW_into              : 63
RW_key               : 52 53 54 56
RW_loop              : 92
RW_nchar             : 150
RW_not               : 53 54 55
RW_null              : 53 54 55 122
RW_nvarchar          : 151
RW_primary           : 53 54 56
RW_print             : 90
RW_procedure         : 95 96 97 98
RW_ref               : 52
RW_rename            : 60 61
RW_return            : 26 27
RW_returns           : 93 94
RW_select            : 35 36 37
RW_set               : 34 68
RW_substraer         : 142
RW_table             : 45 57 62 72
RW_then              : 74 75 88 89
RW_to                : 60 61
RW_truncate          : 72
RW_update            : 68
RW_values            : 63
RW_when              : 88
RW_where             : 35 68 73
RW_while             : 91
TK_and               : 137
TK_comma             : 31 40 46 64 66 69 99 106 141 142 142 144 144
TK_date              : 120
TK_datetime          : 121
TK_decimal           : 119
TK_div               : 127
TK_dot               : 92
TK_equal             : 30 34 71 131
TK_equalequal        : 130
TK_field             : 28 35 36 43 45 48 49 50 51 52 52 52 57 58 59 60 61 61 62 63 64 65 68 71 72 73 77 80 93 94 95 96 97 98 104 105 116
TK_great             : 136
TK_greatequal        : 134
TK_id                : 30 33 34 92 101 115
TK_int               : 48 50 118
TK_less              : 135
TK_lessequal         : 133
TK_lpar              : 45 48 50 52 52 63 63 93 94 104 105 123 140 141 142 143 144
TK_minus             : 125 129
TK_mod               : 128
TK_mult              : 39 126
TK_not               : 139
TK_notequal          : 132
TK_nvarchar          : 42 78 81 117
TK_or                : 138
TK_plus              : 124
TK_rpar              : 45 48 50 52 52 63 63 93 94 104 105 123 140 141 142 143 144
TK_semicolon         : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
error                : 

Nonterminals, with rules where they appear

ACTION               : 57
ALTERTAB             : 7
ARGS                 : 104 106
ARITHMETICS          : 108
ASIGNID              : 15
ATTRIBUTE            : 46 47
ATTRIBUTES           : 45 46
CALLFUNC             : 21 113
CASESTRUCT_S         : 17
CAST                 : 111
CREATEDB             : 5
CREATETABLE          : 6
DECLAREID            : 14
DECLID               : 31 32
DECLIDS              : 29 31
DELETETAB            : 12
DROPTAB              : 8
ELSE                 : 83 85
ENCAP                : 22 91 92 93 94 95 96 97 98
EXP                  : 26 30 34 35 42 43 44 66 67 68 71 73 74 75 76 77 78 79 88 88 89 90 91 92 92 106 107 123 124 124 125 125 126 126 127 127 128 128 129 130 130 131 131 132 132 133 133 134 134 135 135 136 136 137 137 138 138 139 140 141 141 142 142 142 144 144 144
FIELDS               : 35 36
FORSTRUCT            : 19
FUNCDEC              : 20
IDS                  : 40 41
IFSTRUCT             : 16
INIT                 : 0
INSERTREG            : 9
INSTRUCTION          : 3 4
INSTRUCTIONS         : 1 3 74 74 75 76 102
LIST_ATTRIBS         : 63 64
LIST_EXPS            : 63 66
LIST_IDS             : 37 38 40
LOGICS               : 110
NATIVEFUNC           : 112
PARAM                : 99 100
PARAMS               : 93 95 97 99
PRINT                : 23
PROPS                : 48 49
RELATIONALS          : 109
SELECT               : 13
TERNARY              : 114
TRUNCATETAB          : 11
TYPE                 : 30 33 48 49 50 51 58 93 94 101 140
UPDATETAB            : 10
VALUESTAB            : 68 69
VALUETAB             : 69 70
WHEN                 : 86 87
WHENELSE             : 77 78 79 80 81 82
WHENS                : 83 84 86
WHILESTRUCT          : 18

Parsing method: LALR

state 0

    (0) S' -> . INIT
    (1) INIT -> . INSTRUCTIONS
    (2) INIT -> .
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    $end            reduce using rule 2 (INIT -> .)
    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INIT                           shift and go to state 1
    INSTRUCTIONS                   shift and go to state 2
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 1

    (0) S' -> INIT .



state 2

    (1) INIT -> INSTRUCTIONS .
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    $end            reduce using rule 1 (INIT -> INSTRUCTIONS .)
    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INSTRUCTION                    shift and go to state 43
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 3

    (4) INSTRUCTIONS -> INSTRUCTION .

    RW_break        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_continue     reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_return       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_create       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_alter        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_drop         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_insert       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_update       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_truncate     reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_delete       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_select       reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_declare      reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_set          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_if           reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_case         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_while        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_for          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    TK_field        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_begin        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_print        reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    $end            reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_end          reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)
    RW_else         reduce using rule 4 (INSTRUCTIONS -> INSTRUCTION .)


state 4

    (5) INSTRUCTION -> CREATEDB . TK_semicolon

    TK_semicolon    shift and go to state 44


state 5

    (6) INSTRUCTION -> CREATETABLE . TK_semicolon

    TK_semicolon    shift and go to state 45


state 6

    (7) INSTRUCTION -> ALTERTAB . TK_semicolon

    TK_semicolon    shift and go to state 46


state 7

    (8) INSTRUCTION -> DROPTAB . TK_semicolon

    TK_semicolon    shift and go to state 47


state 8

    (9) INSTRUCTION -> INSERTREG . TK_semicolon

    TK_semicolon    shift and go to state 48


state 9

    (10) INSTRUCTION -> UPDATETAB . TK_semicolon

    TK_semicolon    shift and go to state 49


state 10

    (11) INSTRUCTION -> TRUNCATETAB . TK_semicolon

    TK_semicolon    shift and go to state 50


state 11

    (12) INSTRUCTION -> DELETETAB . TK_semicolon

    TK_semicolon    shift and go to state 51


state 12

    (13) INSTRUCTION -> SELECT . TK_semicolon

    TK_semicolon    shift and go to state 52


state 13

    (14) INSTRUCTION -> DECLAREID . TK_semicolon

    TK_semicolon    shift and go to state 53


state 14

    (15) INSTRUCTION -> ASIGNID . TK_semicolon

    TK_semicolon    shift and go to state 54


state 15

    (16) INSTRUCTION -> IFSTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 55


state 16

    (17) INSTRUCTION -> CASESTRUCT_S . TK_semicolon

    TK_semicolon    shift and go to state 56


state 17

    (18) INSTRUCTION -> WHILESTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 57


state 18

    (19) INSTRUCTION -> FORSTRUCT . TK_semicolon

    TK_semicolon    shift and go to state 58


state 19

    (20) INSTRUCTION -> FUNCDEC . TK_semicolon

    TK_semicolon    shift and go to state 59


state 20

    (21) INSTRUCTION -> CALLFUNC . TK_semicolon

    TK_semicolon    shift and go to state 60


state 21

    (22) INSTRUCTION -> ENCAP . TK_semicolon

    TK_semicolon    shift and go to state 61


state 22

    (23) INSTRUCTION -> PRINT . TK_semicolon

    TK_semicolon    shift and go to state 62


state 23

    (24) INSTRUCTION -> RW_break . TK_semicolon

    TK_semicolon    shift and go to state 63


state 24

    (25) INSTRUCTION -> RW_continue . TK_semicolon

    TK_semicolon    shift and go to state 64


state 25

    (26) INSTRUCTION -> RW_return . EXP TK_semicolon
    (27) INSTRUCTION -> RW_return . TK_semicolon
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_semicolon    shift and go to state 66
    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 65
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 26

    (28) CREATEDB -> RW_create . RW_data RW_base TK_field
    (45) CREATETABLE -> RW_create . RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (93) FUNCDEC -> RW_create . RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> RW_create . RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> RW_create . RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> RW_create . RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> RW_create . RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> RW_create . RW_procedure TK_field ENCAP

    RW_data         shift and go to state 90
    RW_table        shift and go to state 91
    RW_function     shift and go to state 92
    RW_procedure    shift and go to state 93


state 27

    (104) CALLFUNC -> TK_field . TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> TK_field . TK_lpar TK_rpar

    TK_lpar         shift and go to state 94


state 28

    (57) ALTERTAB -> RW_alter . RW_table TK_field ACTION

    RW_table        shift and go to state 95


state 29

    (62) DROPTAB -> RW_drop . RW_table TK_field

    RW_table        shift and go to state 96


state 30

    (63) INSERTREG -> RW_insert . RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    RW_into         shift and go to state 97


state 31

    (68) UPDATETAB -> RW_update . TK_field RW_set VALUESTAB RW_where EXP

    TK_field        shift and go to state 98


state 32

    (34) ASIGNID -> RW_set . TK_id TK_equal EXP

    TK_id           shift and go to state 99


state 33

    (72) TRUNCATETAB -> RW_truncate . RW_table TK_field

    RW_table        shift and go to state 100


state 34

    (73) DELETETAB -> RW_delete . RW_from TK_field RW_where EXP

    RW_from         shift and go to state 101


state 35

    (35) SELECT -> RW_select . FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> RW_select . FIELDS RW_from TK_field
    (37) SELECT -> RW_select . LIST_IDS
    (38) FIELDS -> . LIST_IDS
    (39) FIELDS -> . TK_mult
    (40) LIST_IDS -> . LIST_IDS TK_comma IDS
    (41) LIST_IDS -> . IDS
    (42) IDS -> . EXP RW_as TK_nvarchar
    (43) IDS -> . EXP RW_as TK_field
    (44) IDS -> . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_mult         shift and go to state 105
    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    FIELDS                         shift and go to state 102
    EXP                            shift and go to state 103
    LIST_IDS                       shift and go to state 104
    IDS                            shift and go to state 106
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 36

    (29) DECLAREID -> RW_declare . DECLIDS
    (30) DECLAREID -> RW_declare . TK_id TYPE TK_equal EXP
    (31) DECLIDS -> . DECLIDS TK_comma DECLID
    (32) DECLIDS -> . DECLID
    (33) DECLID -> . TK_id TYPE

    TK_id           shift and go to state 108

    DECLIDS                        shift and go to state 107
    DECLID                         shift and go to state 109

state 37

    (74) IFSTRUCT -> RW_if . EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> RW_if . EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> RW_if . EXP RW_begin INSTRUCTIONS RW_end
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 110
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 38

    (102) ENCAP -> RW_begin . INSTRUCTIONS RW_end
    (103) ENCAP -> RW_begin . RW_end
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    RW_end          shift and go to state 112
    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INSTRUCTIONS                   shift and go to state 111
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 39

    (77) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> RW_case . EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> RW_case . WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> RW_case . WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> RW_case . WHENELSE RW_end
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (83) WHENELSE -> . WHENS ELSE
    (84) WHENELSE -> . WHENS
    (85) WHENELSE -> . ELSE
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (86) WHENS -> . WHENS WHEN
    (87) WHENS -> . WHEN
    (89) ELSE -> . RW_else RW_then EXP
    (88) WHEN -> . RW_when EXP RW_then EXP

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89
    RW_else         shift and go to state 118
    RW_when         shift and go to state 119

    EXP                            shift and go to state 113
    WHENELSE                       shift and go to state 114
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73
    WHENS                          shift and go to state 115
    ELSE                           shift and go to state 116
    WHEN                           shift and go to state 117

state 40

    (91) WHILESTRUCT -> RW_while . EXP ENCAP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 120
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 41

    (92) FORSTRUCT -> RW_for . TK_id RW_in EXP TK_dot EXP ENCAP RW_loop

    TK_id           shift and go to state 121


state 42

    (90) PRINT -> RW_print . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 122
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 43

    (3) INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .

    RW_break        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_continue     reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_return       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_create       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_alter        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_drop         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_insert       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_update       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_truncate     reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_delete       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_select       reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_declare      reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_set          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_if           reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_case         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_while        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_for          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    TK_field        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_begin        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_print        reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    $end            reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_end          reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)
    RW_else         reduce using rule 3 (INSTRUCTIONS -> INSTRUCTIONS INSTRUCTION .)


state 44

    (5) INSTRUCTION -> CREATEDB TK_semicolon .

    RW_break        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_continue     reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_return       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_create       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_alter        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_drop         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_insert       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_update       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_truncate     reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_delete       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_select       reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_declare      reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_set          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_if           reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_case         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_while        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_for          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    TK_field        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_begin        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_print        reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    $end            reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_end          reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)
    RW_else         reduce using rule 5 (INSTRUCTION -> CREATEDB TK_semicolon .)


state 45

    (6) INSTRUCTION -> CREATETABLE TK_semicolon .

    RW_break        reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_continue     reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_return       reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_create       reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_alter        reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_drop         reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_insert       reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_update       reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_truncate     reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_delete       reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_select       reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_declare      reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_set          reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_if           reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_case         reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_while        reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_for          reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    TK_field        reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_begin        reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_print        reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    $end            reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_end          reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)
    RW_else         reduce using rule 6 (INSTRUCTION -> CREATETABLE TK_semicolon .)


state 46

    (7) INSTRUCTION -> ALTERTAB TK_semicolon .

    RW_break        reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_continue     reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_return       reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_create       reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_alter        reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_drop         reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_insert       reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_update       reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_truncate     reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_delete       reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_select       reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_declare      reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_set          reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_if           reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_case         reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_while        reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_for          reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    TK_field        reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_begin        reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_print        reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    $end            reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_end          reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)
    RW_else         reduce using rule 7 (INSTRUCTION -> ALTERTAB TK_semicolon .)


state 47

    (8) INSTRUCTION -> DROPTAB TK_semicolon .

    RW_break        reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_continue     reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_return       reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_create       reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_alter        reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_drop         reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_insert       reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_update       reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_truncate     reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_delete       reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_select       reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_declare      reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_set          reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_if           reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_case         reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_while        reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_for          reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    TK_field        reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_begin        reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_print        reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    $end            reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_end          reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)
    RW_else         reduce using rule 8 (INSTRUCTION -> DROPTAB TK_semicolon .)


state 48

    (9) INSTRUCTION -> INSERTREG TK_semicolon .

    RW_break        reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_continue     reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_return       reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_create       reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_alter        reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_drop         reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_insert       reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_update       reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_truncate     reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_delete       reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_select       reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_declare      reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_set          reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_if           reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_case         reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_while        reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_for          reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    TK_field        reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_begin        reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_print        reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    $end            reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_end          reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)
    RW_else         reduce using rule 9 (INSTRUCTION -> INSERTREG TK_semicolon .)


state 49

    (10) INSTRUCTION -> UPDATETAB TK_semicolon .

    RW_break        reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_continue     reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_return       reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_create       reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_alter        reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_drop         reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_insert       reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_update       reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_truncate     reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_delete       reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_select       reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_declare      reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_set          reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_if           reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_case         reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_while        reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_for          reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    TK_field        reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_begin        reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_print        reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    $end            reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_end          reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)
    RW_else         reduce using rule 10 (INSTRUCTION -> UPDATETAB TK_semicolon .)


state 50

    (11) INSTRUCTION -> TRUNCATETAB TK_semicolon .

    RW_break        reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_continue     reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_return       reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_create       reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_alter        reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_drop         reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_insert       reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_update       reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_truncate     reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_delete       reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_select       reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_declare      reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_set          reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_if           reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_case         reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_while        reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_for          reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    TK_field        reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_begin        reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_print        reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    $end            reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_end          reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)
    RW_else         reduce using rule 11 (INSTRUCTION -> TRUNCATETAB TK_semicolon .)


state 51

    (12) INSTRUCTION -> DELETETAB TK_semicolon .

    RW_break        reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_continue     reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_return       reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_create       reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_alter        reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_drop         reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_insert       reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_update       reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_truncate     reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_delete       reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_select       reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_declare      reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_set          reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_if           reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_case         reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_while        reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_for          reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    TK_field        reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_begin        reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_print        reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    $end            reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_end          reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)
    RW_else         reduce using rule 12 (INSTRUCTION -> DELETETAB TK_semicolon .)


state 52

    (13) INSTRUCTION -> SELECT TK_semicolon .

    RW_break        reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_continue     reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_return       reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_create       reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_alter        reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_drop         reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_insert       reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_update       reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_truncate     reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_delete       reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_select       reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_declare      reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_set          reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_if           reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_case         reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_while        reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_for          reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    TK_field        reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_begin        reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_print        reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    $end            reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_end          reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)
    RW_else         reduce using rule 13 (INSTRUCTION -> SELECT TK_semicolon .)


state 53

    (14) INSTRUCTION -> DECLAREID TK_semicolon .

    RW_break        reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_continue     reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_return       reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_create       reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_alter        reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_drop         reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_insert       reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_update       reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_truncate     reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_delete       reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_select       reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_declare      reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_set          reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_if           reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_case         reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_while        reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_for          reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    TK_field        reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_begin        reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_print        reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    $end            reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_end          reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)
    RW_else         reduce using rule 14 (INSTRUCTION -> DECLAREID TK_semicolon .)


state 54

    (15) INSTRUCTION -> ASIGNID TK_semicolon .

    RW_break        reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_continue     reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_return       reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_create       reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_alter        reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_drop         reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_insert       reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_update       reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_truncate     reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_delete       reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_select       reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_declare      reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_set          reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_if           reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_case         reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_while        reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_for          reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    TK_field        reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_begin        reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_print        reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    $end            reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_end          reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)
    RW_else         reduce using rule 15 (INSTRUCTION -> ASIGNID TK_semicolon .)


state 55

    (16) INSTRUCTION -> IFSTRUCT TK_semicolon .

    RW_break        reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_continue     reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_return       reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_create       reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_alter        reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_drop         reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_insert       reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_update       reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_delete       reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_select       reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_declare      reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_set          reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_if           reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_case         reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_while        reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_for          reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    TK_field        reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_begin        reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_print        reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    $end            reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_end          reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)
    RW_else         reduce using rule 16 (INSTRUCTION -> IFSTRUCT TK_semicolon .)


state 56

    (17) INSTRUCTION -> CASESTRUCT_S TK_semicolon .

    RW_break        reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_continue     reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_return       reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_create       reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_alter        reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_drop         reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_insert       reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_update       reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_truncate     reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_delete       reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_select       reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_declare      reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_set          reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_if           reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_case         reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_while        reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_for          reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    TK_field        reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_begin        reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_print        reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    $end            reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_end          reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)
    RW_else         reduce using rule 17 (INSTRUCTION -> CASESTRUCT_S TK_semicolon .)


state 57

    (18) INSTRUCTION -> WHILESTRUCT TK_semicolon .

    RW_break        reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_continue     reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_return       reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_create       reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_alter        reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_drop         reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_insert       reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_update       reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_delete       reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_select       reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_declare      reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_set          reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_if           reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_case         reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_while        reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_for          reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    TK_field        reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_begin        reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_print        reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    $end            reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_end          reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)
    RW_else         reduce using rule 18 (INSTRUCTION -> WHILESTRUCT TK_semicolon .)


state 58

    (19) INSTRUCTION -> FORSTRUCT TK_semicolon .

    RW_break        reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_continue     reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_return       reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_create       reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_alter        reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_drop         reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_insert       reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_update       reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_truncate     reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_delete       reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_select       reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_declare      reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_set          reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_if           reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_case         reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_while        reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_for          reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    TK_field        reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_begin        reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_print        reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    $end            reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_end          reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)
    RW_else         reduce using rule 19 (INSTRUCTION -> FORSTRUCT TK_semicolon .)


state 59

    (20) INSTRUCTION -> FUNCDEC TK_semicolon .

    RW_break        reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_continue     reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_return       reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_create       reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_alter        reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_drop         reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_insert       reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_update       reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_truncate     reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_delete       reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_select       reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_declare      reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_set          reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_if           reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_case         reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_while        reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_for          reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    TK_field        reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_begin        reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_print        reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    $end            reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_end          reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)
    RW_else         reduce using rule 20 (INSTRUCTION -> FUNCDEC TK_semicolon .)


state 60

    (21) INSTRUCTION -> CALLFUNC TK_semicolon .

    RW_break        reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_continue     reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_return       reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_create       reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_alter        reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_drop         reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_insert       reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_update       reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_truncate     reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_delete       reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_select       reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_declare      reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_set          reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_if           reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_case         reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_while        reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_for          reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    TK_field        reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_begin        reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_print        reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    $end            reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_end          reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)
    RW_else         reduce using rule 21 (INSTRUCTION -> CALLFUNC TK_semicolon .)


state 61

    (22) INSTRUCTION -> ENCAP TK_semicolon .

    RW_break        reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_continue     reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_return       reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_create       reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_alter        reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_drop         reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_insert       reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_update       reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_truncate     reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_delete       reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_select       reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_declare      reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_set          reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_if           reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_case         reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_while        reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_for          reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    TK_field        reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_begin        reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_print        reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    $end            reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_end          reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)
    RW_else         reduce using rule 22 (INSTRUCTION -> ENCAP TK_semicolon .)


state 62

    (23) INSTRUCTION -> PRINT TK_semicolon .

    RW_break        reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_continue     reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_return       reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_create       reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_alter        reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_drop         reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_insert       reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_update       reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_truncate     reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_delete       reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_select       reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_declare      reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_set          reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_if           reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_case         reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_while        reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_for          reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    TK_field        reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_begin        reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_print        reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    $end            reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_end          reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)
    RW_else         reduce using rule 23 (INSTRUCTION -> PRINT TK_semicolon .)


state 63

    (24) INSTRUCTION -> RW_break TK_semicolon .

    RW_break        reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_continue     reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_return       reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_create       reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_alter        reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_drop         reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_insert       reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_update       reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_truncate     reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_delete       reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_select       reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_declare      reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_set          reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_if           reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_case         reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_while        reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_for          reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    TK_field        reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_begin        reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_print        reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    $end            reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_end          reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)
    RW_else         reduce using rule 24 (INSTRUCTION -> RW_break TK_semicolon .)


state 64

    (25) INSTRUCTION -> RW_continue TK_semicolon .

    RW_break        reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_continue     reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_return       reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_create       reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_alter        reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_drop         reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_insert       reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_update       reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_truncate     reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_delete       reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_select       reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_declare      reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_set          reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_if           reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_case         reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_while        reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_for          reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    TK_field        reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_begin        reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_print        reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    $end            reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_end          reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)
    RW_else         reduce using rule 25 (INSTRUCTION -> RW_continue TK_semicolon .)


state 65

    (26) INSTRUCTION -> RW_return EXP . TK_semicolon
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    shift and go to state 123
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 66

    (27) INSTRUCTION -> RW_return TK_semicolon .

    RW_break        reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_continue     reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_return       reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_create       reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_alter        reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_drop         reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_insert       reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_update       reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_truncate     reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_delete       reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_select       reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_declare      reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_set          reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_if           reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_case         reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_while        reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_for          reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    TK_field        reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_begin        reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_print        reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    $end            reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_end          reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)
    RW_else         reduce using rule 27 (INSTRUCTION -> RW_return TK_semicolon .)


state 67

    (108) EXP -> ARITHMETICS .

    TK_semicolon    reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_plus         reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_minus        reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_mult         reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_div          reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_mod          reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_equalequal   reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_equal        reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_notequal     reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_lessequal    reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_greatequal   reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_less         reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_great        reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_and          reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_or           reduce using rule 108 (EXP -> ARITHMETICS .)
    RW_as           reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_comma        reduce using rule 108 (EXP -> ARITHMETICS .)
    RW_from         reduce using rule 108 (EXP -> ARITHMETICS .)
    RW_then         reduce using rule 108 (EXP -> ARITHMETICS .)
    RW_begin        reduce using rule 108 (EXP -> ARITHMETICS .)
    RW_else         reduce using rule 108 (EXP -> ARITHMETICS .)
    RW_when         reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_rpar         reduce using rule 108 (EXP -> ARITHMETICS .)
    RW_end          reduce using rule 108 (EXP -> ARITHMETICS .)
    TK_dot          reduce using rule 108 (EXP -> ARITHMETICS .)
    RW_where        reduce using rule 108 (EXP -> ARITHMETICS .)


state 68

    (109) EXP -> RELATIONALS .

    TK_semicolon    reduce using rule 109 (EXP -> RELATIONALS .)
    TK_plus         reduce using rule 109 (EXP -> RELATIONALS .)
    TK_minus        reduce using rule 109 (EXP -> RELATIONALS .)
    TK_mult         reduce using rule 109 (EXP -> RELATIONALS .)
    TK_div          reduce using rule 109 (EXP -> RELATIONALS .)
    TK_mod          reduce using rule 109 (EXP -> RELATIONALS .)
    TK_equalequal   reduce using rule 109 (EXP -> RELATIONALS .)
    TK_equal        reduce using rule 109 (EXP -> RELATIONALS .)
    TK_notequal     reduce using rule 109 (EXP -> RELATIONALS .)
    TK_lessequal    reduce using rule 109 (EXP -> RELATIONALS .)
    TK_greatequal   reduce using rule 109 (EXP -> RELATIONALS .)
    TK_less         reduce using rule 109 (EXP -> RELATIONALS .)
    TK_great        reduce using rule 109 (EXP -> RELATIONALS .)
    TK_and          reduce using rule 109 (EXP -> RELATIONALS .)
    TK_or           reduce using rule 109 (EXP -> RELATIONALS .)
    RW_as           reduce using rule 109 (EXP -> RELATIONALS .)
    TK_comma        reduce using rule 109 (EXP -> RELATIONALS .)
    RW_from         reduce using rule 109 (EXP -> RELATIONALS .)
    RW_then         reduce using rule 109 (EXP -> RELATIONALS .)
    RW_begin        reduce using rule 109 (EXP -> RELATIONALS .)
    RW_else         reduce using rule 109 (EXP -> RELATIONALS .)
    RW_when         reduce using rule 109 (EXP -> RELATIONALS .)
    TK_rpar         reduce using rule 109 (EXP -> RELATIONALS .)
    RW_end          reduce using rule 109 (EXP -> RELATIONALS .)
    TK_dot          reduce using rule 109 (EXP -> RELATIONALS .)
    RW_where        reduce using rule 109 (EXP -> RELATIONALS .)


state 69

    (110) EXP -> LOGICS .

    TK_semicolon    reduce using rule 110 (EXP -> LOGICS .)
    TK_plus         reduce using rule 110 (EXP -> LOGICS .)
    TK_minus        reduce using rule 110 (EXP -> LOGICS .)
    TK_mult         reduce using rule 110 (EXP -> LOGICS .)
    TK_div          reduce using rule 110 (EXP -> LOGICS .)
    TK_mod          reduce using rule 110 (EXP -> LOGICS .)
    TK_equalequal   reduce using rule 110 (EXP -> LOGICS .)
    TK_equal        reduce using rule 110 (EXP -> LOGICS .)
    TK_notequal     reduce using rule 110 (EXP -> LOGICS .)
    TK_lessequal    reduce using rule 110 (EXP -> LOGICS .)
    TK_greatequal   reduce using rule 110 (EXP -> LOGICS .)
    TK_less         reduce using rule 110 (EXP -> LOGICS .)
    TK_great        reduce using rule 110 (EXP -> LOGICS .)
    TK_and          reduce using rule 110 (EXP -> LOGICS .)
    TK_or           reduce using rule 110 (EXP -> LOGICS .)
    RW_as           reduce using rule 110 (EXP -> LOGICS .)
    TK_comma        reduce using rule 110 (EXP -> LOGICS .)
    RW_from         reduce using rule 110 (EXP -> LOGICS .)
    RW_then         reduce using rule 110 (EXP -> LOGICS .)
    RW_begin        reduce using rule 110 (EXP -> LOGICS .)
    RW_else         reduce using rule 110 (EXP -> LOGICS .)
    RW_when         reduce using rule 110 (EXP -> LOGICS .)
    TK_rpar         reduce using rule 110 (EXP -> LOGICS .)
    RW_end          reduce using rule 110 (EXP -> LOGICS .)
    TK_dot          reduce using rule 110 (EXP -> LOGICS .)
    RW_where        reduce using rule 110 (EXP -> LOGICS .)


state 70

    (111) EXP -> CAST .

    TK_semicolon    reduce using rule 111 (EXP -> CAST .)
    TK_plus         reduce using rule 111 (EXP -> CAST .)
    TK_minus        reduce using rule 111 (EXP -> CAST .)
    TK_mult         reduce using rule 111 (EXP -> CAST .)
    TK_div          reduce using rule 111 (EXP -> CAST .)
    TK_mod          reduce using rule 111 (EXP -> CAST .)
    TK_equalequal   reduce using rule 111 (EXP -> CAST .)
    TK_equal        reduce using rule 111 (EXP -> CAST .)
    TK_notequal     reduce using rule 111 (EXP -> CAST .)
    TK_lessequal    reduce using rule 111 (EXP -> CAST .)
    TK_greatequal   reduce using rule 111 (EXP -> CAST .)
    TK_less         reduce using rule 111 (EXP -> CAST .)
    TK_great        reduce using rule 111 (EXP -> CAST .)
    TK_and          reduce using rule 111 (EXP -> CAST .)
    TK_or           reduce using rule 111 (EXP -> CAST .)
    RW_as           reduce using rule 111 (EXP -> CAST .)
    TK_comma        reduce using rule 111 (EXP -> CAST .)
    RW_from         reduce using rule 111 (EXP -> CAST .)
    RW_then         reduce using rule 111 (EXP -> CAST .)
    RW_begin        reduce using rule 111 (EXP -> CAST .)
    RW_else         reduce using rule 111 (EXP -> CAST .)
    RW_when         reduce using rule 111 (EXP -> CAST .)
    TK_rpar         reduce using rule 111 (EXP -> CAST .)
    RW_end          reduce using rule 111 (EXP -> CAST .)
    TK_dot          reduce using rule 111 (EXP -> CAST .)
    RW_where        reduce using rule 111 (EXP -> CAST .)


state 71

    (112) EXP -> NATIVEFUNC .

    TK_semicolon    reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_plus         reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_minus        reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_mult         reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_div          reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_mod          reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_equalequal   reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_equal        reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_notequal     reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_lessequal    reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_greatequal   reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_less         reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_great        reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_and          reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_or           reduce using rule 112 (EXP -> NATIVEFUNC .)
    RW_as           reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_comma        reduce using rule 112 (EXP -> NATIVEFUNC .)
    RW_from         reduce using rule 112 (EXP -> NATIVEFUNC .)
    RW_then         reduce using rule 112 (EXP -> NATIVEFUNC .)
    RW_begin        reduce using rule 112 (EXP -> NATIVEFUNC .)
    RW_else         reduce using rule 112 (EXP -> NATIVEFUNC .)
    RW_when         reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_rpar         reduce using rule 112 (EXP -> NATIVEFUNC .)
    RW_end          reduce using rule 112 (EXP -> NATIVEFUNC .)
    TK_dot          reduce using rule 112 (EXP -> NATIVEFUNC .)
    RW_where        reduce using rule 112 (EXP -> NATIVEFUNC .)


state 72

    (113) EXP -> CALLFUNC .

    TK_semicolon    reduce using rule 113 (EXP -> CALLFUNC .)
    TK_plus         reduce using rule 113 (EXP -> CALLFUNC .)
    TK_minus        reduce using rule 113 (EXP -> CALLFUNC .)
    TK_mult         reduce using rule 113 (EXP -> CALLFUNC .)
    TK_div          reduce using rule 113 (EXP -> CALLFUNC .)
    TK_mod          reduce using rule 113 (EXP -> CALLFUNC .)
    TK_equalequal   reduce using rule 113 (EXP -> CALLFUNC .)
    TK_equal        reduce using rule 113 (EXP -> CALLFUNC .)
    TK_notequal     reduce using rule 113 (EXP -> CALLFUNC .)
    TK_lessequal    reduce using rule 113 (EXP -> CALLFUNC .)
    TK_greatequal   reduce using rule 113 (EXP -> CALLFUNC .)
    TK_less         reduce using rule 113 (EXP -> CALLFUNC .)
    TK_great        reduce using rule 113 (EXP -> CALLFUNC .)
    TK_and          reduce using rule 113 (EXP -> CALLFUNC .)
    TK_or           reduce using rule 113 (EXP -> CALLFUNC .)
    RW_as           reduce using rule 113 (EXP -> CALLFUNC .)
    TK_comma        reduce using rule 113 (EXP -> CALLFUNC .)
    RW_from         reduce using rule 113 (EXP -> CALLFUNC .)
    RW_then         reduce using rule 113 (EXP -> CALLFUNC .)
    RW_begin        reduce using rule 113 (EXP -> CALLFUNC .)
    RW_else         reduce using rule 113 (EXP -> CALLFUNC .)
    RW_when         reduce using rule 113 (EXP -> CALLFUNC .)
    TK_rpar         reduce using rule 113 (EXP -> CALLFUNC .)
    RW_end          reduce using rule 113 (EXP -> CALLFUNC .)
    TK_dot          reduce using rule 113 (EXP -> CALLFUNC .)
    RW_where        reduce using rule 113 (EXP -> CALLFUNC .)


state 73

    (114) EXP -> TERNARY .

    TK_semicolon    reduce using rule 114 (EXP -> TERNARY .)
    TK_plus         reduce using rule 114 (EXP -> TERNARY .)
    TK_minus        reduce using rule 114 (EXP -> TERNARY .)
    TK_mult         reduce using rule 114 (EXP -> TERNARY .)
    TK_div          reduce using rule 114 (EXP -> TERNARY .)
    TK_mod          reduce using rule 114 (EXP -> TERNARY .)
    TK_equalequal   reduce using rule 114 (EXP -> TERNARY .)
    TK_equal        reduce using rule 114 (EXP -> TERNARY .)
    TK_notequal     reduce using rule 114 (EXP -> TERNARY .)
    TK_lessequal    reduce using rule 114 (EXP -> TERNARY .)
    TK_greatequal   reduce using rule 114 (EXP -> TERNARY .)
    TK_less         reduce using rule 114 (EXP -> TERNARY .)
    TK_great        reduce using rule 114 (EXP -> TERNARY .)
    TK_and          reduce using rule 114 (EXP -> TERNARY .)
    TK_or           reduce using rule 114 (EXP -> TERNARY .)
    RW_as           reduce using rule 114 (EXP -> TERNARY .)
    TK_comma        reduce using rule 114 (EXP -> TERNARY .)
    RW_from         reduce using rule 114 (EXP -> TERNARY .)
    RW_then         reduce using rule 114 (EXP -> TERNARY .)
    RW_begin        reduce using rule 114 (EXP -> TERNARY .)
    RW_else         reduce using rule 114 (EXP -> TERNARY .)
    RW_when         reduce using rule 114 (EXP -> TERNARY .)
    TK_rpar         reduce using rule 114 (EXP -> TERNARY .)
    RW_end          reduce using rule 114 (EXP -> TERNARY .)
    TK_dot          reduce using rule 114 (EXP -> TERNARY .)
    RW_where        reduce using rule 114 (EXP -> TERNARY .)


state 74

    (115) EXP -> TK_id .

    TK_semicolon    reduce using rule 115 (EXP -> TK_id .)
    TK_plus         reduce using rule 115 (EXP -> TK_id .)
    TK_minus        reduce using rule 115 (EXP -> TK_id .)
    TK_mult         reduce using rule 115 (EXP -> TK_id .)
    TK_div          reduce using rule 115 (EXP -> TK_id .)
    TK_mod          reduce using rule 115 (EXP -> TK_id .)
    TK_equalequal   reduce using rule 115 (EXP -> TK_id .)
    TK_equal        reduce using rule 115 (EXP -> TK_id .)
    TK_notequal     reduce using rule 115 (EXP -> TK_id .)
    TK_lessequal    reduce using rule 115 (EXP -> TK_id .)
    TK_greatequal   reduce using rule 115 (EXP -> TK_id .)
    TK_less         reduce using rule 115 (EXP -> TK_id .)
    TK_great        reduce using rule 115 (EXP -> TK_id .)
    TK_and          reduce using rule 115 (EXP -> TK_id .)
    TK_or           reduce using rule 115 (EXP -> TK_id .)
    RW_as           reduce using rule 115 (EXP -> TK_id .)
    TK_comma        reduce using rule 115 (EXP -> TK_id .)
    RW_from         reduce using rule 115 (EXP -> TK_id .)
    RW_then         reduce using rule 115 (EXP -> TK_id .)
    RW_begin        reduce using rule 115 (EXP -> TK_id .)
    RW_else         reduce using rule 115 (EXP -> TK_id .)
    RW_when         reduce using rule 115 (EXP -> TK_id .)
    TK_rpar         reduce using rule 115 (EXP -> TK_id .)
    RW_end          reduce using rule 115 (EXP -> TK_id .)
    TK_dot          reduce using rule 115 (EXP -> TK_id .)
    RW_where        reduce using rule 115 (EXP -> TK_id .)


state 75

    (116) EXP -> TK_field .
    (104) CALLFUNC -> TK_field . TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> TK_field . TK_lpar TK_rpar

    TK_semicolon    reduce using rule 116 (EXP -> TK_field .)
    TK_plus         reduce using rule 116 (EXP -> TK_field .)
    TK_minus        reduce using rule 116 (EXP -> TK_field .)
    TK_mult         reduce using rule 116 (EXP -> TK_field .)
    TK_div          reduce using rule 116 (EXP -> TK_field .)
    TK_mod          reduce using rule 116 (EXP -> TK_field .)
    TK_equalequal   reduce using rule 116 (EXP -> TK_field .)
    TK_equal        reduce using rule 116 (EXP -> TK_field .)
    TK_notequal     reduce using rule 116 (EXP -> TK_field .)
    TK_lessequal    reduce using rule 116 (EXP -> TK_field .)
    TK_greatequal   reduce using rule 116 (EXP -> TK_field .)
    TK_less         reduce using rule 116 (EXP -> TK_field .)
    TK_great        reduce using rule 116 (EXP -> TK_field .)
    TK_and          reduce using rule 116 (EXP -> TK_field .)
    TK_or           reduce using rule 116 (EXP -> TK_field .)
    RW_as           reduce using rule 116 (EXP -> TK_field .)
    TK_comma        reduce using rule 116 (EXP -> TK_field .)
    RW_from         reduce using rule 116 (EXP -> TK_field .)
    RW_then         reduce using rule 116 (EXP -> TK_field .)
    RW_begin        reduce using rule 116 (EXP -> TK_field .)
    RW_else         reduce using rule 116 (EXP -> TK_field .)
    RW_when         reduce using rule 116 (EXP -> TK_field .)
    TK_rpar         reduce using rule 116 (EXP -> TK_field .)
    RW_end          reduce using rule 116 (EXP -> TK_field .)
    TK_dot          reduce using rule 116 (EXP -> TK_field .)
    RW_where        reduce using rule 116 (EXP -> TK_field .)
    TK_lpar         shift and go to state 94


state 76

    (117) EXP -> TK_nvarchar .

    TK_semicolon    reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_plus         reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_minus        reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_mult         reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_div          reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_mod          reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_equalequal   reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_equal        reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_notequal     reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_lessequal    reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_greatequal   reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_less         reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_great        reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_and          reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_or           reduce using rule 117 (EXP -> TK_nvarchar .)
    RW_as           reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_comma        reduce using rule 117 (EXP -> TK_nvarchar .)
    RW_from         reduce using rule 117 (EXP -> TK_nvarchar .)
    RW_then         reduce using rule 117 (EXP -> TK_nvarchar .)
    RW_begin        reduce using rule 117 (EXP -> TK_nvarchar .)
    RW_else         reduce using rule 117 (EXP -> TK_nvarchar .)
    RW_when         reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_rpar         reduce using rule 117 (EXP -> TK_nvarchar .)
    RW_end          reduce using rule 117 (EXP -> TK_nvarchar .)
    TK_dot          reduce using rule 117 (EXP -> TK_nvarchar .)
    RW_where        reduce using rule 117 (EXP -> TK_nvarchar .)


state 77

    (118) EXP -> TK_int .

    TK_semicolon    reduce using rule 118 (EXP -> TK_int .)
    TK_plus         reduce using rule 118 (EXP -> TK_int .)
    TK_minus        reduce using rule 118 (EXP -> TK_int .)
    TK_mult         reduce using rule 118 (EXP -> TK_int .)
    TK_div          reduce using rule 118 (EXP -> TK_int .)
    TK_mod          reduce using rule 118 (EXP -> TK_int .)
    TK_equalequal   reduce using rule 118 (EXP -> TK_int .)
    TK_equal        reduce using rule 118 (EXP -> TK_int .)
    TK_notequal     reduce using rule 118 (EXP -> TK_int .)
    TK_lessequal    reduce using rule 118 (EXP -> TK_int .)
    TK_greatequal   reduce using rule 118 (EXP -> TK_int .)
    TK_less         reduce using rule 118 (EXP -> TK_int .)
    TK_great        reduce using rule 118 (EXP -> TK_int .)
    TK_and          reduce using rule 118 (EXP -> TK_int .)
    TK_or           reduce using rule 118 (EXP -> TK_int .)
    RW_as           reduce using rule 118 (EXP -> TK_int .)
    TK_comma        reduce using rule 118 (EXP -> TK_int .)
    RW_from         reduce using rule 118 (EXP -> TK_int .)
    RW_then         reduce using rule 118 (EXP -> TK_int .)
    RW_begin        reduce using rule 118 (EXP -> TK_int .)
    RW_else         reduce using rule 118 (EXP -> TK_int .)
    RW_when         reduce using rule 118 (EXP -> TK_int .)
    TK_rpar         reduce using rule 118 (EXP -> TK_int .)
    RW_end          reduce using rule 118 (EXP -> TK_int .)
    TK_dot          reduce using rule 118 (EXP -> TK_int .)
    RW_where        reduce using rule 118 (EXP -> TK_int .)


state 78

    (119) EXP -> TK_decimal .

    TK_semicolon    reduce using rule 119 (EXP -> TK_decimal .)
    TK_plus         reduce using rule 119 (EXP -> TK_decimal .)
    TK_minus        reduce using rule 119 (EXP -> TK_decimal .)
    TK_mult         reduce using rule 119 (EXP -> TK_decimal .)
    TK_div          reduce using rule 119 (EXP -> TK_decimal .)
    TK_mod          reduce using rule 119 (EXP -> TK_decimal .)
    TK_equalequal   reduce using rule 119 (EXP -> TK_decimal .)
    TK_equal        reduce using rule 119 (EXP -> TK_decimal .)
    TK_notequal     reduce using rule 119 (EXP -> TK_decimal .)
    TK_lessequal    reduce using rule 119 (EXP -> TK_decimal .)
    TK_greatequal   reduce using rule 119 (EXP -> TK_decimal .)
    TK_less         reduce using rule 119 (EXP -> TK_decimal .)
    TK_great        reduce using rule 119 (EXP -> TK_decimal .)
    TK_and          reduce using rule 119 (EXP -> TK_decimal .)
    TK_or           reduce using rule 119 (EXP -> TK_decimal .)
    RW_as           reduce using rule 119 (EXP -> TK_decimal .)
    TK_comma        reduce using rule 119 (EXP -> TK_decimal .)
    RW_from         reduce using rule 119 (EXP -> TK_decimal .)
    RW_then         reduce using rule 119 (EXP -> TK_decimal .)
    RW_begin        reduce using rule 119 (EXP -> TK_decimal .)
    RW_else         reduce using rule 119 (EXP -> TK_decimal .)
    RW_when         reduce using rule 119 (EXP -> TK_decimal .)
    TK_rpar         reduce using rule 119 (EXP -> TK_decimal .)
    RW_end          reduce using rule 119 (EXP -> TK_decimal .)
    TK_dot          reduce using rule 119 (EXP -> TK_decimal .)
    RW_where        reduce using rule 119 (EXP -> TK_decimal .)


state 79

    (120) EXP -> TK_date .

    TK_semicolon    reduce using rule 120 (EXP -> TK_date .)
    TK_plus         reduce using rule 120 (EXP -> TK_date .)
    TK_minus        reduce using rule 120 (EXP -> TK_date .)
    TK_mult         reduce using rule 120 (EXP -> TK_date .)
    TK_div          reduce using rule 120 (EXP -> TK_date .)
    TK_mod          reduce using rule 120 (EXP -> TK_date .)
    TK_equalequal   reduce using rule 120 (EXP -> TK_date .)
    TK_equal        reduce using rule 120 (EXP -> TK_date .)
    TK_notequal     reduce using rule 120 (EXP -> TK_date .)
    TK_lessequal    reduce using rule 120 (EXP -> TK_date .)
    TK_greatequal   reduce using rule 120 (EXP -> TK_date .)
    TK_less         reduce using rule 120 (EXP -> TK_date .)
    TK_great        reduce using rule 120 (EXP -> TK_date .)
    TK_and          reduce using rule 120 (EXP -> TK_date .)
    TK_or           reduce using rule 120 (EXP -> TK_date .)
    RW_as           reduce using rule 120 (EXP -> TK_date .)
    TK_comma        reduce using rule 120 (EXP -> TK_date .)
    RW_from         reduce using rule 120 (EXP -> TK_date .)
    RW_then         reduce using rule 120 (EXP -> TK_date .)
    RW_begin        reduce using rule 120 (EXP -> TK_date .)
    RW_else         reduce using rule 120 (EXP -> TK_date .)
    RW_when         reduce using rule 120 (EXP -> TK_date .)
    TK_rpar         reduce using rule 120 (EXP -> TK_date .)
    RW_end          reduce using rule 120 (EXP -> TK_date .)
    TK_dot          reduce using rule 120 (EXP -> TK_date .)
    RW_where        reduce using rule 120 (EXP -> TK_date .)


state 80

    (121) EXP -> TK_datetime .

    TK_semicolon    reduce using rule 121 (EXP -> TK_datetime .)
    TK_plus         reduce using rule 121 (EXP -> TK_datetime .)
    TK_minus        reduce using rule 121 (EXP -> TK_datetime .)
    TK_mult         reduce using rule 121 (EXP -> TK_datetime .)
    TK_div          reduce using rule 121 (EXP -> TK_datetime .)
    TK_mod          reduce using rule 121 (EXP -> TK_datetime .)
    TK_equalequal   reduce using rule 121 (EXP -> TK_datetime .)
    TK_equal        reduce using rule 121 (EXP -> TK_datetime .)
    TK_notequal     reduce using rule 121 (EXP -> TK_datetime .)
    TK_lessequal    reduce using rule 121 (EXP -> TK_datetime .)
    TK_greatequal   reduce using rule 121 (EXP -> TK_datetime .)
    TK_less         reduce using rule 121 (EXP -> TK_datetime .)
    TK_great        reduce using rule 121 (EXP -> TK_datetime .)
    TK_and          reduce using rule 121 (EXP -> TK_datetime .)
    TK_or           reduce using rule 121 (EXP -> TK_datetime .)
    RW_as           reduce using rule 121 (EXP -> TK_datetime .)
    TK_comma        reduce using rule 121 (EXP -> TK_datetime .)
    RW_from         reduce using rule 121 (EXP -> TK_datetime .)
    RW_then         reduce using rule 121 (EXP -> TK_datetime .)
    RW_begin        reduce using rule 121 (EXP -> TK_datetime .)
    RW_else         reduce using rule 121 (EXP -> TK_datetime .)
    RW_when         reduce using rule 121 (EXP -> TK_datetime .)
    TK_rpar         reduce using rule 121 (EXP -> TK_datetime .)
    RW_end          reduce using rule 121 (EXP -> TK_datetime .)
    TK_dot          reduce using rule 121 (EXP -> TK_datetime .)
    RW_where        reduce using rule 121 (EXP -> TK_datetime .)


state 81

    (122) EXP -> RW_null .

    TK_semicolon    reduce using rule 122 (EXP -> RW_null .)
    TK_plus         reduce using rule 122 (EXP -> RW_null .)
    TK_minus        reduce using rule 122 (EXP -> RW_null .)
    TK_mult         reduce using rule 122 (EXP -> RW_null .)
    TK_div          reduce using rule 122 (EXP -> RW_null .)
    TK_mod          reduce using rule 122 (EXP -> RW_null .)
    TK_equalequal   reduce using rule 122 (EXP -> RW_null .)
    TK_equal        reduce using rule 122 (EXP -> RW_null .)
    TK_notequal     reduce using rule 122 (EXP -> RW_null .)
    TK_lessequal    reduce using rule 122 (EXP -> RW_null .)
    TK_greatequal   reduce using rule 122 (EXP -> RW_null .)
    TK_less         reduce using rule 122 (EXP -> RW_null .)
    TK_great        reduce using rule 122 (EXP -> RW_null .)
    TK_and          reduce using rule 122 (EXP -> RW_null .)
    TK_or           reduce using rule 122 (EXP -> RW_null .)
    RW_as           reduce using rule 122 (EXP -> RW_null .)
    TK_comma        reduce using rule 122 (EXP -> RW_null .)
    RW_from         reduce using rule 122 (EXP -> RW_null .)
    RW_then         reduce using rule 122 (EXP -> RW_null .)
    RW_begin        reduce using rule 122 (EXP -> RW_null .)
    RW_else         reduce using rule 122 (EXP -> RW_null .)
    RW_when         reduce using rule 122 (EXP -> RW_null .)
    TK_rpar         reduce using rule 122 (EXP -> RW_null .)
    RW_end          reduce using rule 122 (EXP -> RW_null .)
    TK_dot          reduce using rule 122 (EXP -> RW_null .)
    RW_where        reduce using rule 122 (EXP -> RW_null .)


state 82

    (123) EXP -> TK_lpar . EXP TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 138
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 83

    (129) ARITHMETICS -> TK_minus . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 139
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 84

    (139) LOGICS -> TK_not . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 140
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 85

    (140) CAST -> RW_cas . TK_lpar EXP RW_as TYPE TK_rpar

    TK_lpar         shift and go to state 141


state 86

    (141) NATIVEFUNC -> RW_concatenar . TK_lpar EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 142


state 87

    (142) NATIVEFUNC -> RW_substraer . TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 143


state 88

    (143) NATIVEFUNC -> RW_hoy . TK_lpar TK_rpar

    TK_lpar         shift and go to state 144


state 89

    (144) TERNARY -> RW_if . TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_lpar         shift and go to state 145


state 90

    (28) CREATEDB -> RW_create RW_data . RW_base TK_field

    RW_base         shift and go to state 146


state 91

    (45) CREATETABLE -> RW_create RW_table . TK_field TK_lpar ATTRIBUTES TK_rpar

    TK_field        shift and go to state 147


state 92

    (93) FUNCDEC -> RW_create RW_function . TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> RW_create RW_function . TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP

    TK_field        shift and go to state 148


state 93

    (95) FUNCDEC -> RW_create RW_procedure . TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> RW_create RW_procedure . TK_field RW_as ENCAP
    (97) FUNCDEC -> RW_create RW_procedure . TK_field PARAMS ENCAP
    (98) FUNCDEC -> RW_create RW_procedure . TK_field ENCAP

    TK_field        shift and go to state 149


state 94

    (104) CALLFUNC -> TK_field TK_lpar . ARGS TK_rpar
    (105) CALLFUNC -> TK_field TK_lpar . TK_rpar
    (106) ARGS -> . ARGS TK_comma EXP
    (107) ARGS -> . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_rpar         shift and go to state 151
    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    ARGS                           shift and go to state 150
    EXP                            shift and go to state 152
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 95

    (57) ALTERTAB -> RW_alter RW_table . TK_field ACTION

    TK_field        shift and go to state 153


state 96

    (62) DROPTAB -> RW_drop RW_table . TK_field

    TK_field        shift and go to state 154


state 97

    (63) INSERTREG -> RW_insert RW_into . TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    TK_field        shift and go to state 155


state 98

    (68) UPDATETAB -> RW_update TK_field . RW_set VALUESTAB RW_where EXP

    RW_set          shift and go to state 156


state 99

    (34) ASIGNID -> RW_set TK_id . TK_equal EXP

    TK_equal        shift and go to state 157


state 100

    (72) TRUNCATETAB -> RW_truncate RW_table . TK_field

    TK_field        shift and go to state 158


state 101

    (73) DELETETAB -> RW_delete RW_from . TK_field RW_where EXP

    TK_field        shift and go to state 159


state 102

    (35) SELECT -> RW_select FIELDS . RW_from TK_field RW_where EXP
    (36) SELECT -> RW_select FIELDS . RW_from TK_field

    RW_from         shift and go to state 160


state 103

    (42) IDS -> EXP . RW_as TK_nvarchar
    (43) IDS -> EXP . RW_as TK_field
    (44) IDS -> EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    RW_as           shift and go to state 161
    TK_comma        reduce using rule 44 (IDS -> EXP .)
    TK_semicolon    reduce using rule 44 (IDS -> EXP .)
    RW_from         reduce using rule 44 (IDS -> EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 104

    (37) SELECT -> RW_select LIST_IDS .
    (38) FIELDS -> LIST_IDS .
    (40) LIST_IDS -> LIST_IDS . TK_comma IDS

    TK_semicolon    reduce using rule 37 (SELECT -> RW_select LIST_IDS .)
    RW_from         reduce using rule 38 (FIELDS -> LIST_IDS .)
    TK_comma        shift and go to state 162


state 105

    (39) FIELDS -> TK_mult .

    RW_from         reduce using rule 39 (FIELDS -> TK_mult .)


state 106

    (41) LIST_IDS -> IDS .

    TK_comma        reduce using rule 41 (LIST_IDS -> IDS .)
    TK_semicolon    reduce using rule 41 (LIST_IDS -> IDS .)
    RW_from         reduce using rule 41 (LIST_IDS -> IDS .)


state 107

    (29) DECLAREID -> RW_declare DECLIDS .
    (31) DECLIDS -> DECLIDS . TK_comma DECLID

    TK_semicolon    reduce using rule 29 (DECLAREID -> RW_declare DECLIDS .)
    TK_comma        shift and go to state 163


state 108

    (30) DECLAREID -> RW_declare TK_id . TYPE TK_equal EXP
    (33) DECLID -> TK_id . TYPE
    (145) TYPE -> . RW_int
    (146) TYPE -> . RW_bit
    (147) TYPE -> . RW_decimal
    (148) TYPE -> . RW_date
    (149) TYPE -> . RW_datetime
    (150) TYPE -> . RW_nchar
    (151) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 165
    RW_bit          shift and go to state 166
    RW_decimal      shift and go to state 167
    RW_date         shift and go to state 168
    RW_datetime     shift and go to state 169
    RW_nchar        shift and go to state 170
    RW_nvarchar     shift and go to state 171

    TYPE                           shift and go to state 164

state 109

    (32) DECLIDS -> DECLID .

    TK_comma        reduce using rule 32 (DECLIDS -> DECLID .)
    TK_semicolon    reduce using rule 32 (DECLIDS -> DECLID .)


state 110

    (74) IFSTRUCT -> RW_if EXP . RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> RW_if EXP . RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> RW_if EXP . RW_begin INSTRUCTIONS RW_end
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    RW_then         shift and go to state 172
    RW_begin        shift and go to state 173
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 111

    (102) ENCAP -> RW_begin INSTRUCTIONS . RW_end
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    RW_end          shift and go to state 174
    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INSTRUCTION                    shift and go to state 43
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 112

    (103) ENCAP -> RW_begin RW_end .

    TK_semicolon    reduce using rule 103 (ENCAP -> RW_begin RW_end .)
    RW_loop         reduce using rule 103 (ENCAP -> RW_begin RW_end .)


state 113

    (77) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> RW_case EXP . WHENELSE RW_end
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP
    (83) WHENELSE -> . WHENS ELSE
    (84) WHENELSE -> . WHENS
    (85) WHENELSE -> . ELSE
    (86) WHENS -> . WHENS WHEN
    (87) WHENS -> . WHEN
    (89) ELSE -> . RW_else RW_then EXP
    (88) WHEN -> . RW_when EXP RW_then EXP

    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137
    RW_else         shift and go to state 118
    RW_when         shift and go to state 119

    WHENELSE                       shift and go to state 175
    WHENS                          shift and go to state 115
    ELSE                           shift and go to state 116
    WHEN                           shift and go to state 117

state 114

    (80) CASESTRUCT_S -> RW_case WHENELSE . RW_end RW_as TK_field
    (81) CASESTRUCT_S -> RW_case WHENELSE . RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> RW_case WHENELSE . RW_end

    RW_end          shift and go to state 176


state 115

    (83) WHENELSE -> WHENS . ELSE
    (84) WHENELSE -> WHENS .
    (86) WHENS -> WHENS . WHEN
    (89) ELSE -> . RW_else RW_then EXP
    (88) WHEN -> . RW_when EXP RW_then EXP

    RW_end          reduce using rule 84 (WHENELSE -> WHENS .)
    RW_else         shift and go to state 118
    RW_when         shift and go to state 119

    ELSE                           shift and go to state 177
    WHEN                           shift and go to state 178

state 116

    (85) WHENELSE -> ELSE .

    RW_end          reduce using rule 85 (WHENELSE -> ELSE .)


state 117

    (87) WHENS -> WHEN .

    RW_else         reduce using rule 87 (WHENS -> WHEN .)
    RW_when         reduce using rule 87 (WHENS -> WHEN .)
    RW_end          reduce using rule 87 (WHENS -> WHEN .)


state 118

    (89) ELSE -> RW_else . RW_then EXP

    RW_then         shift and go to state 179


state 119

    (88) WHEN -> RW_when . EXP RW_then EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 180
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 120

    (91) WHILESTRUCT -> RW_while EXP . ENCAP
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end

    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137
    RW_begin        shift and go to state 38

    ENCAP                          shift and go to state 181

state 121

    (92) FORSTRUCT -> RW_for TK_id . RW_in EXP TK_dot EXP ENCAP RW_loop

    RW_in           shift and go to state 182


state 122

    (90) PRINT -> RW_print EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 90 (PRINT -> RW_print EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 123

    (26) INSTRUCTION -> RW_return EXP TK_semicolon .

    RW_break        reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_continue     reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_return       reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_create       reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_alter        reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_drop         reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_insert       reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_update       reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_truncate     reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_delete       reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_select       reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_declare      reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_set          reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_if           reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_case         reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_while        reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_for          reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    TK_field        reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_begin        reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_print        reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    $end            reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_end          reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)
    RW_else         reduce using rule 26 (INSTRUCTION -> RW_return EXP TK_semicolon .)


state 124

    (124) ARITHMETICS -> EXP TK_plus . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 183
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 125

    (125) ARITHMETICS -> EXP TK_minus . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 184
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 126

    (126) ARITHMETICS -> EXP TK_mult . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 185
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 127

    (127) ARITHMETICS -> EXP TK_div . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 186
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 128

    (128) ARITHMETICS -> EXP TK_mod . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 187
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 129

    (130) RELATIONALS -> EXP TK_equalequal . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 188
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 130

    (131) RELATIONALS -> EXP TK_equal . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 189
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 131

    (132) RELATIONALS -> EXP TK_notequal . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 190
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 132

    (133) RELATIONALS -> EXP TK_lessequal . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 191
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 133

    (134) RELATIONALS -> EXP TK_greatequal . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 192
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 134

    (135) RELATIONALS -> EXP TK_less . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 193
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 135

    (136) RELATIONALS -> EXP TK_great . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 194
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 136

    (137) LOGICS -> EXP TK_and . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 195
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 137

    (138) LOGICS -> EXP TK_or . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 196
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 138

    (123) EXP -> TK_lpar EXP . TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 197
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 139

    (129) ARITHMETICS -> TK_minus EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_plus         reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_minus        reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_mult         reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_div          reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_mod          reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_equalequal   reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_equal        reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_notequal     reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_lessequal    reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_greatequal   reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_less         reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_great        reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_and          reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_or           reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    RW_as           reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_comma        reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    RW_from         reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    RW_then         reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    RW_begin        reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    RW_else         reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    RW_when         reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_rpar         reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    RW_end          reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    TK_dot          reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)
    RW_where        reduce using rule 129 (ARITHMETICS -> TK_minus EXP .)

  ! TK_plus         [ shift and go to state 124 ]
  ! TK_minus        [ shift and go to state 125 ]
  ! TK_mult         [ shift and go to state 126 ]
  ! TK_div          [ shift and go to state 127 ]
  ! TK_mod          [ shift and go to state 128 ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 140

    (139) LOGICS -> TK_not EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 139 (LOGICS -> TK_not EXP .)
    TK_equal        reduce using rule 139 (LOGICS -> TK_not EXP .)
    TK_and          reduce using rule 139 (LOGICS -> TK_not EXP .)
    TK_or           reduce using rule 139 (LOGICS -> TK_not EXP .)
    RW_as           reduce using rule 139 (LOGICS -> TK_not EXP .)
    TK_comma        reduce using rule 139 (LOGICS -> TK_not EXP .)
    RW_from         reduce using rule 139 (LOGICS -> TK_not EXP .)
    RW_then         reduce using rule 139 (LOGICS -> TK_not EXP .)
    RW_begin        reduce using rule 139 (LOGICS -> TK_not EXP .)
    RW_else         reduce using rule 139 (LOGICS -> TK_not EXP .)
    RW_when         reduce using rule 139 (LOGICS -> TK_not EXP .)
    TK_rpar         reduce using rule 139 (LOGICS -> TK_not EXP .)
    RW_end          reduce using rule 139 (LOGICS -> TK_not EXP .)
    TK_dot          reduce using rule 139 (LOGICS -> TK_not EXP .)
    RW_where        reduce using rule 139 (LOGICS -> TK_not EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135

  ! TK_plus         [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_minus        [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_mult         [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_div          [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_mod          [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_equalequal   [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_notequal     [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_lessequal    [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_greatequal   [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_less         [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_great        [ reduce using rule 139 (LOGICS -> TK_not EXP .) ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 141

    (140) CAST -> RW_cas TK_lpar . EXP RW_as TYPE TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 198
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 142

    (141) NATIVEFUNC -> RW_concatenar TK_lpar . EXP TK_comma EXP TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 199
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 143

    (142) NATIVEFUNC -> RW_substraer TK_lpar . EXP TK_comma EXP TK_comma EXP TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 200
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 144

    (143) NATIVEFUNC -> RW_hoy TK_lpar . TK_rpar

    TK_rpar         shift and go to state 201


state 145

    (144) TERNARY -> RW_if TK_lpar . EXP TK_comma EXP TK_comma EXP TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 202
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 146

    (28) CREATEDB -> RW_create RW_data RW_base . TK_field

    TK_field        shift and go to state 203


state 147

    (45) CREATETABLE -> RW_create RW_table TK_field . TK_lpar ATTRIBUTES TK_rpar

    TK_lpar         shift and go to state 204


state 148

    (93) FUNCDEC -> RW_create RW_function TK_field . TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> RW_create RW_function TK_field . TK_lpar TK_rpar RW_returns TYPE ENCAP

    TK_lpar         shift and go to state 205


state 149

    (95) FUNCDEC -> RW_create RW_procedure TK_field . PARAMS RW_as ENCAP
    (96) FUNCDEC -> RW_create RW_procedure TK_field . RW_as ENCAP
    (97) FUNCDEC -> RW_create RW_procedure TK_field . PARAMS ENCAP
    (98) FUNCDEC -> RW_create RW_procedure TK_field . ENCAP
    (99) PARAMS -> . PARAMS TK_comma PARAM
    (100) PARAMS -> . PARAM
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (101) PARAM -> . TK_id RW_as TYPE

    RW_as           shift and go to state 207
    RW_begin        shift and go to state 38
    TK_id           shift and go to state 210

    PARAMS                         shift and go to state 206
    ENCAP                          shift and go to state 208
    PARAM                          shift and go to state 209

state 150

    (104) CALLFUNC -> TK_field TK_lpar ARGS . TK_rpar
    (106) ARGS -> ARGS . TK_comma EXP

    TK_rpar         shift and go to state 211
    TK_comma        shift and go to state 212


state 151

    (105) CALLFUNC -> TK_field TK_lpar TK_rpar .

    TK_semicolon    reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_plus         reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_minus        reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_mult         reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_div          reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_mod          reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_equalequal   reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_equal        reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_notequal     reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_lessequal    reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_greatequal   reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_less         reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_great        reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_and          reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_or           reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_as           reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_comma        reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_from         reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_then         reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_begin        reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_else         reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_when         reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_rpar         reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_end          reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    TK_dot          reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)
    RW_where        reduce using rule 105 (CALLFUNC -> TK_field TK_lpar TK_rpar .)


state 152

    (107) ARGS -> EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 107 (ARGS -> EXP .)
    TK_comma        reduce using rule 107 (ARGS -> EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 153

    (57) ALTERTAB -> RW_alter RW_table TK_field . ACTION
    (58) ACTION -> . RW_add TK_field TYPE
    (59) ACTION -> . RW_drop TK_field
    (60) ACTION -> . RW_rename RW_to TK_field
    (61) ACTION -> . RW_rename RW_column TK_field RW_to TK_field

    RW_add          shift and go to state 214
    RW_drop         shift and go to state 215
    RW_rename       shift and go to state 216

    ACTION                         shift and go to state 213

state 154

    (62) DROPTAB -> RW_drop RW_table TK_field .

    TK_semicolon    reduce using rule 62 (DROPTAB -> RW_drop RW_table TK_field .)


state 155

    (63) INSERTREG -> RW_insert RW_into TK_field . TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar

    TK_lpar         shift and go to state 217


state 156

    (68) UPDATETAB -> RW_update TK_field RW_set . VALUESTAB RW_where EXP
    (69) VALUESTAB -> . VALUESTAB TK_comma VALUETAB
    (70) VALUESTAB -> . VALUETAB
    (71) VALUETAB -> . TK_field TK_equal EXP

    TK_field        shift and go to state 218

    VALUESTAB                      shift and go to state 219
    VALUETAB                       shift and go to state 220

state 157

    (34) ASIGNID -> RW_set TK_id TK_equal . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 221
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 158

    (72) TRUNCATETAB -> RW_truncate RW_table TK_field .

    TK_semicolon    reduce using rule 72 (TRUNCATETAB -> RW_truncate RW_table TK_field .)


state 159

    (73) DELETETAB -> RW_delete RW_from TK_field . RW_where EXP

    RW_where        shift and go to state 222


state 160

    (35) SELECT -> RW_select FIELDS RW_from . TK_field RW_where EXP
    (36) SELECT -> RW_select FIELDS RW_from . TK_field

    TK_field        shift and go to state 223


state 161

    (42) IDS -> EXP RW_as . TK_nvarchar
    (43) IDS -> EXP RW_as . TK_field

    TK_nvarchar     shift and go to state 224
    TK_field        shift and go to state 225


state 162

    (40) LIST_IDS -> LIST_IDS TK_comma . IDS
    (42) IDS -> . EXP RW_as TK_nvarchar
    (43) IDS -> . EXP RW_as TK_field
    (44) IDS -> . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    IDS                            shift and go to state 226
    EXP                            shift and go to state 103
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 163

    (31) DECLIDS -> DECLIDS TK_comma . DECLID
    (33) DECLID -> . TK_id TYPE

    TK_id           shift and go to state 228

    DECLID                         shift and go to state 227

state 164

    (30) DECLAREID -> RW_declare TK_id TYPE . TK_equal EXP
    (33) DECLID -> TK_id TYPE .

    TK_equal        shift and go to state 229
    TK_comma        reduce using rule 33 (DECLID -> TK_id TYPE .)
    TK_semicolon    reduce using rule 33 (DECLID -> TK_id TYPE .)


state 165

    (145) TYPE -> RW_int .

    TK_equal        reduce using rule 145 (TYPE -> RW_int .)
    TK_comma        reduce using rule 145 (TYPE -> RW_int .)
    TK_semicolon    reduce using rule 145 (TYPE -> RW_int .)
    TK_rpar         reduce using rule 145 (TYPE -> RW_int .)
    TK_lpar         reduce using rule 145 (TYPE -> RW_int .)
    RW_not          reduce using rule 145 (TYPE -> RW_int .)
    RW_primary      reduce using rule 145 (TYPE -> RW_int .)
    RW_as           reduce using rule 145 (TYPE -> RW_int .)
    RW_begin        reduce using rule 145 (TYPE -> RW_int .)


state 166

    (146) TYPE -> RW_bit .

    TK_equal        reduce using rule 146 (TYPE -> RW_bit .)
    TK_comma        reduce using rule 146 (TYPE -> RW_bit .)
    TK_semicolon    reduce using rule 146 (TYPE -> RW_bit .)
    TK_rpar         reduce using rule 146 (TYPE -> RW_bit .)
    TK_lpar         reduce using rule 146 (TYPE -> RW_bit .)
    RW_not          reduce using rule 146 (TYPE -> RW_bit .)
    RW_primary      reduce using rule 146 (TYPE -> RW_bit .)
    RW_as           reduce using rule 146 (TYPE -> RW_bit .)
    RW_begin        reduce using rule 146 (TYPE -> RW_bit .)


state 167

    (147) TYPE -> RW_decimal .

    TK_equal        reduce using rule 147 (TYPE -> RW_decimal .)
    TK_comma        reduce using rule 147 (TYPE -> RW_decimal .)
    TK_semicolon    reduce using rule 147 (TYPE -> RW_decimal .)
    TK_rpar         reduce using rule 147 (TYPE -> RW_decimal .)
    TK_lpar         reduce using rule 147 (TYPE -> RW_decimal .)
    RW_not          reduce using rule 147 (TYPE -> RW_decimal .)
    RW_primary      reduce using rule 147 (TYPE -> RW_decimal .)
    RW_as           reduce using rule 147 (TYPE -> RW_decimal .)
    RW_begin        reduce using rule 147 (TYPE -> RW_decimal .)


state 168

    (148) TYPE -> RW_date .

    TK_equal        reduce using rule 148 (TYPE -> RW_date .)
    TK_comma        reduce using rule 148 (TYPE -> RW_date .)
    TK_semicolon    reduce using rule 148 (TYPE -> RW_date .)
    TK_rpar         reduce using rule 148 (TYPE -> RW_date .)
    TK_lpar         reduce using rule 148 (TYPE -> RW_date .)
    RW_not          reduce using rule 148 (TYPE -> RW_date .)
    RW_primary      reduce using rule 148 (TYPE -> RW_date .)
    RW_as           reduce using rule 148 (TYPE -> RW_date .)
    RW_begin        reduce using rule 148 (TYPE -> RW_date .)


state 169

    (149) TYPE -> RW_datetime .

    TK_equal        reduce using rule 149 (TYPE -> RW_datetime .)
    TK_comma        reduce using rule 149 (TYPE -> RW_datetime .)
    TK_semicolon    reduce using rule 149 (TYPE -> RW_datetime .)
    TK_rpar         reduce using rule 149 (TYPE -> RW_datetime .)
    TK_lpar         reduce using rule 149 (TYPE -> RW_datetime .)
    RW_not          reduce using rule 149 (TYPE -> RW_datetime .)
    RW_primary      reduce using rule 149 (TYPE -> RW_datetime .)
    RW_as           reduce using rule 149 (TYPE -> RW_datetime .)
    RW_begin        reduce using rule 149 (TYPE -> RW_datetime .)


state 170

    (150) TYPE -> RW_nchar .

    TK_equal        reduce using rule 150 (TYPE -> RW_nchar .)
    TK_comma        reduce using rule 150 (TYPE -> RW_nchar .)
    TK_semicolon    reduce using rule 150 (TYPE -> RW_nchar .)
    TK_rpar         reduce using rule 150 (TYPE -> RW_nchar .)
    TK_lpar         reduce using rule 150 (TYPE -> RW_nchar .)
    RW_not          reduce using rule 150 (TYPE -> RW_nchar .)
    RW_primary      reduce using rule 150 (TYPE -> RW_nchar .)
    RW_as           reduce using rule 150 (TYPE -> RW_nchar .)
    RW_begin        reduce using rule 150 (TYPE -> RW_nchar .)


state 171

    (151) TYPE -> RW_nvarchar .

    TK_equal        reduce using rule 151 (TYPE -> RW_nvarchar .)
    TK_comma        reduce using rule 151 (TYPE -> RW_nvarchar .)
    TK_semicolon    reduce using rule 151 (TYPE -> RW_nvarchar .)
    TK_rpar         reduce using rule 151 (TYPE -> RW_nvarchar .)
    TK_lpar         reduce using rule 151 (TYPE -> RW_nvarchar .)
    RW_not          reduce using rule 151 (TYPE -> RW_nvarchar .)
    RW_primary      reduce using rule 151 (TYPE -> RW_nvarchar .)
    RW_as           reduce using rule 151 (TYPE -> RW_nvarchar .)
    RW_begin        reduce using rule 151 (TYPE -> RW_nvarchar .)


state 172

    (74) IFSTRUCT -> RW_if EXP RW_then . INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> RW_if EXP RW_then . INSTRUCTIONS RW_end RW_if
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INSTRUCTIONS                   shift and go to state 230
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 173

    (76) IFSTRUCT -> RW_if EXP RW_begin . INSTRUCTIONS RW_end
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INSTRUCTIONS                   shift and go to state 231
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 174

    (102) ENCAP -> RW_begin INSTRUCTIONS RW_end .

    TK_semicolon    reduce using rule 102 (ENCAP -> RW_begin INSTRUCTIONS RW_end .)
    RW_loop         reduce using rule 102 (ENCAP -> RW_begin INSTRUCTIONS RW_end .)


state 175

    (77) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end RW_as TK_field
    (78) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> RW_case EXP WHENELSE . RW_end

    RW_end          shift and go to state 232


state 176

    (80) CASESTRUCT_S -> RW_case WHENELSE RW_end . RW_as TK_field
    (81) CASESTRUCT_S -> RW_case WHENELSE RW_end . RW_as TK_nvarchar
    (82) CASESTRUCT_S -> RW_case WHENELSE RW_end .

    RW_as           shift and go to state 233
    TK_semicolon    reduce using rule 82 (CASESTRUCT_S -> RW_case WHENELSE RW_end .)


state 177

    (83) WHENELSE -> WHENS ELSE .

    RW_end          reduce using rule 83 (WHENELSE -> WHENS ELSE .)


state 178

    (86) WHENS -> WHENS WHEN .

    RW_else         reduce using rule 86 (WHENS -> WHENS WHEN .)
    RW_when         reduce using rule 86 (WHENS -> WHENS WHEN .)
    RW_end          reduce using rule 86 (WHENS -> WHENS WHEN .)


state 179

    (89) ELSE -> RW_else RW_then . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 234
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 180

    (88) WHEN -> RW_when EXP . RW_then EXP
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    RW_then         shift and go to state 235
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 181

    (91) WHILESTRUCT -> RW_while EXP ENCAP .

    TK_semicolon    reduce using rule 91 (WHILESTRUCT -> RW_while EXP ENCAP .)


state 182

    (92) FORSTRUCT -> RW_for TK_id RW_in . EXP TK_dot EXP ENCAP RW_loop
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 236
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 183

    (124) ARITHMETICS -> EXP TK_plus EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_plus         reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_minus        reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_equalequal   reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_equal        reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_notequal     reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_lessequal    reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_greatequal   reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_less         reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_great        reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_and          reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_or           reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_as           reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_comma        reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_from         reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_then         reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_begin        reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_else         reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_when         reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_rpar         reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_end          reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_dot          reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    RW_where        reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .)
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128

  ! TK_mult         [ reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_div          [ reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_mod          [ reduce using rule 124 (ARITHMETICS -> EXP TK_plus EXP .) ]
  ! TK_plus         [ shift and go to state 124 ]
  ! TK_minus        [ shift and go to state 125 ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 184

    (125) ARITHMETICS -> EXP TK_minus EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_plus         reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_minus        reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_equalequal   reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_equal        reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_notequal     reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_lessequal    reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_greatequal   reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_less         reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_great        reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_and          reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_or           reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_as           reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_comma        reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_from         reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_then         reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_begin        reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_else         reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_when         reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_rpar         reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_end          reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_dot          reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    RW_where        reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .)
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128

  ! TK_mult         [ reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_div          [ reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_mod          [ reduce using rule 125 (ARITHMETICS -> EXP TK_minus EXP .) ]
  ! TK_plus         [ shift and go to state 124 ]
  ! TK_minus        [ shift and go to state 125 ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 185

    (126) ARITHMETICS -> EXP TK_mult EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_plus         reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_minus        reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_mult         reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_div          reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_mod          reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_equalequal   reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_equal        reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_notequal     reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_lessequal    reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_greatequal   reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_less         reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_great        reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_and          reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_or           reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_as           reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_comma        reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_from         reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_then         reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_begin        reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_else         reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_when         reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_rpar         reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_end          reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    TK_dot          reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)
    RW_where        reduce using rule 126 (ARITHMETICS -> EXP TK_mult EXP .)

  ! TK_plus         [ shift and go to state 124 ]
  ! TK_minus        [ shift and go to state 125 ]
  ! TK_mult         [ shift and go to state 126 ]
  ! TK_div          [ shift and go to state 127 ]
  ! TK_mod          [ shift and go to state 128 ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 186

    (127) ARITHMETICS -> EXP TK_div EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_plus         reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_minus        reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_mult         reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_div          reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_mod          reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_equalequal   reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_equal        reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_notequal     reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_lessequal    reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_greatequal   reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_less         reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_great        reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_and          reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_or           reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    RW_as           reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_comma        reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    RW_from         reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    RW_then         reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    RW_begin        reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    RW_else         reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    RW_when         reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_rpar         reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    RW_end          reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    TK_dot          reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)
    RW_where        reduce using rule 127 (ARITHMETICS -> EXP TK_div EXP .)

  ! TK_plus         [ shift and go to state 124 ]
  ! TK_minus        [ shift and go to state 125 ]
  ! TK_mult         [ shift and go to state 126 ]
  ! TK_div          [ shift and go to state 127 ]
  ! TK_mod          [ shift and go to state 128 ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 187

    (128) ARITHMETICS -> EXP TK_mod EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_plus         reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_minus        reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_mult         reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_div          reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_mod          reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_equalequal   reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_equal        reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_notequal     reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_lessequal    reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_greatequal   reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_less         reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_great        reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_and          reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_or           reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_as           reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_comma        reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_from         reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_then         reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_begin        reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_else         reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_when         reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_rpar         reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_end          reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    TK_dot          reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)
    RW_where        reduce using rule 128 (ARITHMETICS -> EXP TK_mod EXP .)

  ! TK_plus         [ shift and go to state 124 ]
  ! TK_minus        [ shift and go to state 125 ]
  ! TK_mult         [ shift and go to state 126 ]
  ! TK_div          [ shift and go to state 127 ]
  ! TK_mod          [ shift and go to state 128 ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 188

    (130) RELATIONALS -> EXP TK_equalequal EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_equalequal   reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_equal        reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_notequal     reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_and          reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_or           reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_as           reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_comma        reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_from         reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_then         reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_begin        reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_else         reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_when         reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_rpar         reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_end          reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_dot          reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    RW_where        reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135

  ! TK_plus         [ reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_minus        [ reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_mult         [ reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_div          [ reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_mod          [ reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_lessequal    [ reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_greatequal   [ reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_less         [ reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_great        [ reduce using rule 130 (RELATIONALS -> EXP TK_equalequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 189

    (131) RELATIONALS -> EXP TK_equal EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

  ! shift/reduce conflict for TK_plus resolved as shift
  ! shift/reduce conflict for TK_minus resolved as shift
  ! shift/reduce conflict for TK_mult resolved as shift
  ! shift/reduce conflict for TK_div resolved as shift
  ! shift/reduce conflict for TK_mod resolved as shift
  ! shift/reduce conflict for TK_equalequal resolved as shift
  ! shift/reduce conflict for TK_equal resolved as shift
  ! shift/reduce conflict for TK_notequal resolved as shift
  ! shift/reduce conflict for TK_lessequal resolved as shift
  ! shift/reduce conflict for TK_greatequal resolved as shift
  ! shift/reduce conflict for TK_less resolved as shift
  ! shift/reduce conflict for TK_great resolved as shift
  ! shift/reduce conflict for TK_and resolved as shift
  ! shift/reduce conflict for TK_or resolved as shift
    TK_semicolon    reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    RW_as           reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    TK_comma        reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    RW_from         reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    RW_then         reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    RW_begin        reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    RW_else         reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    RW_when         reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    TK_rpar         reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    RW_end          reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    TK_dot          reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    RW_where        reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137

  ! TK_plus         [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_minus        [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_mult         [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_div          [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_mod          [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_equalequal   [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_equal        [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_notequal     [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_lessequal    [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_greatequal   [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_less         [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_great        [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_and          [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]
  ! TK_or           [ reduce using rule 131 (RELATIONALS -> EXP TK_equal EXP .) ]


state 190

    (132) RELATIONALS -> EXP TK_notequal EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_equalequal   reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_equal        reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_notequal     reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_and          reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_or           reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_as           reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_comma        reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_from         reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_then         reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_begin        reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_else         reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_when         reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_rpar         reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_end          reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_dot          reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    RW_where        reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135

  ! TK_plus         [ reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_minus        [ reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_mult         [ reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_div          [ reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_mod          [ reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_lessequal    [ reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_greatequal   [ reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_less         [ reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_great        [ reduce using rule 132 (RELATIONALS -> EXP TK_notequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 191

    (133) RELATIONALS -> EXP TK_lessequal EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_equalequal   reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_equal        reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_notequal     reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_lessequal    reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_greatequal   reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_less         reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_great        reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_and          reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_or           reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_as           reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_comma        reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_from         reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_then         reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_begin        reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_else         reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_when         reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_rpar         reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_end          reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_dot          reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    RW_where        reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128

  ! TK_plus         [ reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_minus        [ reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_mult         [ reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_div          [ reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_mod          [ reduce using rule 133 (RELATIONALS -> EXP TK_lessequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 192

    (134) RELATIONALS -> EXP TK_greatequal EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_equalequal   reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_equal        reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_notequal     reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_lessequal    reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_greatequal   reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_less         reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_great        reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_and          reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_or           reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_as           reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_comma        reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_from         reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_then         reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_begin        reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_else         reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_when         reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_rpar         reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_end          reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_dot          reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    RW_where        reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128

  ! TK_plus         [ reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_minus        [ reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_mult         [ reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_div          [ reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_mod          [ reduce using rule 134 (RELATIONALS -> EXP TK_greatequal EXP .) ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 193

    (135) RELATIONALS -> EXP TK_less EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_equalequal   reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_equal        reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_notequal     reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_lessequal    reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_greatequal   reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_less         reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_great        reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_and          reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_or           reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    RW_as           reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_comma        reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    RW_from         reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    RW_then         reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    RW_begin        reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    RW_else         reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    RW_when         reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_rpar         reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    RW_end          reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_dot          reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    RW_where        reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128

  ! TK_plus         [ reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_minus        [ reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_mult         [ reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_div          [ reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_mod          [ reduce using rule 135 (RELATIONALS -> EXP TK_less EXP .) ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 194

    (136) RELATIONALS -> EXP TK_great EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_equalequal   reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_equal        reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_notequal     reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_lessequal    reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_greatequal   reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_less         reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_great        reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_and          reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_or           reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    RW_as           reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_comma        reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    RW_from         reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    RW_then         reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    RW_begin        reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    RW_else         reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    RW_when         reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_rpar         reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    RW_end          reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_dot          reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    RW_where        reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128

  ! TK_plus         [ reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_minus        [ reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_mult         [ reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_div          [ reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_mod          [ reduce using rule 136 (RELATIONALS -> EXP TK_great EXP .) ]
  ! TK_equalequal   [ shift and go to state 129 ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_notequal     [ shift and go to state 131 ]
  ! TK_lessequal    [ shift and go to state 132 ]
  ! TK_greatequal   [ shift and go to state 133 ]
  ! TK_less         [ shift and go to state 134 ]
  ! TK_great        [ shift and go to state 135 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 195

    (137) LOGICS -> EXP TK_and EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    TK_equal        reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    TK_and          reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    TK_or           reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    RW_as           reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    TK_comma        reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    RW_from         reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    RW_then         reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    RW_begin        reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    RW_else         reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    RW_when         reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    TK_rpar         reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    RW_end          reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    TK_dot          reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    RW_where        reduce using rule 137 (LOGICS -> EXP TK_and EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135

  ! TK_plus         [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_minus        [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_mult         [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_div          [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_mod          [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_equalequal   [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_notequal     [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_lessequal    [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_greatequal   [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_less         [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_great        [ reduce using rule 137 (LOGICS -> EXP TK_and EXP .) ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_and          [ shift and go to state 136 ]
  ! TK_or           [ shift and go to state 137 ]


state 196

    (138) LOGICS -> EXP TK_or EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    TK_equal        reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    TK_or           reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    RW_as           reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    TK_comma        reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    RW_from         reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    RW_then         reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    RW_begin        reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    RW_else         reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    RW_when         reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    TK_rpar         reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    RW_end          reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    TK_dot          reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    RW_where        reduce using rule 138 (LOGICS -> EXP TK_or EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136

  ! TK_plus         [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_minus        [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_mult         [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_div          [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_mod          [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_equalequal   [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_notequal     [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_lessequal    [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_greatequal   [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_less         [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_great        [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_and          [ reduce using rule 138 (LOGICS -> EXP TK_or EXP .) ]
  ! TK_equal        [ shift and go to state 130 ]
  ! TK_or           [ shift and go to state 137 ]


state 197

    (123) EXP -> TK_lpar EXP TK_rpar .

    TK_semicolon    reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_plus         reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_minus        reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_mult         reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_div          reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_mod          reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_equalequal   reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_equal        reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_notequal     reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_lessequal    reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_greatequal   reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_less         reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_great        reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_and          reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_or           reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    RW_as           reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_comma        reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    RW_from         reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    RW_then         reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    RW_begin        reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    RW_else         reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    RW_when         reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_rpar         reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    RW_end          reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    TK_dot          reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)
    RW_where        reduce using rule 123 (EXP -> TK_lpar EXP TK_rpar .)


state 198

    (140) CAST -> RW_cas TK_lpar EXP . RW_as TYPE TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    RW_as           shift and go to state 237
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 199

    (141) NATIVEFUNC -> RW_concatenar TK_lpar EXP . TK_comma EXP TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 238
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 200

    (142) NATIVEFUNC -> RW_substraer TK_lpar EXP . TK_comma EXP TK_comma EXP TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 239
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 201

    (143) NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .

    TK_semicolon    reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_plus         reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_minus        reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_mult         reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_div          reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_mod          reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_equalequal   reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_equal        reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_notequal     reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_lessequal    reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_greatequal   reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_less         reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_great        reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_and          reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_or           reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_as           reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_comma        reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_from         reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_then         reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_begin        reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_else         reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_when         reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_rpar         reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_end          reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    TK_dot          reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)
    RW_where        reduce using rule 143 (NATIVEFUNC -> RW_hoy TK_lpar TK_rpar .)


state 202

    (144) TERNARY -> RW_if TK_lpar EXP . TK_comma EXP TK_comma EXP TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 240
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 203

    (28) CREATEDB -> RW_create RW_data RW_base TK_field .

    TK_semicolon    reduce using rule 28 (CREATEDB -> RW_create RW_data RW_base TK_field .)


state 204

    (45) CREATETABLE -> RW_create RW_table TK_field TK_lpar . ATTRIBUTES TK_rpar
    (46) ATTRIBUTES -> . ATTRIBUTES TK_comma ATTRIBUTE
    (47) ATTRIBUTES -> . ATTRIBUTE
    (48) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar PROPS
    (49) ATTRIBUTE -> . TK_field TYPE PROPS
    (50) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar
    (51) ATTRIBUTE -> . TK_field TYPE
    (52) ATTRIBUTE -> . RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 241
    RW_foreing      shift and go to state 244

    ATTRIBUTES                     shift and go to state 242
    ATTRIBUTE                      shift and go to state 243

state 205

    (93) FUNCDEC -> RW_create RW_function TK_field TK_lpar . PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> RW_create RW_function TK_field TK_lpar . TK_rpar RW_returns TYPE ENCAP
    (99) PARAMS -> . PARAMS TK_comma PARAM
    (100) PARAMS -> . PARAM
    (101) PARAM -> . TK_id RW_as TYPE

    TK_rpar         shift and go to state 246
    TK_id           shift and go to state 210

    PARAMS                         shift and go to state 245
    PARAM                          shift and go to state 209

state 206

    (95) FUNCDEC -> RW_create RW_procedure TK_field PARAMS . RW_as ENCAP
    (97) FUNCDEC -> RW_create RW_procedure TK_field PARAMS . ENCAP
    (99) PARAMS -> PARAMS . TK_comma PARAM
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end

    RW_as           shift and go to state 247
    TK_comma        shift and go to state 249
    RW_begin        shift and go to state 38

    ENCAP                          shift and go to state 248

state 207

    (96) FUNCDEC -> RW_create RW_procedure TK_field RW_as . ENCAP
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 38

    ENCAP                          shift and go to state 250

state 208

    (98) FUNCDEC -> RW_create RW_procedure TK_field ENCAP .

    TK_semicolon    reduce using rule 98 (FUNCDEC -> RW_create RW_procedure TK_field ENCAP .)


state 209

    (100) PARAMS -> PARAM .

    RW_as           reduce using rule 100 (PARAMS -> PARAM .)
    TK_comma        reduce using rule 100 (PARAMS -> PARAM .)
    RW_begin        reduce using rule 100 (PARAMS -> PARAM .)
    TK_rpar         reduce using rule 100 (PARAMS -> PARAM .)


state 210

    (101) PARAM -> TK_id . RW_as TYPE

    RW_as           shift and go to state 251


state 211

    (104) CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .

    TK_semicolon    reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_plus         reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_minus        reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_mult         reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_div          reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_mod          reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_equalequal   reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_equal        reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_notequal     reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_lessequal    reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_greatequal   reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_less         reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_great        reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_and          reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_or           reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_as           reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_comma        reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_from         reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_then         reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_begin        reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_else         reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_when         reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_rpar         reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_end          reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    TK_dot          reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)
    RW_where        reduce using rule 104 (CALLFUNC -> TK_field TK_lpar ARGS TK_rpar .)


state 212

    (106) ARGS -> ARGS TK_comma . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 252
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 213

    (57) ALTERTAB -> RW_alter RW_table TK_field ACTION .

    TK_semicolon    reduce using rule 57 (ALTERTAB -> RW_alter RW_table TK_field ACTION .)


state 214

    (58) ACTION -> RW_add . TK_field TYPE

    TK_field        shift and go to state 253


state 215

    (59) ACTION -> RW_drop . TK_field

    TK_field        shift and go to state 254


state 216

    (60) ACTION -> RW_rename . RW_to TK_field
    (61) ACTION -> RW_rename . RW_column TK_field RW_to TK_field

    RW_to           shift and go to state 255
    RW_column       shift and go to state 256


state 217

    (63) INSERTREG -> RW_insert RW_into TK_field TK_lpar . LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (64) LIST_ATTRIBS -> . LIST_ATTRIBS TK_comma TK_field
    (65) LIST_ATTRIBS -> . TK_field

    TK_field        shift and go to state 257

    LIST_ATTRIBS                   shift and go to state 258

state 218

    (71) VALUETAB -> TK_field . TK_equal EXP

    TK_equal        shift and go to state 259


state 219

    (68) UPDATETAB -> RW_update TK_field RW_set VALUESTAB . RW_where EXP
    (69) VALUESTAB -> VALUESTAB . TK_comma VALUETAB

    RW_where        shift and go to state 260
    TK_comma        shift and go to state 261


state 220

    (70) VALUESTAB -> VALUETAB .

    RW_where        reduce using rule 70 (VALUESTAB -> VALUETAB .)
    TK_comma        reduce using rule 70 (VALUESTAB -> VALUETAB .)


state 221

    (34) ASIGNID -> RW_set TK_id TK_equal EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 34 (ASIGNID -> RW_set TK_id TK_equal EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 222

    (73) DELETETAB -> RW_delete RW_from TK_field RW_where . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 262
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 223

    (35) SELECT -> RW_select FIELDS RW_from TK_field . RW_where EXP
    (36) SELECT -> RW_select FIELDS RW_from TK_field .

    RW_where        shift and go to state 263
    TK_semicolon    reduce using rule 36 (SELECT -> RW_select FIELDS RW_from TK_field .)


state 224

    (42) IDS -> EXP RW_as TK_nvarchar .

    TK_comma        reduce using rule 42 (IDS -> EXP RW_as TK_nvarchar .)
    TK_semicolon    reduce using rule 42 (IDS -> EXP RW_as TK_nvarchar .)
    RW_from         reduce using rule 42 (IDS -> EXP RW_as TK_nvarchar .)


state 225

    (43) IDS -> EXP RW_as TK_field .

    TK_comma        reduce using rule 43 (IDS -> EXP RW_as TK_field .)
    TK_semicolon    reduce using rule 43 (IDS -> EXP RW_as TK_field .)
    RW_from         reduce using rule 43 (IDS -> EXP RW_as TK_field .)


state 226

    (40) LIST_IDS -> LIST_IDS TK_comma IDS .

    TK_comma        reduce using rule 40 (LIST_IDS -> LIST_IDS TK_comma IDS .)
    TK_semicolon    reduce using rule 40 (LIST_IDS -> LIST_IDS TK_comma IDS .)
    RW_from         reduce using rule 40 (LIST_IDS -> LIST_IDS TK_comma IDS .)


state 227

    (31) DECLIDS -> DECLIDS TK_comma DECLID .

    TK_comma        reduce using rule 31 (DECLIDS -> DECLIDS TK_comma DECLID .)
    TK_semicolon    reduce using rule 31 (DECLIDS -> DECLIDS TK_comma DECLID .)


state 228

    (33) DECLID -> TK_id . TYPE
    (145) TYPE -> . RW_int
    (146) TYPE -> . RW_bit
    (147) TYPE -> . RW_decimal
    (148) TYPE -> . RW_date
    (149) TYPE -> . RW_datetime
    (150) TYPE -> . RW_nchar
    (151) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 165
    RW_bit          shift and go to state 166
    RW_decimal      shift and go to state 167
    RW_date         shift and go to state 168
    RW_datetime     shift and go to state 169
    RW_nchar        shift and go to state 170
    RW_nvarchar     shift and go to state 171

    TYPE                           shift and go to state 264

state 229

    (30) DECLAREID -> RW_declare TK_id TYPE TK_equal . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 265
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 230

    (74) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS . RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS . RW_end RW_if
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    RW_else         shift and go to state 266
    RW_end          shift and go to state 267
    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INSTRUCTION                    shift and go to state 43
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 231

    (76) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS . RW_end
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    RW_end          shift and go to state 268
    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INSTRUCTION                    shift and go to state 43
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 232

    (77) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end . RW_as TK_field
    (78) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end . RW_as TK_nvarchar
    (79) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end .

    RW_as           shift and go to state 269
    TK_semicolon    reduce using rule 79 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end .)


state 233

    (80) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as . TK_field
    (81) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as . TK_nvarchar

    TK_field        shift and go to state 270
    TK_nvarchar     shift and go to state 271


state 234

    (89) ELSE -> RW_else RW_then EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    RW_end          reduce using rule 89 (ELSE -> RW_else RW_then EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 235

    (88) WHEN -> RW_when EXP RW_then . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 272
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 236

    (92) FORSTRUCT -> RW_for TK_id RW_in EXP . TK_dot EXP ENCAP RW_loop
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_dot          shift and go to state 273
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 237

    (140) CAST -> RW_cas TK_lpar EXP RW_as . TYPE TK_rpar
    (145) TYPE -> . RW_int
    (146) TYPE -> . RW_bit
    (147) TYPE -> . RW_decimal
    (148) TYPE -> . RW_date
    (149) TYPE -> . RW_datetime
    (150) TYPE -> . RW_nchar
    (151) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 165
    RW_bit          shift and go to state 166
    RW_decimal      shift and go to state 167
    RW_date         shift and go to state 168
    RW_datetime     shift and go to state 169
    RW_nchar        shift and go to state 170
    RW_nvarchar     shift and go to state 171

    TYPE                           shift and go to state 274

state 238

    (141) NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma . EXP TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 275
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 239

    (142) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma . EXP TK_comma EXP TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 276
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 240

    (144) TERNARY -> RW_if TK_lpar EXP TK_comma . EXP TK_comma EXP TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 277
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 241

    (48) ATTRIBUTE -> TK_field . TYPE TK_lpar TK_int TK_rpar PROPS
    (49) ATTRIBUTE -> TK_field . TYPE PROPS
    (50) ATTRIBUTE -> TK_field . TYPE TK_lpar TK_int TK_rpar
    (51) ATTRIBUTE -> TK_field . TYPE
    (145) TYPE -> . RW_int
    (146) TYPE -> . RW_bit
    (147) TYPE -> . RW_decimal
    (148) TYPE -> . RW_date
    (149) TYPE -> . RW_datetime
    (150) TYPE -> . RW_nchar
    (151) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 165
    RW_bit          shift and go to state 166
    RW_decimal      shift and go to state 167
    RW_date         shift and go to state 168
    RW_datetime     shift and go to state 169
    RW_nchar        shift and go to state 170
    RW_nvarchar     shift and go to state 171

    TYPE                           shift and go to state 278

state 242

    (45) CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES . TK_rpar
    (46) ATTRIBUTES -> ATTRIBUTES . TK_comma ATTRIBUTE

    TK_rpar         shift and go to state 279
    TK_comma        shift and go to state 280


state 243

    (47) ATTRIBUTES -> ATTRIBUTE .

    TK_rpar         reduce using rule 47 (ATTRIBUTES -> ATTRIBUTE .)
    TK_comma        reduce using rule 47 (ATTRIBUTES -> ATTRIBUTE .)


state 244

    (52) ATTRIBUTE -> RW_foreing . RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    RW_key          shift and go to state 281


state 245

    (93) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS . TK_rpar RW_returns TYPE ENCAP
    (99) PARAMS -> PARAMS . TK_comma PARAM

    TK_rpar         shift and go to state 282
    TK_comma        shift and go to state 249


state 246

    (94) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar . RW_returns TYPE ENCAP

    RW_returns      shift and go to state 283


state 247

    (95) FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as . ENCAP
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 38

    ENCAP                          shift and go to state 284

state 248

    (97) FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP .

    TK_semicolon    reduce using rule 97 (FUNCDEC -> RW_create RW_procedure TK_field PARAMS ENCAP .)


state 249

    (99) PARAMS -> PARAMS TK_comma . PARAM
    (101) PARAM -> . TK_id RW_as TYPE

    TK_id           shift and go to state 210

    PARAM                          shift and go to state 285

state 250

    (96) FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP .

    TK_semicolon    reduce using rule 96 (FUNCDEC -> RW_create RW_procedure TK_field RW_as ENCAP .)


state 251

    (101) PARAM -> TK_id RW_as . TYPE
    (145) TYPE -> . RW_int
    (146) TYPE -> . RW_bit
    (147) TYPE -> . RW_decimal
    (148) TYPE -> . RW_date
    (149) TYPE -> . RW_datetime
    (150) TYPE -> . RW_nchar
    (151) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 165
    RW_bit          shift and go to state 166
    RW_decimal      shift and go to state 167
    RW_date         shift and go to state 168
    RW_datetime     shift and go to state 169
    RW_nchar        shift and go to state 170
    RW_nvarchar     shift and go to state 171

    TYPE                           shift and go to state 286

state 252

    (106) ARGS -> ARGS TK_comma EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 106 (ARGS -> ARGS TK_comma EXP .)
    TK_comma        reduce using rule 106 (ARGS -> ARGS TK_comma EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 253

    (58) ACTION -> RW_add TK_field . TYPE
    (145) TYPE -> . RW_int
    (146) TYPE -> . RW_bit
    (147) TYPE -> . RW_decimal
    (148) TYPE -> . RW_date
    (149) TYPE -> . RW_datetime
    (150) TYPE -> . RW_nchar
    (151) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 165
    RW_bit          shift and go to state 166
    RW_decimal      shift and go to state 167
    RW_date         shift and go to state 168
    RW_datetime     shift and go to state 169
    RW_nchar        shift and go to state 170
    RW_nvarchar     shift and go to state 171

    TYPE                           shift and go to state 287

state 254

    (59) ACTION -> RW_drop TK_field .

    TK_semicolon    reduce using rule 59 (ACTION -> RW_drop TK_field .)


state 255

    (60) ACTION -> RW_rename RW_to . TK_field

    TK_field        shift and go to state 288


state 256

    (61) ACTION -> RW_rename RW_column . TK_field RW_to TK_field

    TK_field        shift and go to state 289


state 257

    (65) LIST_ATTRIBS -> TK_field .

    TK_rpar         reduce using rule 65 (LIST_ATTRIBS -> TK_field .)
    TK_comma        reduce using rule 65 (LIST_ATTRIBS -> TK_field .)


state 258

    (63) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS . TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (64) LIST_ATTRIBS -> LIST_ATTRIBS . TK_comma TK_field

    TK_rpar         shift and go to state 290
    TK_comma        shift and go to state 291


state 259

    (71) VALUETAB -> TK_field TK_equal . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 292
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 260

    (68) UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 293
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 261

    (69) VALUESTAB -> VALUESTAB TK_comma . VALUETAB
    (71) VALUETAB -> . TK_field TK_equal EXP

    TK_field        shift and go to state 218

    VALUETAB                       shift and go to state 294

state 262

    (73) DELETETAB -> RW_delete RW_from TK_field RW_where EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 73 (DELETETAB -> RW_delete RW_from TK_field RW_where EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 263

    (35) SELECT -> RW_select FIELDS RW_from TK_field RW_where . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 295
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 264

    (33) DECLID -> TK_id TYPE .

    TK_comma        reduce using rule 33 (DECLID -> TK_id TYPE .)
    TK_semicolon    reduce using rule 33 (DECLID -> TK_id TYPE .)


state 265

    (30) DECLAREID -> RW_declare TK_id TYPE TK_equal EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 30 (DECLAREID -> RW_declare TK_id TYPE TK_equal EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 266

    (74) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else . INSTRUCTIONS RW_end RW_if
    (3) INSTRUCTIONS -> . INSTRUCTIONS INSTRUCTION
    (4) INSTRUCTIONS -> . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INSTRUCTIONS                   shift and go to state 296
    INSTRUCTION                    shift and go to state 3
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 267

    (75) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end . RW_if

    RW_if           shift and go to state 297


state 268

    (76) IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end .

    TK_semicolon    reduce using rule 76 (IFSTRUCT -> RW_if EXP RW_begin INSTRUCTIONS RW_end .)


state 269

    (77) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as . TK_field
    (78) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as . TK_nvarchar

    TK_field        shift and go to state 298
    TK_nvarchar     shift and go to state 299


state 270

    (80) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field .

    TK_semicolon    reduce using rule 80 (CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_field .)


state 271

    (81) CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar .

    TK_semicolon    reduce using rule 81 (CASESTRUCT_S -> RW_case WHENELSE RW_end RW_as TK_nvarchar .)


state 272

    (88) WHEN -> RW_when EXP RW_then EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    RW_else         reduce using rule 88 (WHEN -> RW_when EXP RW_then EXP .)
    RW_when         reduce using rule 88 (WHEN -> RW_when EXP RW_then EXP .)
    RW_end          reduce using rule 88 (WHEN -> RW_when EXP RW_then EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 273

    (92) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot . EXP ENCAP RW_loop
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 300
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 274

    (140) CAST -> RW_cas TK_lpar EXP RW_as TYPE . TK_rpar

    TK_rpar         shift and go to state 301


state 275

    (141) NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP . TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 302
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 276

    (142) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP . TK_comma EXP TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 303
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 277

    (144) TERNARY -> RW_if TK_lpar EXP TK_comma EXP . TK_comma EXP TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_comma        shift and go to state 304
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 278

    (48) ATTRIBUTE -> TK_field TYPE . TK_lpar TK_int TK_rpar PROPS
    (49) ATTRIBUTE -> TK_field TYPE . PROPS
    (50) ATTRIBUTE -> TK_field TYPE . TK_lpar TK_int TK_rpar
    (51) ATTRIBUTE -> TK_field TYPE .
    (53) PROPS -> . RW_not RW_null RW_primary RW_key
    (54) PROPS -> . RW_primary RW_key RW_not RW_null
    (55) PROPS -> . RW_not RW_null
    (56) PROPS -> . RW_primary RW_key

    TK_lpar         shift and go to state 305
    TK_rpar         reduce using rule 51 (ATTRIBUTE -> TK_field TYPE .)
    TK_comma        reduce using rule 51 (ATTRIBUTE -> TK_field TYPE .)
    RW_not          shift and go to state 307
    RW_primary      shift and go to state 308

    PROPS                          shift and go to state 306

state 279

    (45) CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar .

    TK_semicolon    reduce using rule 45 (CREATETABLE -> RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar .)


state 280

    (46) ATTRIBUTES -> ATTRIBUTES TK_comma . ATTRIBUTE
    (48) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar PROPS
    (49) ATTRIBUTE -> . TK_field TYPE PROPS
    (50) ATTRIBUTE -> . TK_field TYPE TK_lpar TK_int TK_rpar
    (51) ATTRIBUTE -> . TK_field TYPE
    (52) ATTRIBUTE -> . RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 241
    RW_foreing      shift and go to state 244

    ATTRIBUTE                      shift and go to state 309

state 281

    (52) ATTRIBUTE -> RW_foreing RW_key . TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_lpar         shift and go to state 310


state 282

    (93) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar . RW_returns TYPE ENCAP

    RW_returns      shift and go to state 311


state 283

    (94) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns . TYPE ENCAP
    (145) TYPE -> . RW_int
    (146) TYPE -> . RW_bit
    (147) TYPE -> . RW_decimal
    (148) TYPE -> . RW_date
    (149) TYPE -> . RW_datetime
    (150) TYPE -> . RW_nchar
    (151) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 165
    RW_bit          shift and go to state 166
    RW_decimal      shift and go to state 167
    RW_date         shift and go to state 168
    RW_datetime     shift and go to state 169
    RW_nchar        shift and go to state 170
    RW_nvarchar     shift and go to state 171

    TYPE                           shift and go to state 312

state 284

    (95) FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP .

    TK_semicolon    reduce using rule 95 (FUNCDEC -> RW_create RW_procedure TK_field PARAMS RW_as ENCAP .)


state 285

    (99) PARAMS -> PARAMS TK_comma PARAM .

    RW_as           reduce using rule 99 (PARAMS -> PARAMS TK_comma PARAM .)
    TK_comma        reduce using rule 99 (PARAMS -> PARAMS TK_comma PARAM .)
    RW_begin        reduce using rule 99 (PARAMS -> PARAMS TK_comma PARAM .)
    TK_rpar         reduce using rule 99 (PARAMS -> PARAMS TK_comma PARAM .)


state 286

    (101) PARAM -> TK_id RW_as TYPE .

    RW_as           reduce using rule 101 (PARAM -> TK_id RW_as TYPE .)
    TK_comma        reduce using rule 101 (PARAM -> TK_id RW_as TYPE .)
    RW_begin        reduce using rule 101 (PARAM -> TK_id RW_as TYPE .)
    TK_rpar         reduce using rule 101 (PARAM -> TK_id RW_as TYPE .)


state 287

    (58) ACTION -> RW_add TK_field TYPE .

    TK_semicolon    reduce using rule 58 (ACTION -> RW_add TK_field TYPE .)


state 288

    (60) ACTION -> RW_rename RW_to TK_field .

    TK_semicolon    reduce using rule 60 (ACTION -> RW_rename RW_to TK_field .)


state 289

    (61) ACTION -> RW_rename RW_column TK_field . RW_to TK_field

    RW_to           shift and go to state 313


state 290

    (63) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar . RW_values TK_lpar LIST_EXPS TK_rpar

    RW_values       shift and go to state 314


state 291

    (64) LIST_ATTRIBS -> LIST_ATTRIBS TK_comma . TK_field

    TK_field        shift and go to state 315


state 292

    (71) VALUETAB -> TK_field TK_equal EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    RW_where        reduce using rule 71 (VALUETAB -> TK_field TK_equal EXP .)
    TK_comma        reduce using rule 71 (VALUETAB -> TK_field TK_equal EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 293

    (68) UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 68 (UPDATETAB -> RW_update TK_field RW_set VALUESTAB RW_where EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 294

    (69) VALUESTAB -> VALUESTAB TK_comma VALUETAB .

    RW_where        reduce using rule 69 (VALUESTAB -> VALUESTAB TK_comma VALUETAB .)
    TK_comma        reduce using rule 69 (VALUESTAB -> VALUESTAB TK_comma VALUETAB .)


state 295

    (35) SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_semicolon    reduce using rule 35 (SELECT -> RW_select FIELDS RW_from TK_field RW_where EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 296

    (74) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS . RW_end RW_if
    (3) INSTRUCTIONS -> INSTRUCTIONS . INSTRUCTION
    (5) INSTRUCTION -> . CREATEDB TK_semicolon
    (6) INSTRUCTION -> . CREATETABLE TK_semicolon
    (7) INSTRUCTION -> . ALTERTAB TK_semicolon
    (8) INSTRUCTION -> . DROPTAB TK_semicolon
    (9) INSTRUCTION -> . INSERTREG TK_semicolon
    (10) INSTRUCTION -> . UPDATETAB TK_semicolon
    (11) INSTRUCTION -> . TRUNCATETAB TK_semicolon
    (12) INSTRUCTION -> . DELETETAB TK_semicolon
    (13) INSTRUCTION -> . SELECT TK_semicolon
    (14) INSTRUCTION -> . DECLAREID TK_semicolon
    (15) INSTRUCTION -> . ASIGNID TK_semicolon
    (16) INSTRUCTION -> . IFSTRUCT TK_semicolon
    (17) INSTRUCTION -> . CASESTRUCT_S TK_semicolon
    (18) INSTRUCTION -> . WHILESTRUCT TK_semicolon
    (19) INSTRUCTION -> . FORSTRUCT TK_semicolon
    (20) INSTRUCTION -> . FUNCDEC TK_semicolon
    (21) INSTRUCTION -> . CALLFUNC TK_semicolon
    (22) INSTRUCTION -> . ENCAP TK_semicolon
    (23) INSTRUCTION -> . PRINT TK_semicolon
    (24) INSTRUCTION -> . RW_break TK_semicolon
    (25) INSTRUCTION -> . RW_continue TK_semicolon
    (26) INSTRUCTION -> . RW_return EXP TK_semicolon
    (27) INSTRUCTION -> . RW_return TK_semicolon
    (28) CREATEDB -> . RW_create RW_data RW_base TK_field
    (45) CREATETABLE -> . RW_create RW_table TK_field TK_lpar ATTRIBUTES TK_rpar
    (57) ALTERTAB -> . RW_alter RW_table TK_field ACTION
    (62) DROPTAB -> . RW_drop RW_table TK_field
    (63) INSERTREG -> . RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar
    (68) UPDATETAB -> . RW_update TK_field RW_set VALUESTAB RW_where EXP
    (72) TRUNCATETAB -> . RW_truncate RW_table TK_field
    (73) DELETETAB -> . RW_delete RW_from TK_field RW_where EXP
    (35) SELECT -> . RW_select FIELDS RW_from TK_field RW_where EXP
    (36) SELECT -> . RW_select FIELDS RW_from TK_field
    (37) SELECT -> . RW_select LIST_IDS
    (29) DECLAREID -> . RW_declare DECLIDS
    (30) DECLAREID -> . RW_declare TK_id TYPE TK_equal EXP
    (34) ASIGNID -> . RW_set TK_id TK_equal EXP
    (74) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if
    (75) IFSTRUCT -> . RW_if EXP RW_then INSTRUCTIONS RW_end RW_if
    (76) IFSTRUCT -> . RW_if EXP RW_begin INSTRUCTIONS RW_end
    (77) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_field
    (78) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end RW_as TK_nvarchar
    (79) CASESTRUCT_S -> . RW_case EXP WHENELSE RW_end
    (80) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_field
    (81) CASESTRUCT_S -> . RW_case WHENELSE RW_end RW_as TK_nvarchar
    (82) CASESTRUCT_S -> . RW_case WHENELSE RW_end
    (91) WHILESTRUCT -> . RW_while EXP ENCAP
    (92) FORSTRUCT -> . RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop
    (93) FUNCDEC -> . RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP
    (94) FUNCDEC -> . RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP
    (95) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS RW_as ENCAP
    (96) FUNCDEC -> . RW_create RW_procedure TK_field RW_as ENCAP
    (97) FUNCDEC -> . RW_create RW_procedure TK_field PARAMS ENCAP
    (98) FUNCDEC -> . RW_create RW_procedure TK_field ENCAP
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end
    (90) PRINT -> . RW_print EXP

    RW_end          shift and go to state 316
    RW_break        shift and go to state 23
    RW_continue     shift and go to state 24
    RW_return       shift and go to state 25
    RW_create       shift and go to state 26
    RW_alter        shift and go to state 28
    RW_drop         shift and go to state 29
    RW_insert       shift and go to state 30
    RW_update       shift and go to state 31
    RW_truncate     shift and go to state 33
    RW_delete       shift and go to state 34
    RW_select       shift and go to state 35
    RW_declare      shift and go to state 36
    RW_set          shift and go to state 32
    RW_if           shift and go to state 37
    RW_case         shift and go to state 39
    RW_while        shift and go to state 40
    RW_for          shift and go to state 41
    TK_field        shift and go to state 27
    RW_begin        shift and go to state 38
    RW_print        shift and go to state 42

    INSTRUCTION                    shift and go to state 43
    CREATEDB                       shift and go to state 4
    CREATETABLE                    shift and go to state 5
    ALTERTAB                       shift and go to state 6
    DROPTAB                        shift and go to state 7
    INSERTREG                      shift and go to state 8
    UPDATETAB                      shift and go to state 9
    TRUNCATETAB                    shift and go to state 10
    DELETETAB                      shift and go to state 11
    SELECT                         shift and go to state 12
    DECLAREID                      shift and go to state 13
    ASIGNID                        shift and go to state 14
    IFSTRUCT                       shift and go to state 15
    CASESTRUCT_S                   shift and go to state 16
    WHILESTRUCT                    shift and go to state 17
    FORSTRUCT                      shift and go to state 18
    FUNCDEC                        shift and go to state 19
    CALLFUNC                       shift and go to state 20
    ENCAP                          shift and go to state 21
    PRINT                          shift and go to state 22

state 297

    (75) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if .

    TK_semicolon    reduce using rule 75 (IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_end RW_if .)


state 298

    (77) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field .

    TK_semicolon    reduce using rule 77 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_field .)


state 299

    (78) CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar .

    TK_semicolon    reduce using rule 78 (CASESTRUCT_S -> RW_case EXP WHENELSE RW_end RW_as TK_nvarchar .)


state 300

    (92) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP . ENCAP RW_loop
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end

    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137
    RW_begin        shift and go to state 38

    ENCAP                          shift and go to state 317

state 301

    (140) CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .

    TK_semicolon    reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_plus         reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_minus        reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_mult         reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_div          reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_mod          reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_equalequal   reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_equal        reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_notequal     reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_lessequal    reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_greatequal   reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_less         reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_great        reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_and          reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_or           reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_as           reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_comma        reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_from         reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_then         reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_begin        reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_else         reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_when         reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_rpar         reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_end          reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    TK_dot          reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)
    RW_where        reduce using rule 140 (CAST -> RW_cas TK_lpar EXP RW_as TYPE TK_rpar .)


state 302

    (141) NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_equalequal   reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 141 (NATIVEFUNC -> RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar .)


state 303

    (142) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma . EXP TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 318
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 304

    (144) TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma . EXP TK_rpar
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 319
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 305

    (48) ATTRIBUTE -> TK_field TYPE TK_lpar . TK_int TK_rpar PROPS
    (50) ATTRIBUTE -> TK_field TYPE TK_lpar . TK_int TK_rpar

    TK_int          shift and go to state 320


state 306

    (49) ATTRIBUTE -> TK_field TYPE PROPS .

    TK_rpar         reduce using rule 49 (ATTRIBUTE -> TK_field TYPE PROPS .)
    TK_comma        reduce using rule 49 (ATTRIBUTE -> TK_field TYPE PROPS .)


state 307

    (53) PROPS -> RW_not . RW_null RW_primary RW_key
    (55) PROPS -> RW_not . RW_null

    RW_null         shift and go to state 321


state 308

    (54) PROPS -> RW_primary . RW_key RW_not RW_null
    (56) PROPS -> RW_primary . RW_key

    RW_key          shift and go to state 322


state 309

    (46) ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .

    TK_rpar         reduce using rule 46 (ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .)
    TK_comma        reduce using rule 46 (ATTRIBUTES -> ATTRIBUTES TK_comma ATTRIBUTE .)


state 310

    (52) ATTRIBUTE -> RW_foreing RW_key TK_lpar . TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 323


state 311

    (93) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns . TYPE ENCAP
    (145) TYPE -> . RW_int
    (146) TYPE -> . RW_bit
    (147) TYPE -> . RW_decimal
    (148) TYPE -> . RW_date
    (149) TYPE -> . RW_datetime
    (150) TYPE -> . RW_nchar
    (151) TYPE -> . RW_nvarchar

    RW_int          shift and go to state 165
    RW_bit          shift and go to state 166
    RW_decimal      shift and go to state 167
    RW_date         shift and go to state 168
    RW_datetime     shift and go to state 169
    RW_nchar        shift and go to state 170
    RW_nvarchar     shift and go to state 171

    TYPE                           shift and go to state 324

state 312

    (94) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE . ENCAP
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 38

    ENCAP                          shift and go to state 325

state 313

    (61) ACTION -> RW_rename RW_column TK_field RW_to . TK_field

    TK_field        shift and go to state 326


state 314

    (63) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values . TK_lpar LIST_EXPS TK_rpar

    TK_lpar         shift and go to state 327


state 315

    (64) LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .

    TK_rpar         reduce using rule 64 (LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .)
    TK_comma        reduce using rule 64 (LIST_ATTRIBS -> LIST_ATTRIBS TK_comma TK_field .)


state 316

    (74) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end . RW_if

    RW_if           shift and go to state 328


state 317

    (92) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP . RW_loop

    RW_loop         shift and go to state 329


state 318

    (142) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP . TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 330
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 319

    (144) TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP . TK_rpar
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_rpar         shift and go to state 331
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 320

    (48) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int . TK_rpar PROPS
    (50) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int . TK_rpar

    TK_rpar         shift and go to state 332


state 321

    (53) PROPS -> RW_not RW_null . RW_primary RW_key
    (55) PROPS -> RW_not RW_null .

    RW_primary      shift and go to state 333
    TK_rpar         reduce using rule 55 (PROPS -> RW_not RW_null .)
    TK_comma        reduce using rule 55 (PROPS -> RW_not RW_null .)


state 322

    (54) PROPS -> RW_primary RW_key . RW_not RW_null
    (56) PROPS -> RW_primary RW_key .

    RW_not          shift and go to state 334
    TK_rpar         reduce using rule 56 (PROPS -> RW_primary RW_key .)
    TK_comma        reduce using rule 56 (PROPS -> RW_primary RW_key .)


state 323

    (52) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field . TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar

    TK_rpar         shift and go to state 335


state 324

    (93) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE . ENCAP
    (102) ENCAP -> . RW_begin INSTRUCTIONS RW_end
    (103) ENCAP -> . RW_begin RW_end

    RW_begin        shift and go to state 38

    ENCAP                          shift and go to state 336

state 325

    (94) FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP .

    TK_semicolon    reduce using rule 94 (FUNCDEC -> RW_create RW_function TK_field TK_lpar TK_rpar RW_returns TYPE ENCAP .)


state 326

    (61) ACTION -> RW_rename RW_column TK_field RW_to TK_field .

    TK_semicolon    reduce using rule 61 (ACTION -> RW_rename RW_column TK_field RW_to TK_field .)


state 327

    (63) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar . LIST_EXPS TK_rpar
    (66) LIST_EXPS -> . LIST_EXPS TK_comma EXP
    (67) LIST_EXPS -> . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    LIST_EXPS                      shift and go to state 337
    EXP                            shift and go to state 338
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 328

    (74) IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if .

    TK_semicolon    reduce using rule 74 (IFSTRUCT -> RW_if EXP RW_then INSTRUCTIONS RW_else INSTRUCTIONS RW_end RW_if .)


state 329

    (92) FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop .

    TK_semicolon    reduce using rule 92 (FORSTRUCT -> RW_for TK_id RW_in EXP TK_dot EXP ENCAP RW_loop .)


state 330

    (142) NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equalequal   reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 142 (NATIVEFUNC -> RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)


state 331

    (144) TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .

    TK_semicolon    reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_plus         reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_minus        reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mult         reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_div          reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_mod          reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equalequal   reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_equal        reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_notequal     reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_lessequal    reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_greatequal   reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_less         reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_great        reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_and          reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_or           reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_as           reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_comma        reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_from         reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_then         reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_begin        reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_else         reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_when         reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_rpar         reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_end          reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    TK_dot          reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)
    RW_where        reduce using rule 144 (TERNARY -> RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar .)


state 332

    (48) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar . PROPS
    (50) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar .
    (53) PROPS -> . RW_not RW_null RW_primary RW_key
    (54) PROPS -> . RW_primary RW_key RW_not RW_null
    (55) PROPS -> . RW_not RW_null
    (56) PROPS -> . RW_primary RW_key

    TK_rpar         reduce using rule 50 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar .)
    TK_comma        reduce using rule 50 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar .)
    RW_not          shift and go to state 307
    RW_primary      shift and go to state 308

    PROPS                          shift and go to state 339

state 333

    (53) PROPS -> RW_not RW_null RW_primary . RW_key

    RW_key          shift and go to state 340


state 334

    (54) PROPS -> RW_primary RW_key RW_not . RW_null

    RW_null         shift and go to state 341


state 335

    (52) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar . RW_ref TK_field TK_lpar TK_field TK_rpar

    RW_ref          shift and go to state 342


state 336

    (93) FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP .

    TK_semicolon    reduce using rule 93 (FUNCDEC -> RW_create RW_function TK_field TK_lpar PARAMS TK_rpar RW_returns TYPE ENCAP .)


state 337

    (63) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS . TK_rpar
    (66) LIST_EXPS -> LIST_EXPS . TK_comma EXP

    TK_rpar         shift and go to state 343
    TK_comma        shift and go to state 344


state 338

    (67) LIST_EXPS -> EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 67 (LIST_EXPS -> EXP .)
    TK_comma        reduce using rule 67 (LIST_EXPS -> EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 339

    (48) ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS .

    TK_rpar         reduce using rule 48 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS .)
    TK_comma        reduce using rule 48 (ATTRIBUTE -> TK_field TYPE TK_lpar TK_int TK_rpar PROPS .)


state 340

    (53) PROPS -> RW_not RW_null RW_primary RW_key .

    TK_rpar         reduce using rule 53 (PROPS -> RW_not RW_null RW_primary RW_key .)
    TK_comma        reduce using rule 53 (PROPS -> RW_not RW_null RW_primary RW_key .)


state 341

    (54) PROPS -> RW_primary RW_key RW_not RW_null .

    TK_rpar         reduce using rule 54 (PROPS -> RW_primary RW_key RW_not RW_null .)
    TK_comma        reduce using rule 54 (PROPS -> RW_primary RW_key RW_not RW_null .)


state 342

    (52) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref . TK_field TK_lpar TK_field TK_rpar

    TK_field        shift and go to state 345


state 343

    (63) INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar .

    TK_semicolon    reduce using rule 63 (INSERTREG -> RW_insert RW_into TK_field TK_lpar LIST_ATTRIBS TK_rpar RW_values TK_lpar LIST_EXPS TK_rpar .)


state 344

    (66) LIST_EXPS -> LIST_EXPS TK_comma . EXP
    (108) EXP -> . ARITHMETICS
    (109) EXP -> . RELATIONALS
    (110) EXP -> . LOGICS
    (111) EXP -> . CAST
    (112) EXP -> . NATIVEFUNC
    (113) EXP -> . CALLFUNC
    (114) EXP -> . TERNARY
    (115) EXP -> . TK_id
    (116) EXP -> . TK_field
    (117) EXP -> . TK_nvarchar
    (118) EXP -> . TK_int
    (119) EXP -> . TK_decimal
    (120) EXP -> . TK_date
    (121) EXP -> . TK_datetime
    (122) EXP -> . RW_null
    (123) EXP -> . TK_lpar EXP TK_rpar
    (124) ARITHMETICS -> . EXP TK_plus EXP
    (125) ARITHMETICS -> . EXP TK_minus EXP
    (126) ARITHMETICS -> . EXP TK_mult EXP
    (127) ARITHMETICS -> . EXP TK_div EXP
    (128) ARITHMETICS -> . EXP TK_mod EXP
    (129) ARITHMETICS -> . TK_minus EXP
    (130) RELATIONALS -> . EXP TK_equalequal EXP
    (131) RELATIONALS -> . EXP TK_equal EXP
    (132) RELATIONALS -> . EXP TK_notequal EXP
    (133) RELATIONALS -> . EXP TK_lessequal EXP
    (134) RELATIONALS -> . EXP TK_greatequal EXP
    (135) RELATIONALS -> . EXP TK_less EXP
    (136) RELATIONALS -> . EXP TK_great EXP
    (137) LOGICS -> . EXP TK_and EXP
    (138) LOGICS -> . EXP TK_or EXP
    (139) LOGICS -> . TK_not EXP
    (140) CAST -> . RW_cas TK_lpar EXP RW_as TYPE TK_rpar
    (141) NATIVEFUNC -> . RW_concatenar TK_lpar EXP TK_comma EXP TK_rpar
    (142) NATIVEFUNC -> . RW_substraer TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar
    (143) NATIVEFUNC -> . RW_hoy TK_lpar TK_rpar
    (104) CALLFUNC -> . TK_field TK_lpar ARGS TK_rpar
    (105) CALLFUNC -> . TK_field TK_lpar TK_rpar
    (144) TERNARY -> . RW_if TK_lpar EXP TK_comma EXP TK_comma EXP TK_rpar

    TK_id           shift and go to state 74
    TK_field        shift and go to state 75
    TK_nvarchar     shift and go to state 76
    TK_int          shift and go to state 77
    TK_decimal      shift and go to state 78
    TK_date         shift and go to state 79
    TK_datetime     shift and go to state 80
    RW_null         shift and go to state 81
    TK_lpar         shift and go to state 82
    TK_minus        shift and go to state 83
    TK_not          shift and go to state 84
    RW_cas          shift and go to state 85
    RW_concatenar   shift and go to state 86
    RW_substraer    shift and go to state 87
    RW_hoy          shift and go to state 88
    RW_if           shift and go to state 89

    EXP                            shift and go to state 346
    ARITHMETICS                    shift and go to state 67
    RELATIONALS                    shift and go to state 68
    LOGICS                         shift and go to state 69
    CAST                           shift and go to state 70
    NATIVEFUNC                     shift and go to state 71
    CALLFUNC                       shift and go to state 72
    TERNARY                        shift and go to state 73

state 345

    (52) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field . TK_lpar TK_field TK_rpar

    TK_lpar         shift and go to state 347


state 346

    (66) LIST_EXPS -> LIST_EXPS TK_comma EXP .
    (124) ARITHMETICS -> EXP . TK_plus EXP
    (125) ARITHMETICS -> EXP . TK_minus EXP
    (126) ARITHMETICS -> EXP . TK_mult EXP
    (127) ARITHMETICS -> EXP . TK_div EXP
    (128) ARITHMETICS -> EXP . TK_mod EXP
    (130) RELATIONALS -> EXP . TK_equalequal EXP
    (131) RELATIONALS -> EXP . TK_equal EXP
    (132) RELATIONALS -> EXP . TK_notequal EXP
    (133) RELATIONALS -> EXP . TK_lessequal EXP
    (134) RELATIONALS -> EXP . TK_greatequal EXP
    (135) RELATIONALS -> EXP . TK_less EXP
    (136) RELATIONALS -> EXP . TK_great EXP
    (137) LOGICS -> EXP . TK_and EXP
    (138) LOGICS -> EXP . TK_or EXP

    TK_rpar         reduce using rule 66 (LIST_EXPS -> LIST_EXPS TK_comma EXP .)
    TK_comma        reduce using rule 66 (LIST_EXPS -> LIST_EXPS TK_comma EXP .)
    TK_plus         shift and go to state 124
    TK_minus        shift and go to state 125
    TK_mult         shift and go to state 126
    TK_div          shift and go to state 127
    TK_mod          shift and go to state 128
    TK_equalequal   shift and go to state 129
    TK_equal        shift and go to state 130
    TK_notequal     shift and go to state 131
    TK_lessequal    shift and go to state 132
    TK_greatequal   shift and go to state 133
    TK_less         shift and go to state 134
    TK_great        shift and go to state 135
    TK_and          shift and go to state 136
    TK_or           shift and go to state 137


state 347

    (52) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar . TK_field TK_rpar

    TK_field        shift and go to state 348


state 348

    (52) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field . TK_rpar

    TK_rpar         shift and go to state 349


state 349

    (52) ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar .

    TK_rpar         reduce using rule 52 (ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar .)
    TK_comma        reduce using rule 52 (ATTRIBUTE -> RW_foreing RW_key TK_lpar TK_field TK_rpar RW_ref TK_field TK_lpar TK_field TK_rpar .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TK_plus in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_minus in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_mult in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_div in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_mod in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_equalequal in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_equal in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_notequal in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_lessequal in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_greatequal in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_less in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_great in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_and in state 189 resolved as shift
WARNING: shift/reduce conflict for TK_or in state 189 resolved as shift
